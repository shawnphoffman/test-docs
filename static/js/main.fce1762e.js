!function(e){function t(a){if(n[a])return n[a].exports;var r=n[a]={exports:{},id:a,loaded:!1};return e[a].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="/test-docs/",t(0)}(function(e){for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))switch(typeof e[t]){case"function":break;case"object":e[t]=function(t){var n=t.slice(1),a=e[t[0]];return function(e,t,r){a.apply(this,[e,t,r].concat(n))}}(e[t]);break;default:e[t]=e[e[t]]}return e}([function(e,t,n){n(119),e.exports=n(164)},function(e,t,n){"use strict";e.exports=n(23)},function(e,t,n){"use strict";function a(e,t,n,a,s,o,i,l){if(r(t),!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var m=[n,a,s,o,i,l],d=0;u=new Error(t.replace(/%s/g,function(){return m[d++]})),u.name="Invariant Violation"}throw u.framesToPop=1,u}}var r=function(e){};e.exports=a},function(e,t,n){"use strict";var a=n(11),r=a;e.exports=r},function(e,t,n){e.exports=n(215)()},function(e,t){"use strict";function n(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,a=0;a<t;a++)n+="&args[]="+encodeURIComponent(arguments[a+1]);n+=" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";var r=new Error(n);throw r.name="Invariant Violation",r.framesToPop=1,r}e.exports=n},function(e,t){"use strict";function n(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function a(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;var a=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if("0123456789"!==a.join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}var r=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=a()?Object.assign:function(e,t){for(var a,i,l=n(e),u=1;u<arguments.length;u++){a=Object(arguments[u]);for(var m in a)s.call(a,m)&&(l[m]=a[m]);if(r){i=r(a);for(var d=0;d<i.length;d++)o.call(a,i[d])&&(l[i[d]]=a[i[d]])}}return l}},function(e,t,n){"use strict";function a(e,t){return 1===e.nodeType&&e.getAttribute(h)===String(t)||8===e.nodeType&&e.nodeValue===" react-text: "+t+" "||8===e.nodeType&&e.nodeValue===" react-empty: "+t+" "}function r(e){for(var t;t=e._renderedComponent;)e=t;return e}function s(e,t){var n=r(e);n._hostNode=t,t[y]=n}function o(e){var t=e._hostNode;t&&(delete t[y],e._hostNode=null)}function i(e,t){if(!(e._flags&f.hasCachedChildNodes)){var n=e._renderedChildren,o=t.firstChild;e:for(var i in n)if(n.hasOwnProperty(i)){var l=n[i],u=r(l)._domID;if(0!==u){for(;null!==o;o=o.nextSibling)if(a(o,u)){s(l,o);continue e}d("32",u)}}e._flags|=f.hasCachedChildNodes}}function l(e){if(e[y])return e[y];for(var t=[];!e[y];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}for(var n,a;e&&(a=e[y]);e=t.pop())n=a,t.length&&i(a,e);return n}function u(e){var t=l(e);return null!=t&&t._hostNode===e?t:null}function m(e){if(void 0===e._hostNode?d("33"):void 0,e._hostNode)return e._hostNode;for(var t=[];!e._hostNode;)t.push(e),e._hostParent?void 0:d("34"),e=e._hostParent;for(;t.length;e=t.pop())i(e,e._hostNode);return e._hostNode}var d=n(5),c=n(21),p=n(86),h=(n(2),c.ID_ATTRIBUTE_NAME),f=p,y="__reactInternalInstance$"+Math.random().toString(36).slice(2),g={getClosestInstanceFromNode:l,getInstanceFromNode:u,getNodeFromInstance:m,precacheChildNodes:i,precacheNode:s,uncacheNode:o};e.exports=g},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.withRouter=t.matchPath=t.Switch=t.StaticRouter=t.Router=t.Route=t.Redirect=t.Prompt=t.MemoryRouter=void 0;var r=n(304),s=a(r),o=n(305),i=a(o),l=n(306),u=a(l),m=n(110),d=a(m),c=n(66),p=a(c),h=n(307),f=a(h),y=n(308),g=a(y),v=n(67),b=a(v),T=n(309),w=a(T);t.MemoryRouter=s.default,t.Prompt=i.default,t.Redirect=u.default,t.Route=d.default,t.Router=p.default,t.StaticRouter=f.default,t.Switch=g.default,t.matchPath=b.default,t.withRouter=w.default},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.withRouter=t.matchPath=t.Switch=t.StaticRouter=t.Router=t.Route=t.Redirect=t.Prompt=t.NavLink=t.MemoryRouter=t.Link=t.HashRouter=t.BrowserRouter=void 0;var r=n(290),s=a(r),o=n(291),i=a(o),l=n(107),u=a(l),m=n(292),d=a(m),c=n(293),p=a(c),h=n(294),f=a(h),y=n(295),g=a(y),v=n(296),b=a(v),T=n(297),w=a(T),S=n(298),E=a(S),R=n(299),P=a(R),C=n(300),k=a(C),I=n(301),A=a(I);t.BrowserRouter=s.default,t.HashRouter=i.default,t.Link=u.default,t.MemoryRouter=d.default,t.NavLink=p.default,t.Prompt=f.default,t.Redirect=g.default,t.Route=b.default,t.Router=w.default,t.StaticRouter=E.default,t.Switch=P.default,t.matchPath=k.default,t.withRouter=A.default},function(e,t){"use strict";var n=!("undefined"==typeof window||!window.document||!window.document.createElement),a={canUseDOM:n,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:n&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:n&&!!window.screen,isInWorker:!n};e.exports=a},function(e,t){"use strict";function n(e){return function(){return e}}var a=function(){};a.thatReturns=n,a.thatReturnsFalse=n(!1),a.thatReturnsTrue=n(!0),a.thatReturnsNull=n(null),a.thatReturnsThis=function(){return this},a.thatReturnsArgument=function(e){return e},e.exports=a},function(e,t,n){"use strict";var a=null;e.exports={debugTool:a}},function(e,t,n){"use strict";function a(){k.ReactReconcileTransaction&&w?void 0:m("123")}function r(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=c.getPooled(),this.reconcileTransaction=k.ReactReconcileTransaction.getPooled(!0)}function s(e,t,n,r,s,o){return a(),w.batchedUpdates(e,t,n,r,s,o)}function o(e,t){return e._mountOrder-t._mountOrder}function i(e){var t=e.dirtyComponentsLength;t!==g.length?m("124",t,g.length):void 0,g.sort(o),v++;for(var n=0;n<t;n++){var a=g[n],r=a._pendingCallbacks;a._pendingCallbacks=null;var s;if(h.logTopLevelRenders){var i=a;a._currentElement.type.isReactTopLevelWrapper&&(i=a._renderedComponent),s="React update: "+i.getName(),console.time(s)}if(f.performUpdateIfNecessary(a,e.reconcileTransaction,v),s&&console.timeEnd(s),r)for(var l=0;l<r.length;l++)e.callbackQueue.enqueue(r[l],a.getPublicInstance())}}function l(e){return a(),w.isBatchingUpdates?(g.push(e),void(null==e._updateBatchNumber&&(e._updateBatchNumber=v+1))):void w.batchedUpdates(l,e)}function u(e,t){w.isBatchingUpdates?void 0:m("125"),b.enqueue(e,t),T=!0}var m=n(5),d=n(6),c=n(84),p=n(17),h=n(89),f=n(22),y=n(35),g=(n(2),[]),v=0,b=c.getPooled(),T=!1,w=null,S={initialize:function(){this.dirtyComponentsLength=g.length},close:function(){this.dirtyComponentsLength!==g.length?(g.splice(0,this.dirtyComponentsLength),P()):g.length=0}},E={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},R=[S,E];d(r.prototype,y,{getTransactionWrappers:function(){return R},destructor:function(){this.dirtyComponentsLength=null,c.release(this.callbackQueue),this.callbackQueue=null,k.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return y.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),p.addPoolingTo(r);var P=function(){for(;g.length||T;){if(g.length){var e=r.getPooled();e.perform(i,null,e),r.release(e)}if(T){T=!1;var t=b;b=c.getPooled(),t.notifyAll(),c.release(t)}}},C={injectReconcileTransaction:function(e){e?void 0:m("126"),k.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:m("127"),"function"!=typeof e.batchedUpdates?m("128"):void 0,"boolean"!=typeof e.isBatchingUpdates?m("129"):void 0,w=e}},k={ReactReconcileTransaction:null,batchedUpdates:s,enqueueUpdate:l,flushBatchedUpdates:P,injection:C,asap:u};e.exports=k},function(e,t,n){"use strict";function a(e,t,n,a){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n;var r=this.constructor.Interface;for(var s in r)if(r.hasOwnProperty(s)){var i=r[s];i?this[s]=i(n):"target"===s?this.target=a:this[s]=n[s]}var l=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;return l?this.isDefaultPrevented=o.thatReturnsTrue:this.isDefaultPrevented=o.thatReturnsFalse,this.isPropagationStopped=o.thatReturnsFalse,this}var r=n(6),s=n(17),o=n(11),i=(n(3),"function"==typeof Proxy,["dispatchConfig","_targetInst","nativeEvent","isDefaultPrevented","isPropagationStopped","_dispatchListeners","_dispatchInstances"]),l={type:null,target:null,currentTarget:o.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};r(a.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=o.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=o.thatReturnsTrue)},persist:function(){this.isPersistent=o.thatReturnsTrue},isPersistent:o.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;for(var n=0;n<i.length;n++)this[i[n]]=null}}),a.Interface=l,a.augmentClass=function(e,t){var n=this,a=function(){};a.prototype=n.prototype;var o=new a;r(o,e.prototype),e.prototype=o,e.prototype.constructor=e,e.Interface=r({},n.Interface,t),e.augmentClass=n.augmentClass,s.addPoolingTo(e,s.fourArgumentPooler)},s.addPoolingTo(a,s.fourArgumentPooler),e.exports=a},function(e,t){"use strict";var n={current:null};e.exports=n},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.connect=t.connectAdvanced=t.Provider=void 0;var r=n(281),s=a(r),o=n(103),i=a(o),l=n(282),u=a(l);t.Provider=s.default,t.connectAdvanced=i.default,t.connect=u.default},[331,5],function(e,t,n){"use strict";var a=function(){};e.exports=a},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(9),i=function(){return s.default.createElement("footer",null,s.default.createElement("p",null,"© ",(new Date).getFullYear()," ",s.default.createElement("a",{href:"http://dynamicsignal.com"},"Dynamic Signal Inc.")," All rights reserved."),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement(o.Link,{to:"http://dynamicsignal.com/about-us/"},"About")),s.default.createElement("li",null,s.default.createElement(o.Link,{to:"http://dynamicsignal.com/contact-us/"},"Contact")),s.default.createElement("li",null,s.default.createElement(o.Link,{to:"http://dynamicsignal.com/blog/"},"Corporate Blog"))))};t.default=i},function(e,t,n){"use strict";function a(e){if(y){var t=e.node,n=e.children;if(n.length)for(var a=0;a<n.length;a++)g(t,n[a],null);else null!=e.html?d(t,e.html):null!=e.text&&p(t,e.text)}}function r(e,t){e.parentNode.replaceChild(t.node,e),a(t)}function s(e,t){y?e.children.push(t):e.node.appendChild(t.node)}function o(e,t){y?e.html=t:d(e.node,t)}function i(e,t){y?e.text=t:p(e.node,t)}function l(){return this.node.nodeName}function u(e){return{node:e,children:[],html:null,text:null,toString:l}}var m=n(49),d=n(37),c=n(57),p=n(101),h=1,f=11,y="undefined"!=typeof document&&"number"==typeof document.documentMode||"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent&&/\bEdge\/\d/.test(navigator.userAgent),g=c(function(e,t,n){t.node.nodeType===f||t.node.nodeType===h&&"object"===t.node.nodeName.toLowerCase()&&(null==t.node.namespaceURI||t.node.namespaceURI===m.html)?(a(t),e.insertBefore(t.node,n)):(e.insertBefore(t.node,n),a(t))});u.insertTreeBefore=g,u.replaceChildWithTree=r,u.queueChild=s,u.queueHTML=o,u.queueText=i,e.exports=u},function(e,t,n){"use strict";function a(e,t){return(e&t)===t}var r=n(5),s=(n(2),{MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,injectDOMPropertyConfig:function(e){var t=s,n=e.Properties||{},o=e.DOMAttributeNamespaces||{},l=e.DOMAttributeNames||{},u=e.DOMPropertyNames||{},m=e.DOMMutationMethods||{};e.isCustomAttribute&&i._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var d in n){i.properties.hasOwnProperty(d)?r("48",d):void 0;var c=d.toLowerCase(),p=n[d],h={attributeName:c,attributeNamespace:null,propertyName:d,mutationMethod:null,mustUseProperty:a(p,t.MUST_USE_PROPERTY),hasBooleanValue:a(p,t.HAS_BOOLEAN_VALUE),hasNumericValue:a(p,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:a(p,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:a(p,t.HAS_OVERLOADED_BOOLEAN_VALUE)};if(h.hasBooleanValue+h.hasNumericValue+h.hasOverloadedBooleanValue<=1?void 0:r("50",d),l.hasOwnProperty(d)){var f=l[d];h.attributeName=f}o.hasOwnProperty(d)&&(h.attributeNamespace=o[d]),u.hasOwnProperty(d)&&(h.propertyName=u[d]),m.hasOwnProperty(d)&&(h.mutationMethod=m[d]),i.properties[d]=h}}}),o=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",i={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:o,ATTRIBUTE_NAME_CHAR:o+"\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<i._isCustomAttributeFunctions.length;t++){var n=i._isCustomAttributeFunctions[t];if(n(e))return!0}return!1},injection:s};e.exports=i},function(e,t,n){"use strict";function a(){r.attachRefs(this,this._currentElement)}var r=n(253),s=(n(12),n(3),{mountComponent:function(e,t,n,r,s,o){var i=e.mountComponent(t,n,r,s,o);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(a,e),i},getHostNode:function(e){return e.getHostNode()},unmountComponent:function(e,t){r.detachRefs(e,e._currentElement),e.unmountComponent(t)},receiveComponent:function(e,t,n,s){var o=e._currentElement;if(t!==o||s!==e._context){var i=r.shouldUpdateRefs(o,t);i&&r.detachRefs(e,o),e.receiveComponent(t,n,s),i&&e._currentElement&&null!=e._currentElement.ref&&n.getReactMountReady().enqueue(a,e)}},performUpdateIfNecessary:function(e,t,n){e._updateBatchNumber===n&&e.performUpdateIfNecessary(t)}});e.exports=s},function(e,t,n){"use strict";var a=n(6),r=n(312),s=n(68),o=n(317),i=n(313),l=n(314),u=n(24),m=n(315),d=n(318),c=n(319),p=(n(3),u.createElement),h=u.createFactory,f=u.cloneElement,y=a,g={Children:{map:r.map,forEach:r.forEach,count:r.count,toArray:r.toArray,only:c},Component:s,PureComponent:o,createElement:p,cloneElement:f,isValidElement:u.isValidElement,PropTypes:m,createClass:i.createClass,createFactory:h,createMixin:function(e){return e},DOM:l,version:d,__spread:y};e.exports=g},function(e,t,n){"use strict";function a(e){return void 0!==e.ref}function r(e){return void 0!==e.key}var s=n(6),o=n(15),i=(n(3),n(114),Object.prototype.hasOwnProperty),l=n(112),u={key:!0,ref:!0,__self:!0,__source:!0},m=function(e,t,n,a,r,s,o){var i={$$typeof:l,type:e,key:t,ref:n,props:o,_owner:s};return i};m.createElement=function(e,t,n){var s,l={},d=null,c=null,p=null,h=null;if(null!=t){a(t)&&(c=t.ref),r(t)&&(d=""+t.key),p=void 0===t.__self?null:t.__self,h=void 0===t.__source?null:t.__source;for(s in t)i.call(t,s)&&!u.hasOwnProperty(s)&&(l[s]=t[s])}var f=arguments.length-2;if(1===f)l.children=n;else if(f>1){for(var y=Array(f),g=0;g<f;g++)y[g]=arguments[g+2];l.children=y}if(e&&e.defaultProps){var v=e.defaultProps;for(s in v)void 0===l[s]&&(l[s]=v[s])}return m(e,d,c,p,h,o.current,l)},m.createFactory=function(e){var t=m.createElement.bind(null,e);return t.type=e,t},m.cloneAndReplaceKey=function(e,t){var n=m(e.type,t,e.ref,e._self,e._source,e._owner,e.props);return n},m.cloneElement=function(e,t,n){var l,d=s({},e.props),c=e.key,p=e.ref,h=e._self,f=e._source,y=e._owner;if(null!=t){a(t)&&(p=t.ref,y=o.current),r(t)&&(c=""+t.key);var g;e.type&&e.type.defaultProps&&(g=e.type.defaultProps);for(l in t)i.call(t,l)&&!u.hasOwnProperty(l)&&(void 0===t[l]&&void 0!==g?d[l]=g[l]:d[l]=t[l])}var v=arguments.length-2;if(1===v)d.children=n;else if(v>1){for(var b=Array(v),T=0;T<v;T++)b[T]=arguments[T+2];d.children=b}return m(e.type,c,p,h,f,y,d)},m.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===l},e.exports=m},5,function(e,t,n){"use strict";var a={};e.exports=a},function(e,t){"use strict";t.__esModule=!0;t.addLeadingSlash=function(e){return"/"===e.charAt(0)?e:"/"+e},t.stripLeadingSlash=function(e){return"/"===e.charAt(0)?e.substr(1):e},t.stripPrefix=function(e,t){return 0===e.indexOf(t)?e.substr(t.length):e},t.stripTrailingSlash=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},t.parsePath=function(e){var t=e||"/",n="",a="",r=t.indexOf("#");r!==-1&&(a=t.substr(r),t=t.substr(0,r));var s=t.indexOf("?");return s!==-1&&(n=t.substr(s),t=t.substr(0,s)),t=decodeURI(t),{pathname:t,search:"?"===n?"":n,hash:"#"===a?"":a}},t.createPath=function(e){var t=e.pathname,n=e.search,a=e.hash,r=encodeURI(t||"/");return n&&"?"!==n&&(r+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(r+="#"===a.charAt(0)?a:"#"+a),r}},function(e,t,n){"use strict";var a=function(e,t,n,a,r,s,o,i){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,a,r,s,o,i],m=0;l=new Error(t.replace(/%s/g,function(){return u[m++]})),l.name="Invariant Violation"}throw l.framesToPop=1,l}};e.exports=a},function(e,t,n){"use strict";function a(e){return"button"===e||"input"===e||"select"===e||"textarea"===e}function r(e,t,n){switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":return!(!n.disabled||!a(t));default:return!1}}var s=n(5),o=n(50),i=n(51),l=n(55),u=n(95),m=n(96),d=(n(2),{}),c=null,p=function(e,t){e&&(i.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))},h=function(e){return p(e,!0)},f=function(e){return p(e,!1)},y=function(e){return"."+e._rootNodeID},g={injection:{injectEventPluginOrder:o.injectEventPluginOrder,injectEventPluginsByName:o.injectEventPluginsByName},putListener:function(e,t,n){"function"!=typeof n?s("94",t,typeof n):void 0;var a=y(e),r=d[t]||(d[t]={});r[a]=n;var i=o.registrationNameModules[t];i&&i.didPutListener&&i.didPutListener(e,t,n)},getListener:function(e,t){var n=d[t];if(r(t,e._currentElement.type,e._currentElement.props))return null;var a=y(e);return n&&n[a]},deleteListener:function(e,t){var n=o.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t);var a=d[t];if(a){var r=y(e);delete a[r]}},deleteAllListeners:function(e){var t=y(e);for(var n in d)if(d.hasOwnProperty(n)&&d[n][t]){var a=o.registrationNameModules[n];a&&a.willDeleteListener&&a.willDeleteListener(e,n),delete d[n][t]}},extractEvents:function(e,t,n,a){for(var r,s=o.plugins,i=0;i<s.length;i++){var l=s[i];if(l){var m=l.extractEvents(e,t,n,a);m&&(r=u(r,m))}}return r},enqueueEvents:function(e){e&&(c=u(c,e))},processEventQueue:function(e){var t=c;c=null,e?m(t,h):m(t,f),c?s("95"):void 0,l.rethrowCaughtError()},__purge:function(){d={}},__getListenerBank:function(){return d}};e.exports=g},function(e,t,n){"use strict";function a(e,t,n){var a=t.dispatchConfig.phasedRegistrationNames[n];return g(e,a)}function r(e,t,n){var r=a(e,n,t);r&&(n._dispatchListeners=f(n._dispatchListeners,r),n._dispatchInstances=f(n._dispatchInstances,e))}function s(e){e&&e.dispatchConfig.phasedRegistrationNames&&h.traverseTwoPhase(e._targetInst,r,e)}function o(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst,n=t?h.getParentInstance(t):null;h.traverseTwoPhase(n,r,e)}}function i(e,t,n){if(n&&n.dispatchConfig.registrationName){var a=n.dispatchConfig.registrationName,r=g(e,a);r&&(n._dispatchListeners=f(n._dispatchListeners,r),n._dispatchInstances=f(n._dispatchInstances,e))}}function l(e){e&&e.dispatchConfig.registrationName&&i(e._targetInst,null,e)}function u(e){y(e,s)}function m(e){y(e,o)}function d(e,t,n,a){h.traverseEnterLeave(n,a,i,e,t)}function c(e){y(e,l)}var p=n(29),h=n(51),f=n(95),y=n(96),g=(n(3),p.getListener),v={accumulateTwoPhaseDispatches:u,accumulateTwoPhaseDispatchesSkipTarget:m,accumulateDirectDispatches:c,accumulateEnterLeaveDispatches:d};e.exports=v},function(e,t){"use strict";var n={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,t){e._reactInternalInstance=t}};e.exports=n},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(14),s=n(60),o={view:function(e){if(e.view)return e.view;var t=s(e);if(t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};r.augmentClass(a,o),e.exports=a},function(e,t,n){"use strict";function a(e){return Object.prototype.hasOwnProperty.call(e,f)||(e[f]=p++,d[e[f]]={}),d[e[f]]}var r,s=n(6),o=n(50),i=n(245),l=n(94),u=n(278),m=n(61),d={},c=!1,p=0,h={topAbort:"abort",topAnimationEnd:u("animationend")||"animationend",topAnimationIteration:u("animationiteration")||"animationiteration",topAnimationStart:u("animationstart")||"animationstart",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:u("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},f="_reactListenersID"+String(Math.random()).slice(2),y=s({},i,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(y.handleTopLevel),y.ReactEventListener=e}},setEnabled:function(e){y.ReactEventListener&&y.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!y.ReactEventListener||!y.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var n=t,r=a(n),s=o.registrationNameDependencies[e],i=0;i<s.length;i++){var l=s[i];r.hasOwnProperty(l)&&r[l]||("topWheel"===l?m("wheel")?y.ReactEventListener.trapBubbledEvent("topWheel","wheel",n):m("mousewheel")?y.ReactEventListener.trapBubbledEvent("topWheel","mousewheel",n):y.ReactEventListener.trapBubbledEvent("topWheel","DOMMouseScroll",n):"topScroll"===l?m("scroll",!0)?y.ReactEventListener.trapCapturedEvent("topScroll","scroll",n):y.ReactEventListener.trapBubbledEvent("topScroll","scroll",y.ReactEventListener.WINDOW_HANDLE):"topFocus"===l||"topBlur"===l?(m("focus",!0)?(y.ReactEventListener.trapCapturedEvent("topFocus","focus",n),y.ReactEventListener.trapCapturedEvent("topBlur","blur",n)):m("focusin")&&(y.ReactEventListener.trapBubbledEvent("topFocus","focusin",n),y.ReactEventListener.trapBubbledEvent("topBlur","focusout",n)),r.topBlur=!0,r.topFocus=!0):h.hasOwnProperty(l)&&y.ReactEventListener.trapBubbledEvent(l,h[l],n),r[l]=!0)}},trapBubbledEvent:function(e,t,n){return y.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return y.ReactEventListener.trapCapturedEvent(e,t,n)},supportsEventPageXY:function(){if(!document.createEvent)return!1;var e=document.createEvent("MouseEvent");return null!=e&&"pageX"in e},ensureScrollValueMonitoring:function(){if(void 0===r&&(r=y.supportsEventPageXY()),!r&&!c){var e=l.refreshScrollValues;y.ReactEventListener.monitorScrollValue(e),c=!0}}});e.exports=y},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(32),s=n(94),o=n(59),i={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:o,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+s.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+s.currentScrollTop}};r.augmentClass(a,i),e.exports=a},function(e,t,n){"use strict";var a=n(5),r=(n(2),{}),s={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,n,r,s,o,i,l){this.isInTransaction()?a("27"):void 0;var u,m;try{this._isInTransaction=!0,u=!0,this.initializeAll(0),m=e.call(t,n,r,s,o,i,l),u=!1}finally{try{if(u)try{this.closeAll(0)}catch(e){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return m},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){var a=t[n];try{this.wrapperInitData[n]=r,this.wrapperInitData[n]=a.initialize?a.initialize.call(this):null}finally{if(this.wrapperInitData[n]===r)try{this.initializeAll(n+1)}catch(e){}}}},closeAll:function(e){this.isInTransaction()?void 0:a("28");for(var t=this.transactionWrappers,n=e;n<t.length;n++){var s,o=t[n],i=this.wrapperInitData[n];try{s=!0,i!==r&&o.close&&o.close.call(this,i),s=!1}finally{if(s)try{this.closeAll(n+1)}catch(e){}}}this.wrapperInitData.length=0}};e.exports=s},function(e,t){"use strict";function n(e){var t=""+e,n=r.exec(t);if(!n)return t;var a,s="",o=0,i=0;for(o=n.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:a="&quot;";break;case 38:a="&amp;";break;case 39:a="&#x27;";break;case 60:a="&lt;";break;case 62:a="&gt;";break;default:continue}i!==o&&(s+=t.substring(i,o)),i=o+1,s+=a}return i!==o?s+t.substring(i,o):s}function a(e){return"boolean"==typeof e||"number"==typeof e?""+e:n(e)}var r=/["'&<>]/;e.exports=a},function(e,t,n){"use strict";var a,r=n(10),s=n(49),o=/^[ \r\n\t\f]/,i=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,l=n(57),u=l(function(e,t){if(e.namespaceURI!==s.svg||"innerHTML"in e)e.innerHTML=t;else{a=a||document.createElement("div"),a.innerHTML="<svg>"+t+"</svg>";for(var n=a.firstChild;n.firstChild;)e.appendChild(n.firstChild)}});if(r.canUseDOM){var m=document.createElement("div");m.innerHTML=" ",""===m.innerHTML&&(u=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),o.test(t)||"<"===t[0]&&i.test(t)){e.innerHTML=String.fromCharCode(65279)+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t}),m=null}e.exports=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(19),i=a(o),l=function(){return s.default.createElement("div",{className:"page"},s.default.createElement("div",{className:"content",id:"content"},s.default.createElement("div",{className:"section"},s.default.createElement("h1",null,"404 - Not Found")),s.default.createElement(i.default,null)))};t.default=l},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(8),p=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidUpdate",value:function(e){if(this.props.location.pathname!==e.location.pathname){var t=window.document.body,n=0;if(this.props.scrollElId&&(t=document.getElementById(this.props.scrollElId)),this.props.location.hash){var a=document.getElementById(this.props.location.hash.substr(1));a&&(n=a.offsetTop-t.offsetTop)}t.scrollTop=n,t.scrollLeft=0}}},{key:"render",value:function(){return this.props.children}}]),t}(u.default.Component);p.propTypes={scrollElId:d.default.string},t.default=(0,c.withRouter)(p)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(9),u=function(e){switch(e){case"#date-time-formatting":return"/widgets/customize#date-time-formatting";case"#date-time-callback":return"/widgets/customize#date-time-callback";case"#post-image-sizes":return"/widgets/customize#post-image-sizes";case"#user-image-sizes":return"/widgets/customize#user-image-sizes";case"api#GET_v1_post":return"/api/Posts#get_post";case"api#GET_v1_stream":return"/api/Streams#get_stream";case"api#postResponse_response":return"/api/Posts#get_post_response";case"api#GET_v1_community_info":return"/api/Community#get_community-info"}return e},m=function(e,t,n,a){return s.default.createElement("span",{key:e},t,n&&a&&s.default.createElement(l.Link,{to:u(a)},n))},d=function(e){var t=e.desc,n=/\[([^|]+)+\|([^\]]+)\]/g,a=n.exec(t),r=t,o=0,i=[];if(null!==a){for(;null!==a;)i.push({start:o,text:a.input.substring(o,a.index),linkText:a[1],linkUrl:a[2]}),o=a.index+a[0].length,a=n.exec(t);i.push({text:t.substr(o)}),r=i.map(function(e,t){return m(t,e.text,e.linkText,e.linkUrl)})}return s.default.createElement("span",null,r)};d.propTypes={desc:i.default.string.isRequired},t.default=d},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(9),u=function(e){switch(e){case"youTubeEmbedOptions":return s.default.createElement("div",null,s.default.createElement("p",null,"The following variables are replaced in the string:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"$width")," – Width from the youtubeVideoWidth option"),s.default.createElement("li",null,s.default.createElement("strong",null,"$height")," – Height from the youtubeVideoHeight option"),s.default.createElement("li",null,s.default.createElement("strong",null,"$id")," – ID of YouTube video")));
case"postLinkFormatOptions":return s.default.createElement("div",null,s.default.createElement("p",null,"The following variables are replaced in the URL:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"$id")," – ID of the post"),s.default.createElement("li",null,s.default.createElement("strong",null,"$slug")," – The SEO text added to public links to the post")),s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},"{ postLinkFormat: 'https://example.org/post/$slug/$id' }")));case"profileLinkFormatOptions":return s.default.createElement("div",null,s.default.createElement("p",null,"The following variables are replaced in the URL:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"$id")," – ID of the user")),s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},"{ profileLinkFormat: 'https://example.org/profile?user=$id' }")));case"authorFormatOptions":return s.default.createElement("div",null,s.default.createElement("p",null,"The following variables are replaced in the string:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"$author")," – display name of the post author")));case"conversationLinkFormatOptions":return s.default.createElement("div",null,s.default.createElement("p",null,"The following variables are replaced in the URL:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"$id")," – ID of the post")));case"bylineFormatOptions":return s.default.createElement("div",null,s.default.createElement("p",null,"The following variables will be replaced in the byline with values from the post:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"$authorName")," – The post author’s name"),s.default.createElement("li",null,s.default.createElement("strong",null,"$date")," – The date the post was published in MMM D, YYYY format"),s.default.createElement("li",null,s.default.createElement("strong",null,"$date","{format}")," – The date the post was published using a custom format string. See ",s.default.createElement(l.Link,{to:"/widgets/customize#date-time-formatting"},"Date and Time Format Strings")," for details.")));case"submitLinkImportResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the import. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status")," – Indicates whether the import succeeded. ",s.default.createElement("code",null,'"success"')," indicates the import succeeded or partially succeeded. ",s.default.createElement("code",null,'"error"')," indicates an invalid link URL."),s.default.createElement("li",null,s.default.createElement("strong",null,"post")," – The post that was imported. See ",s.default.createElement(l.Link,{to:"/api/Posts#get_post_response"},"postResponse")," for details.")));case"submitLinkSubmitResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the import. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status")," – Indicates whether the submission succeeded. ",s.default.createElement("code",null,'"success"')," indicates the post was submitted to the community. ",s.default.createElement("code",null,'"error"')," indicates the post could not be submitted."),s.default.createElement("li",null,s.default.createElement("strong",null,"unknownError")," – Diagnostic information about why the post submission failed."),s.default.createElement("li",null,s.default.createElement("strong",null,"errors")," – A string array of user input error indicators. The array may be empty or contain one or more of the following:",s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("code",null,'"titleRequired"'),": A title was not provided for the post."),s.default.createElement("li",null,s.default.createElement("code",null,'"tagRequired"'),": Tags are required by the community on new posts and no tags were selected.")))));case"profileAddChannelsSubmitResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the removal. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status")," –",s.default.createElement("code",null,'"success"')," indicates the user’s social channel was connected.",s.default.createElement("code",null,'"error"')," indicates the user’s social channel could not be connected."),s.default.createElement("li",null,s.default.createElement("strong",null,"result")," – If status=",s.default.createElement("code",null,'"success"'),", this field contains information about the add. Otherwise, this field is not present."),s.default.createElement("li",null,s.default.createElement("strong",null,"error")," – If status=",s.default.createElement("code",null,'"error"'),", this field contains information about the error. Otherwise, this field is not present.")));case"profileChannelsRemoveResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the removal. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status")," –",s.default.createElement("code",null,'"success"')," indicates the user’s social channel was disconnected.",s.default.createElement("code",null,'"error"')," indicates the user’s social channel could not be disconnected."),s.default.createElement("li",null,s.default.createElement("strong",null,"user")," – If status=",s.default.createElement("code",null,'"success"'),", this field contains information about the removal. See ",s.default.createElement(l.Link,{to:"/api/Users#post_userremovechannel"},"POST /v1/userremovechannel"),". Otherwise, this field is not present."),s.default.createElement("li",null,s.default.createElement("strong",null,"error")," – If status=",s.default.createElement("code",null,'"error"'),", this field contains information about the error. Otherwise, this field is not present.")));case"profileChangePasswordResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the submit. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status")," –",s.default.createElement("code",null,'"success"')," indicates the user’s changes were submitted.",s.default.createElement("code",null,'"error"')," indicates the user’s changes were not submitted."),s.default.createElement("li",null,s.default.createElement("strong",null,"result")," – If status=",s.default.createElement("code",null,'"success"'),", this field contains information about the result of the change. See ",s.default.createElement(l.Link,{to:"/api/Login/#post_changepassword"},"POST /v1/login/changepassword"),"Otherwise, this field is not present."),s.default.createElement("li",null,s.default.createElement("strong",null,"error")," – If status=",s.default.createElement("code",null,'"error"'),", this field contains information about the error. Otherwise, this field is not present.")));case"profileUserResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the submit. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status"),": ",s.default.createElement("code",null,'"success"')," indicates the user's changes were submitted. ",s.default.createElement("code",null,'"error"')," indicates the user's changes were not submitted"),s.default.createElement("li",null,s.default.createElement("strong",null,"user"),": If status = ",s.default.createElement("code",null,'"success"'),", this field contains the updated user. See the response object of ",s.default.createElement(l.Link,{to:"/api/Users/#post_user"},"POST /v1/user"),". Otherwise, this field is not present"),s.default.createElement("li",null,s.default.createElement("strong",null,"error"),": If status = ",s.default.createElement("code",null,'"error"'),", this field contains information about the error. Otherwise, this field is not present")));case"profileNotificationResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the submit. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status"),": ",s.default.createElement("code",null,'"success"')," indicates the user's changes were submitted. ",s.default.createElement("code",null,'"error"')," indicates the user's changes were not submitted"),s.default.createElement("li",null,s.default.createElement("strong",null,"result"),": If status = ",s.default.createElement("code",null,'"success"'),", this field contains information about the result of the change. See ",s.default.createElement(l.Link,{to:"/api/Users/#get_usernotificationspreferences"},"GET /v1/usernotificationspreferences"),".Otherwise, this field is not present"),s.default.createElement("li",null,s.default.createElement("strong",null,"error"),": If status = ",s.default.createElement("code",null,'"error"'),", this field contains information about the error. Otherwise, this field is not present")));case"profilePhotoSize":return s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"Original")," – Full size"),s.default.createElement("li",null,s.default.createElement("strong",null,"Square160")," – Scaled, centered, and cropped to completely fill an 160x160 box"),s.default.createElement("li",null,s.default.createElement("strong",null,"Square80")," – Scaled, centered, and cropped to completely fill an 80x80 box"),s.default.createElement("li",null,s.default.createElement("strong",null,"Square40")," – Scaled, centered, and cropped to completely fill an 40x40 box"),s.default.createElement("li",null,s.default.createElement("strong",null,"Square20")," – Scaled, centered, and cropped to completely fill an 20x20 box"));case"profilePhotoResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the submit. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status"),": ",s.default.createElement("code",null,'"success"')," indicates the user's changes were submitted. \" error\" indicates the user's changes were not submitted"),s.default.createElement("li",null,s.default.createElement("strong",null,"user"),": If status = ",s.default.createElement("code",null,'"success"'),", this field contains the updated user. See ",s.default.createElement(l.Link,{to:"/api/Users/#get_userprofileimage"},"PUT /v1/userprofileimage"),". Otherwise, this field is not present"),s.default.createElement("li",null,s.default.createElement("strong",null,"error"),': If status = "error", this field contains information about the error. Otherwise, this field is not present')));case"profileCategorySubscriptionsResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the submit. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"status"),": ",s.default.createElement("code",null,'"success"')," indicates the user's changes were submitted. ",s.default.createElement("code",null,'"error"')," indicates the user's changes were not submitted"),s.default.createElement("li",null,s.default.createElement("strong",null,"result"),": If status = ",s.default.createElement("code",null,'"success"'),", this field contains the updated category subscriptions. Otherwise, this field is not present"),s.default.createElement("li",null,s.default.createElement("strong",null,"error"),": If status = ",s.default.createElement("code",null,'"error"'),", this field contains information about the error. Otherwise, this field is not present")));case"broadcastAcknowledgedResponse":return s.default.createElement("div",null,s.default.createElement("p",null,"The event handler for this event is passed an extra parameter that details the response to the acknowlegement. The response object properties are:"),s.default.createElement("ul",null,s.default.createElement("li",null,s.default.createElement("strong",null,"readConfirmationDate"),": An ISO8601 Date and Time string representing the date that the viewer confirmed receipt of the broadcast")));case"profilePhotoSummary":return s.default.createElement("div",null,s.default.createElement("p",null,"You can test for support of the FileReader classes:"),s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},'if (!(window.File && window.FileReader && (typeof FileReader !== "undefined")\n    && window.FileList && window.Blob && window.FormData)) {\n\t// ProfilePhoto not supported\n}')),s.default.createElement("p",null,"and display an appropriate message if the support does not exist."));default:return null}},m=function(e){var t=e.helperName;return u(t)};m.propTypes={helperName:i.default.string.isRequired},t.default=m},function(e,t){"use strict";function n(e){return(""+e.verbs[0]+e.path[0].replace(/{|}|[\/]v1/g,"").replace(/[\/]/g,"-")).toLowerCase()}function a(e){var t=["GET","POST","PUT","DELETE","OPTIONS"],n=e.map(function(e,t){return{index:t,verb:e.verbs[0],path:e.name[0]}});return n.sort(function(e,n){var a=t.indexOf(e.verb)-t.indexOf(n.verb);return 0!==a?a:e.path<n.path?-1:e.path>n.path?1:0}),n.map(function(t){return e[t.index]})}function r(e){var t=e.replace("Request","");t=t.replace("Response",""),t=t.replace("Put",""),t=t.replace("Upload","");var n=t.split(/(?=[A-Z])/);return n.join("")}Object.defineProperty(t,"__esModule",{value:!0}),t.getRouteLink=n,t.sortApiRoutes=a,t.cleanRequestName=r},function(e,t){"use strict";function n(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function a(e,t){if(n(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var a=Object.keys(e),s=Object.keys(t);if(a.length!==s.length)return!1;for(var o=0;o<a.length;o++)if(!r.call(t,a[o])||!n(e[a[o]],t[a[o]]))return!1;return!0}var r=Object.prototype.hasOwnProperty;e.exports=a},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.locationsAreEqual=t.createLocation=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(324),o=a(s),i=n(328),l=a(i),u=n(27);t.createLocation=function(e,t,n,a){var s=void 0;return"string"==typeof e?(s=(0,u.parsePath)(e),s.state=t):(s=r({},e),void 0===s.pathname&&(s.pathname=""),s.search?"?"!==s.search.charAt(0)&&(s.search="?"+s.search):s.search="",s.hash?"#"!==s.hash.charAt(0)&&(s.hash="#"+s.hash):s.hash="",void 0!==t&&void 0===s.state&&(s.state=t)),s.key=n,a&&(s.pathname?"/"!==s.pathname.charAt(0)&&(s.pathname=(0,o.default)(s.pathname,a.pathname)):s.pathname=a.pathname),s},t.locationsAreEqual=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&(0,l.default)(e.state,t.state)}},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(18),s=a(r),o=function(){var e=null,t=function(t){return(0,s.default)(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},n=function(t,n,a,r){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof a?a(o,r):((0,s.default)(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),r(!0)):r(o!==!1)}else r(!0)},a=[],r=function(e){var t=!0,n=function(){t&&e.apply(void 0,arguments)};return a.push(n),function(){t=!1,a=a.filter(function(e){return e!==n})}},o=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];a.forEach(function(e){return e.apply(void 0,t)})};return{setPrompt:t,confirmTransitionTo:n,appendListener:r,notifyListeners:o}};t.default=o},function(e,t,n){function a(e){if(!o(e)||r(e)!=i)return!1;var t=s(e);if(null===t)return!0;var n=d.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&m.call(n)==c}var r=n(204),s=n(206),o=n(211),i="[object Object]",l=Function.prototype,u=Object.prototype,m=l.toString,d=u.hasOwnProperty,c=m.call(Object);e.exports=a},function(e,t,n){"use strict";e.exports=n(230)},function(e,t,n){"use strict";function a(e,t){return Array.isArray(t)&&(t=t[1]),t?t.nextSibling:e.firstChild}function r(e,t,n){m.insertTreeBefore(e,t,n)}function s(e,t,n){Array.isArray(t)?i(e,t[0],t[1],n):f(e,t,n)}function o(e,t){if(Array.isArray(t)){var n=t[1];t=t[0],l(e,t,n),e.removeChild(n)}e.removeChild(t)}function i(e,t,n,a){for(var r=t;;){var s=r.nextSibling;if(f(e,r,a),r===n)break;r=s}}function l(e,t,n){for(;;){var a=t.nextSibling;if(a===n)break;e.removeChild(a)}}function u(e,t,n){var a=e.parentNode,r=e.nextSibling;r===t?n&&f(a,document.createTextNode(n),r):n?(h(r,n),l(a,r,t)):l(a,e,t)}var m=n(20),d=n(222),c=(n(7),n(12),n(57)),p=n(37),h=n(101),f=c(function(e,t,n){e.insertBefore(t,n)}),y=d.dangerouslyReplaceNodeWithMarkup,g={dangerouslyReplaceNodeWithMarkup:y,replaceDelimitedText:u,processUpdates:function(e,t){for(var n=0;n<t.length;n++){var i=t[n];switch(i.type){case"INSERT_MARKUP":r(e,i.content,a(e,i.afterNode));break;case"MOVE_EXISTING":s(e,i.fromNode,a(e,i.afterNode));break;case"SET_MARKUP":p(e,i.content);break;case"TEXT_CONTENT":h(e,i.content);break;case"REMOVE_NODE":o(e,i.fromNode)}}}};e.exports=g},function(e,t){"use strict";var n={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};e.exports=n},function(e,t,n){"use strict";function a(){if(i)for(var e in l){var t=l[e],n=i.indexOf(e);if(n>-1?void 0:o("96",e),!u.plugins[n]){t.extractEvents?void 0:o("97",e),u.plugins[n]=t;var a=t.eventTypes;for(var s in a)r(a[s],t,s)?void 0:o("98",s,e)}}}function r(e,t,n){u.eventNameDispatchConfigs.hasOwnProperty(n)?o("99",n):void 0,u.eventNameDispatchConfigs[n]=e;var a=e.phasedRegistrationNames;if(a){for(var r in a)if(a.hasOwnProperty(r)){var i=a[r];s(i,t,n)}return!0}return!!e.registrationName&&(s(e.registrationName,t,n),!0)}function s(e,t,n){u.registrationNameModules[e]?o("100",e):void 0,u.registrationNameModules[e]=t,u.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var o=n(5),i=(n(2),null),l={},u={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){i?o("101"):void 0,i=Array.prototype.slice.call(e),a()},injectEventPluginsByName:function(e){var t=!1;for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];l.hasOwnProperty(n)&&l[n]===r||(l[n]?o("102",n):void 0,l[n]=r,t=!0)}t&&a()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return u.registrationNameModules[t.registrationName]||null;if(void 0!==t.phasedRegistrationNames){var n=t.phasedRegistrationNames;for(var a in n)if(n.hasOwnProperty(a)){var r=u.registrationNameModules[n[a]];if(r)return r}}return null},_resetEventPlugins:function(){i=null;for(var e in l)l.hasOwnProperty(e)&&delete l[e];u.plugins.length=0;var t=u.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var a=u.registrationNameModules;for(var r in a)a.hasOwnProperty(r)&&delete a[r]}};e.exports=u},function(e,t,n){"use strict";function a(e){return"topMouseUp"===e||"topTouchEnd"===e||"topTouchCancel"===e}function r(e){return"topMouseMove"===e||"topTouchMove"===e}function s(e){return"topMouseDown"===e||"topTouchStart"===e}function o(e,t,n,a){var r=e.type||"unknown-event";e.currentTarget=g.getNodeFromInstance(a),t?f.invokeGuardedCallbackWithCatch(r,n,e):f.invokeGuardedCallback(r,n,e),e.currentTarget=null}function i(e,t){var n=e._dispatchListeners,a=e._dispatchInstances;if(Array.isArray(n))for(var r=0;r<n.length&&!e.isPropagationStopped();r++)o(e,t,n[r],a[r]);else n&&o(e,t,n,a);e._dispatchListeners=null,e._dispatchInstances=null}function l(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var a=0;a<t.length&&!e.isPropagationStopped();a++)if(t[a](e,n[a]))return n[a]}else if(t&&t(e,n))return n;return null}function u(e){var t=l(e);return e._dispatchInstances=null,e._dispatchListeners=null,t}function m(e){var t=e._dispatchListeners,n=e._dispatchInstances;Array.isArray(t)?h("103"):void 0,e.currentTarget=t?g.getNodeFromInstance(n):null;var a=t?t(e):null;return e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,a}function d(e){return!!e._dispatchListeners}var c,p,h=n(5),f=n(55),y=(n(2),n(3),{injectComponentTree:function(e){c=e},injectTreeTraversal:function(e){p=e}}),g={isEndish:a,isMoveish:r,isStartish:s,executeDirectDispatch:m,executeDispatchesInOrder:i,executeDispatchesInOrderStopAtTrue:u,hasDispatches:d,getInstanceFromNode:function(e){return c.getInstanceFromNode(e)},getNodeFromInstance:function(e){return c.getNodeFromInstance(e)},isAncestor:function(e,t){return p.isAncestor(e,t)},getLowestCommonAncestor:function(e,t){return p.getLowestCommonAncestor(e,t)},getParentInstance:function(e){return p.getParentInstance(e)},traverseTwoPhase:function(e,t,n){return p.traverseTwoPhase(e,t,n)},traverseEnterLeave:function(e,t,n,a,r){return p.traverseEnterLeave(e,t,n,a,r)},injection:y};e.exports=g},function(e,t){"use strict";function n(e){var t=/[=:]/g,n={"=":"=0",":":"=2"},a=(""+e).replace(t,function(e){return n[e]});return"$"+a}function a(e){var t=/(=0|=2)/g,n={"=0":"=","=2":":"},a="."===e[0]&&"$"===e[1]?e.substring(2):e.substring(1);return(""+a).replace(t,function(e){return n[e]})}var r={escape:n,unescape:a};e.exports=r},function(e,t,n){"use strict";function a(e){null!=e.checkedLink&&null!=e.valueLink?i("87"):void 0}function r(e){a(e),null!=e.value||null!=e.onChange?i("88"):void 0}function s(e){a(e),null!=e.checked||null!=e.onChange?i("89"):void 0}function o(e){if(e){var t=e.getName();if(t)return" Check the render method of `"+t+"`."}return""}var i=n(5),l=n(23),u=n(251),m=(n(2),n(3),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),d={value:function(e,t,n){return!e[t]||m[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t,n){return!e[t]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:l.PropTypes.func},c={},p={checkPropTypes:function(e,t,n){for(var a in d){if(d.hasOwnProperty(a))var r=d[a](t,a,e,"prop",null,u);if(r instanceof Error&&!(r.message in c)){c[r.message]=!0;o(n)}}},getValue:function(e){return e.valueLink?(r(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(s(e),e.checkedLink.value):e.checked},executeOnChange:function(e,t){return e.valueLink?(r(e),e.valueLink.requestChange(t.target.value)):e.checkedLink?(s(e),e.checkedLink.requestChange(t.target.checked)):e.onChange?e.onChange.call(void 0,t):void 0}};e.exports=p},function(e,t,n){"use strict";var a=n(5),r=(n(2),!1),s={replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){r?a("104"):void 0,s.replaceNodeWithMarkup=e.replaceNodeWithMarkup,s.processChildrenUpdates=e.processChildrenUpdates,r=!0}}};e.exports=s},function(e,t,n){"use strict";function a(e,t,n){try{t(n)}catch(e){null===r&&(r=e)}}var r=null,s={invokeGuardedCallback:a,invokeGuardedCallbackWithCatch:a,rethrowCaughtError:function(){if(r){var e=r;throw r=null,e}}};e.exports=s},function(e,t,n){"use strict";function a(e){l.enqueueUpdate(e)}function r(e){var t=typeof e;if("object"!==t)return t;var n=e.constructor&&e.constructor.name||t,a=Object.keys(e);return a.length>0&&a.length<20?n+" (keys: "+a.join(", ")+")":n}function s(e,t){var n=i.get(e);if(!n){return null}return n}var o=n(5),i=(n(15),n(31)),l=(n(12),n(13)),u=(n(2),n(3),{isMounted:function(e){var t=i.get(e);return!!t&&!!t._renderedComponent},enqueueCallback:function(e,t,n){u.validateCallback(t,n);var r=s(e);return r?(r._pendingCallbacks?r._pendingCallbacks.push(t):r._pendingCallbacks=[t],void a(r)):null},enqueueCallbackInternal:function(e,t){e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t],a(e)},enqueueForceUpdate:function(e){var t=s(e,"forceUpdate");t&&(t._pendingForceUpdate=!0,a(t))},enqueueReplaceState:function(e,t){var n=s(e,"replaceState");n&&(n._pendingStateQueue=[t],n._pendingReplaceState=!0,a(n))},enqueueSetState:function(e,t){var n=s(e,"setState");if(n){var r=n._pendingStateQueue||(n._pendingStateQueue=[]);r.push(t),a(n)}},enqueueElementInternal:function(e,t,n){e._pendingElement=t,e._context=n,a(e)},validateCallback:function(e,t){e&&"function"!=typeof e?o("122",t,r(e)):void 0}});e.exports=u},function(e,t){"use strict";var n=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,a,r){MSApp.execUnsafeLocalFunction(function(){return e(t,n,a,r)})}:e};e.exports=n},function(e,t){"use strict";function n(e){var t,n=e.keyCode;return"charCode"in e?(t=e.charCode,0===t&&13===n&&(t=13)):t=n,t>=32||13===t?t:0}e.exports=n},function(e,t){"use strict";function n(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var a=r[e];return!!a&&!!n[a]}function a(e){return n}var r={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};e.exports=a},function(e,t){"use strict";function n(e){var t=e.target||e.srcElement||window;return t.correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}e.exports=n},function(e,t,n){"use strict";function a(e,t){if(!s.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,a=n in document;if(!a){var o=document.createElement("div");o.setAttribute(n,"return;"),a="function"==typeof o[n]}return!a&&r&&"wheel"===e&&(a=document.implementation.hasFeature("Events.wheel","3.0")),a}var r,s=n(10);s.canUseDOM&&(r=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),e.exports=a},function(e,t){"use strict";function n(e,t){var n=null===e||e===!1,a=null===t||t===!1;if(n||a)return n===a;var r=typeof e,s=typeof t;return"string"===r||"number"===r?"string"===s||"number"===s:"object"===s&&e.type===t.type&&e.key===t.key}e.exports=n},function(e,t,n){"use strict";var a=(n(6),n(11)),r=(n(3),a);e.exports=r},function(e,t){"use strict";function n(e){"undefined"!=typeof console&&"function"==typeof console.error&&console.error(e);try{throw new Error(e)}catch(e){}}t.__esModule=!0,t.default=n},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.routerMiddleware=t.routerActions=t.goForward=t.goBack=t.go=t.replace=t.push=t.CALL_HISTORY_METHOD=t.routerReducer=t.LOCATION_CHANGE=t.ConnectedRouter=void 0;var r=n(109);Object.defineProperty(t,"LOCATION_CHANGE",{enumerable:!0,get:function(){return r.LOCATION_CHANGE}}),Object.defineProperty(t,"routerReducer",{enumerable:!0,get:function(){return r.routerReducer}});var s=n(108);Object.defineProperty(t,"CALL_HISTORY_METHOD",{enumerable:!0,get:function(){return s.CALL_HISTORY_METHOD}}),Object.defineProperty(t,"push",{enumerable:!0,get:function(){return s.push}}),Object.defineProperty(t,"replace",{enumerable:!0,get:function(){return s.replace}}),Object.defineProperty(t,"go",{enumerable:!0,get:function(){return s.go}}),Object.defineProperty(t,"goBack",{enumerable:!0,get:function(){return s.goBack}}),Object.defineProperty(t,"goForward",{enumerable:!0,get:function(){return s.goForward}}),Object.defineProperty(t,"routerActions",{enumerable:!0,get:function(){return s.routerActions}});var o=n(302),i=a(o),l=n(303),u=a(l);t.ConnectedRouter=i.default,t.routerMiddleware=u.default},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l=n(18),u=a(l),m=n(28),d=a(m),c=n(1),p=a(c),h=function(e){function t(){var n,a,o;r(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=s(this,e.call.apply(e,[this].concat(l))),a.state={match:a.computeMatch(a.props.history.location.pathname)},o=n,s(a,o)}return o(t,e),t.prototype.getChildContext=function(){return{router:i({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,a=t.history;(0,d.default)(null==n||1===p.default.Children.count(n),"A <Router> may have only one child element"),this.unlisten=a.listen(function(){e.setState({match:e.computeMatch(a.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){(0,u.default)(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?p.default.Children.only(e):null},t}(p.default.Component);h.propTypes={history:c.PropTypes.object.isRequired,children:c.PropTypes.node},h.contextTypes={router:c.PropTypes.object},h.childContextTypes={router:c.PropTypes.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(212),s=a(r),o={},i=1e4,l=0,u=function(e,t){var n=""+t.end+t.strict,a=o[n]||(o[n]={});if(a[e])return a[e];var r=[],u=(0,s.default)(e,r,t),m={re:u,keys:r};return l<i&&(a[e]=m,l++),m},m=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};"string"==typeof t&&(t={path:t});var n=t,a=n.path,r=void 0===a?"/":a,s=n.exact,o=void 0!==s&&s,i=n.strict,l=void 0!==i&&i,m=u(r,{
end:o,strict:l}),d=m.re,c=m.keys,p=d.exec(e);if(!p)return null;var h=p[0],f=p.slice(1),y=e===h;return o&&!y?null:{path:r,url:"/"===r&&""===h?"/":h,isExact:y,params:c.reduce(function(e,t,n){return e[t.name]=f[n],e},{})}};t.default=m},function(e,t,n){"use strict";function a(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||s}var r=n(25),s=n(69),o=(n(114),n(26));n(2),n(3);a.prototype.isReactComponent={},a.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e?r("85"):void 0,this.updater.enqueueSetState(this,e),t&&this.updater.enqueueCallback(this,t,"setState")},a.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e,"forceUpdate")};e.exports=a},function(e,t,n){"use strict";function a(e,t){}var r=(n(3),{isMounted:function(e){return!1},enqueueCallback:function(e,t){},enqueueForceUpdate:function(e){a(e,"forceUpdate")},enqueueReplaceState:function(e,t){a(e,"replaceState")},enqueueSetState:function(e,t){a(e,"setState")}});e.exports=r},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.compose=t.applyMiddleware=t.bindActionCreators=t.combineReducers=t.createStore=void 0;var r=n(117),s=a(r),o=n(323),i=a(o),l=n(322),u=a(l),m=n(321),d=a(m),c=n(116),p=a(c),h=n(118);a(h);t.createStore=s.default,t.combineReducers=i.default,t.bindActionCreators=u.default,t.applyMiddleware=d.default,t.compose=p.default},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(137),p=a(c),h=n(129),f=a(h),y=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props.field;return u.default.createElement("div",{className:"argument"},u.default.createElement("div",{className:"primary"},u.default.createElement("span",{className:"name"},e.name),u.default.createElement(f.default,{field:e}),e.required&&u.default.createElement("span",{className:"required"},"required")),u.default.createElement("div",{className:"details"},e.summary,e.notes&&u.default.createElement("span",{className:"notes"},"Notes: ",e.notes,")"),e.type.indexOf("Enum")>-1&&u.default.createElement(p.default,{type:e.type})))}}]),t}(u.default.Component);Request.propTypes={field:d.default.object.isRequired},t.default=y},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(71),p=a(c),h=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props.response;return u.default.createElement("div",{className:"response"},u.default.createElement("div",null,u.default.createElement("div",{className:"prop-heading"},u.default.createElement("h4",null,"Response")),u.default.createElement("div",{className:"properties"},e.fields.map(function(e){return u.default.createElement(p.default,{key:e.name,field:e})}))))}}]),t}(u.default.Component);h.propTypes={response:d.default.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(200),p=a(c),h=n(199),f=a(h),y=n(198),g=a(y),v=n(202),b=a(v),T=n(201),w=a(T),S=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidMount",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"componentDidUpdate",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"render",value:function(){var e=this.props.page,t=null;switch(e){case"Intro":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:p.default}});break;case"How":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:f.default}});break;case"Customize":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:g.default}});break;case"Style":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:b.default}});break;case"Ref":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:w.default}});break;default:t=null}return t}}]),t}(u.default.Component);S.propTypes={page:d.default.string.isRequired},t.default=S},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(9),i=n(73),l=a(i),u=function(){return s.default.createElement("div",{className:"widget-ref-header"},s.default.createElement(l.default,{page:"Ref"}),s.default.createElement("p",null,"See ",s.default.createElement(o.Link,{to:"/widgets/how"},"How Widgets Work")," for more details."))};t.default=u},function(e,t,n){"use strict";var a=n(11),r={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:a}},registerDefault:function(){}};e.exports=r},function(e,t){"use strict";function n(e){try{e.focus()}catch(e){}}e.exports=n},function(e,t){"use strict";function n(e){if(e=e||("undefined"!=typeof document?document:void 0),"undefined"==typeof e)return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=n},function(e,t){"use strict";t.__esModule=!0;t.canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement),t.addEventListener=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},t.removeEventListener=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},t.getConfirmation=function(e,t){return t(window.confirm(e))},t.supportsHistory=function(){var e=window.navigator.userAgent;return(e.indexOf("Android 2.")===-1&&e.indexOf("Android 4.0")===-1||e.indexOf("Mobile Safari")===-1||e.indexOf("Chrome")!==-1||e.indexOf("Windows Phone")!==-1)&&(window.history&&"pushState"in window.history)},t.supportsPopStateOnHashChange=function(){return window.navigator.userAgent.indexOf("Trident")===-1},t.supportsGoWithoutReloadUsingHash=function(){return window.navigator.userAgent.indexOf("Firefox")===-1},t.isExtraneousPopstateEvent=function(e){return void 0===e.state&&navigator.userAgent.indexOf("CriOS")===-1}},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=n(18),i=a(o),l=n(28),u=a(l),m=n(44),d=n(27),c=n(45),p=a(c),h=n(78),f="popstate",y="hashchange",g=function(){try{return window.history.state||{}}catch(e){return{}}},v=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,u.default)(h.canUseDOM,"Browser history needs a DOM");var t=window.history,n=(0,h.supportsHistory)(),a=!(0,h.supportsPopStateOnHashChange)(),o=e.forceRefresh,l=void 0!==o&&o,c=e.getUserConfirmation,v=void 0===c?h.getConfirmation:c,b=e.keyLength,T=void 0===b?6:b,w=e.basename?(0,d.stripTrailingSlash)((0,d.addLeadingSlash)(e.basename)):"",S=function(e){var t=e||{},n=t.key,a=t.state,r=window.location,o=r.pathname,i=r.search,l=r.hash,u=o+i+l;return w&&(u=(0,d.stripPrefix)(u,w)),s({},(0,d.parsePath)(u),{state:a,key:n})},E=function(){return Math.random().toString(36).substr(2,T)},R=(0,p.default)(),P=function(e){s(W,e),W.length=t.length,R.notifyListeners(W.location,W.action)},C=function(e){(0,h.isExtraneousPopstateEvent)(e)||A(S(e.state))},k=function(){A(S(g()))},I=!1,A=function(e){if(I)I=!1,P();else{var t="POP";R.confirmTransitionTo(e,t,v,function(n){n?P({action:t,location:e}):_(e)})}},_=function(e){var t=W.location,n=O.indexOf(t.key);n===-1&&(n=0);var a=O.indexOf(e.key);a===-1&&(a=0);var r=n-a;r&&(I=!0,U(r))},x=S(g()),O=[x.key],q=function(e){return w+(0,d.createPath)(e)},D=function(e,a){(0,i.default)(!("object"===("undefined"==typeof e?"undefined":r(e))&&void 0!==e.state&&void 0!==a),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var s="PUSH",o=(0,m.createLocation)(e,a,E(),W.location);R.confirmTransitionTo(o,s,v,function(e){if(e){var a=q(o),r=o.key,u=o.state;if(n)if(t.pushState({key:r,state:u},null,a),l)window.location.href=a;else{var m=O.indexOf(W.location.key),d=O.slice(0,m===-1?0:m+1);d.push(o.key),O=d,P({action:s,location:o})}else(0,i.default)(void 0===u,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=a}})},M=function(e,a){(0,i.default)(!("object"===("undefined"==typeof e?"undefined":r(e))&&void 0!==e.state&&void 0!==a),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var s="REPLACE",o=(0,m.createLocation)(e,a,E(),W.location);R.confirmTransitionTo(o,s,v,function(e){if(e){var a=q(o),r=o.key,u=o.state;if(n)if(t.replaceState({key:r,state:u},null,a),l)window.location.replace(a);else{var m=O.indexOf(W.location.key);m!==-1&&(O[m]=o.key),P({action:s,location:o})}else(0,i.default)(void 0===u,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(a)}})},U=function(e){t.go(e)},N=function(){return U(-1)},L=function(){return U(1)},z=0,j=function(e){z+=e,1===z?((0,h.addEventListener)(window,f,C),a&&(0,h.addEventListener)(window,y,k)):0===z&&((0,h.removeEventListener)(window,f,C),a&&(0,h.removeEventListener)(window,y,k))},F=!1,B=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=R.setPrompt(e);return F||(j(1),F=!0),function(){return F&&(F=!1,j(-1)),t()}},V=function(e){var t=R.appendListener(e);return j(1),function(){j(-1),t()}},W={length:t.length,action:"POP",location:x,createHref:q,push:D,replace:M,go:U,goBack:N,goForward:L,block:B,listen:V};return W};t.default=v},function(e,t,n){var a=n(210),r=a.Symbol;e.exports=r},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function r(e){if(m===setTimeout)return setTimeout(e,0);if((m===n||!m)&&setTimeout)return m=setTimeout,setTimeout(e,0);try{return m(e,0)}catch(t){try{return m.call(null,e,0)}catch(t){return m.call(this,e,0)}}}function s(e){if(d===clearTimeout)return clearTimeout(e);if((d===a||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(e);try{return d(e)}catch(t){try{return d.call(null,e)}catch(t){return d.call(this,e)}}}function o(){f&&p&&(f=!1,p.length?h=p.concat(h):y=-1,h.length&&i())}function i(){if(!f){var e=r(o);f=!0;for(var t=h.length;t;){for(p=h,h=[];++y<t;)p&&p[y].run();y=-1,t=h.length}p=null,f=!1,s(e)}}function l(e,t){this.fun=e,this.array=t}function u(){}var m,d,c=e.exports={};!function(){try{m="function"==typeof setTimeout?setTimeout:n}catch(e){m=n}try{d="function"==typeof clearTimeout?clearTimeout:a}catch(e){d=a}}();var p,h=[],f=!1,y=-1;c.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];h.push(new l(e,t)),1!==h.length||f||r(i)},l.prototype.run=function(){this.fun.apply(null,this.array)},c.title="browser",c.browser=!0,c.env={},c.argv=[],c.version="",c.versions={},c.on=u,c.addListener=u,c.once=u,c.off=u,c.removeListener=u,c.removeAllListeners=u,c.emit=u,c.binding=function(e){throw new Error("process.binding is not supported")},c.cwd=function(){return"/"},c.chdir=function(e){throw new Error("process.chdir is not supported")},c.umask=function(){return 0}},function(e,t,n){"use strict";function a(){}function r(e){try{return e.then}catch(e){return g=e,v}}function s(e,t){try{return e(t)}catch(e){return g=e,v}}function o(e,t,n){try{e(t,n)}catch(e){return g=e,v}}function i(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._45=0,this._81=0,this._65=null,this._54=null,e!==a&&f(e,this)}function l(e,t,n){return new e.constructor(function(r,s){var o=new i(a);o.then(r,s),u(e,new h(t,n,o))})}function u(e,t){for(;3===e._81;)e=e._65;return i._10&&i._10(e),0===e._81?0===e._45?(e._45=1,void(e._54=t)):1===e._45?(e._45=2,void(e._54=[e._54,t])):void e._54.push(t):void m(e,t)}function m(e,t){y(function(){var n=1===e._81?t.onFulfilled:t.onRejected;if(null===n)return void(1===e._81?d(t.promise,e._65):c(t.promise,e._65));var a=s(n,e._65);a===v?c(t.promise,g):d(t.promise,a)})}function d(e,t){if(t===e)return c(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"==typeof t||"function"==typeof t)){var n=r(t);if(n===v)return c(e,g);if(n===e.then&&t instanceof i)return e._81=3,e._65=t,void p(e);if("function"==typeof n)return void f(n.bind(t),e)}e._81=1,e._65=t,p(e)}function c(e,t){e._81=2,e._65=t,i._97&&i._97(e,t),p(e)}function p(e){if(1===e._45&&(u(e,e._54),e._54=null),2===e._45){for(var t=0;t<e._54.length;t++)u(e,e._54[t]);e._54=null}}function h(e,t,n){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=n}function f(e,t){var n=!1,a=o(e,function(e){n||(n=!0,d(t,e))},function(e){n||(n=!0,c(t,e))});n||a!==v||(n=!0,c(t,g))}var y=n(120),g=null,v={};e.exports=i,i._10=null,i._97=null,i._61=a,i.prototype.then=function(e,t){if(this.constructor!==i)return l(this,e,t);var n=new i(a);return u(this,new h(e,t,n)),n}},function(e,t){"use strict";function n(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var a={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},r=["Webkit","ms","Moz","O"];Object.keys(a).forEach(function(e){r.forEach(function(t){a[n(t,e)]=a[e]})});var s={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},o={isUnitlessNumber:a,shorthandPropertyExpansions:s};e.exports=o},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var r=n(5),s=n(17),o=(n(2),function(){function e(t){a(this,e),this._callbacks=null,this._contexts=null,this._arg=t}return e.prototype.enqueue=function(e,t){this._callbacks=this._callbacks||[],this._callbacks.push(e),this._contexts=this._contexts||[],this._contexts.push(t)},e.prototype.notifyAll=function(){var e=this._callbacks,t=this._contexts,n=this._arg;if(e&&t){e.length!==t.length?r("24"):void 0,this._callbacks=null,this._contexts=null;for(var a=0;a<e.length;a++)e[a].call(t[a],n);e.length=0,t.length=0}},e.prototype.checkpoint=function(){return this._callbacks?this._callbacks.length:0},e.prototype.rollback=function(e){this._callbacks&&this._contexts&&(this._callbacks.length=e,this._contexts.length=e)},e.prototype.reset=function(){this._callbacks=null,this._contexts=null},e.prototype.destructor=function(){this.reset()},e}());e.exports=s.addPoolingTo(o)},function(e,t,n){"use strict";function a(e){return!!u.hasOwnProperty(e)||!l.hasOwnProperty(e)&&(i.test(e)?(u[e]=!0,!0):(l[e]=!0,!1))}function r(e,t){return null==t||e.hasBooleanValue&&!t||e.hasNumericValue&&isNaN(t)||e.hasPositiveNumericValue&&t<1||e.hasOverloadedBooleanValue&&t===!1}var s=n(21),o=(n(7),n(12),n(279)),i=(n(3),new RegExp("^["+s.ATTRIBUTE_NAME_START_CHAR+"]["+s.ATTRIBUTE_NAME_CHAR+"]*$")),l={},u={},m={createMarkupForID:function(e){return s.ID_ATTRIBUTE_NAME+"="+o(e)},setAttributeForID:function(e,t){e.setAttribute(s.ID_ATTRIBUTE_NAME,t)},createMarkupForRoot:function(){return s.ROOT_ATTRIBUTE_NAME+'=""'},setAttributeForRoot:function(e){e.setAttribute(s.ROOT_ATTRIBUTE_NAME,"")},createMarkupForProperty:function(e,t){var n=s.properties.hasOwnProperty(e)?s.properties[e]:null;if(n){if(r(n,t))return"";var a=n.attributeName;return n.hasBooleanValue||n.hasOverloadedBooleanValue&&t===!0?a+'=""':a+"="+o(t)}return s.isCustomAttribute(e)?null==t?"":e+"="+o(t):null},createMarkupForCustomAttribute:function(e,t){return a(e)&&null!=t?e+"="+o(t):""},setValueForProperty:function(e,t,n){var a=s.properties.hasOwnProperty(t)?s.properties[t]:null;if(a){var o=a.mutationMethod;if(o)o(e,n);else{if(r(a,n))return void this.deleteValueForProperty(e,t);if(a.mustUseProperty)e[a.propertyName]=n;else{var i=a.attributeName,l=a.attributeNamespace;l?e.setAttributeNS(l,i,""+n):a.hasBooleanValue||a.hasOverloadedBooleanValue&&n===!0?e.setAttribute(i,""):e.setAttribute(i,""+n)}}}else if(s.isCustomAttribute(t))return void m.setValueForAttribute(e,t,n)},setValueForAttribute:function(e,t,n){if(a(t)){null==n?e.removeAttribute(t):e.setAttribute(t,""+n)}},deleteValueForAttribute:function(e,t){e.removeAttribute(t)},deleteValueForProperty:function(e,t){var n=s.properties.hasOwnProperty(t)?s.properties[t]:null;if(n){var a=n.mutationMethod;if(a)a(e,void 0);else if(n.mustUseProperty){var r=n.propertyName;n.hasBooleanValue?e[r]=!1:e[r]=""}else e.removeAttribute(n.attributeName)}else s.isCustomAttribute(t)&&e.removeAttribute(t)}};e.exports=m},function(e,t){"use strict";var n={hasCachedChildNodes:1};e.exports=n},function(e,t,n){"use strict";function a(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,t=i.getValue(e);null!=t&&r(this,Boolean(e.multiple),t)}}function r(e,t,n){var a,r,s=l.getNodeFromInstance(e).options;if(t){for(a={},r=0;r<n.length;r++)a[""+n[r]]=!0;for(r=0;r<s.length;r++){var o=a.hasOwnProperty(s[r].value);s[r].selected!==o&&(s[r].selected=o)}}else{for(a=""+n,r=0;r<s.length;r++)if(s[r].value===a)return void(s[r].selected=!0);s.length&&(s[0].selected=!0)}}function s(e){var t=this._currentElement.props,n=i.executeOnChange(t,e);return this._rootNodeID&&(this._wrapperState.pendingUpdate=!0),u.asap(a,this),n}var o=n(6),i=n(53),l=n(7),u=n(13),m=(n(3),!1),d={getHostProps:function(e,t){return o({},t,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,t){var n=i.getValue(t);e._wrapperState={pendingUpdate:!1,initialValue:null!=n?n:t.defaultValue,listeners:null,onChange:s.bind(e),wasMultiple:Boolean(t.multiple)},void 0===t.value||void 0===t.defaultValue||m||(m=!0)},getSelectValueContext:function(e){return e._wrapperState.initialValue},postUpdateWrapper:function(e){var t=e._currentElement.props;e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(t.multiple);var a=i.getValue(t);null!=a?(e._wrapperState.pendingUpdate=!1,r(e,Boolean(t.multiple),a)):n!==Boolean(t.multiple)&&(null!=t.defaultValue?r(e,Boolean(t.multiple),t.defaultValue):r(e,Boolean(t.multiple),t.multiple?[]:""))}};e.exports=d},function(e,t){"use strict";var n,a={injectEmptyComponentFactory:function(e){n=e}},r={create:function(e){return n(e)}};r.injection=a,e.exports=r},function(e,t){"use strict";var n={logTopLevelRenders:!1};e.exports=n},function(e,t,n){"use strict";function a(e){return i?void 0:o("111",e.type),new i(e)}function r(e){return new l(e)}function s(e){return e instanceof l}var o=n(5),i=(n(2),null),l=null,u={injectGenericComponentClass:function(e){i=e},injectTextComponentClass:function(e){l=e}},m={createInternalComponent:a,createInstanceForText:r,isTextComponent:s,injection:u};e.exports=m},function(e,t,n){"use strict";function a(e){return s(document.documentElement,e)}var r=n(238),s=n(172),o=n(76),i=n(77),l={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)},getSelectionInformation:function(){var e=i();return{focusedElem:e,selectionRange:l.hasSelectionCapabilities(e)?l.getSelection(e):null}},restoreSelection:function(e){var t=i(),n=e.focusedElem,r=e.selectionRange;t!==n&&a(n)&&(l.hasSelectionCapabilities(n)&&l.setSelection(n,r),o(n))},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=r.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,a=t.end;if(void 0===a&&(a=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(a,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var s=e.createTextRange();s.collapse(!0),s.moveStart("character",n),s.moveEnd("character",a-n),s.select()}else r.setOffsets(e,t)}};e.exports=l},function(e,t,n){"use strict";function a(e,t){for(var n=Math.min(e.length,t.length),a=0;a<n;a++)if(e.charAt(a)!==t.charAt(a))return a;return e.length===t.length?-1:n}function r(e){return e?e.nodeType===D?e.documentElement:e.firstChild:null}function s(e){return e.getAttribute&&e.getAttribute(x)||""}function o(e,t,n,a,r){var s;if(w.logTopLevelRenders){var o=e._currentElement.props.child,i=o.type;s="React mount: "+("string"==typeof i?i:i.displayName||i.name),console.time(s)}var l=R.mountComponent(e,n,null,b(e,t),r,0);s&&console.timeEnd(s),e._renderedComponent._topLevelWrapper=e,z._mountImageIntoNode(l,t,e,a,n)}function i(e,t,n,a){var r=C.ReactReconcileTransaction.getPooled(!n&&T.useCreateElement);r.perform(o,null,e,t,r,n,a),C.ReactReconcileTransaction.release(r)}function l(e,t,n){for(R.unmountComponent(e,n),t.nodeType===D&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)}function u(e){var t=r(e);if(t){var n=v.getInstanceFromNode(t);return!(!n||!n._hostParent)}}function m(e){return!(!e||e.nodeType!==q&&e.nodeType!==D&&e.nodeType!==M)}function d(e){var t=r(e),n=t&&v.getInstanceFromNode(t);return n&&!n._hostParent?n:null}function c(e){var t=d(e);return t?t._hostContainerInfo._topLevelWrapper:null}var p=n(5),h=n(20),f=n(21),y=n(23),g=n(33),v=(n(15),n(7)),b=n(232),T=n(234),w=n(89),S=n(31),E=(n(12),n(248)),R=n(22),P=n(56),C=n(13),k=n(26),I=n(99),A=(n(2),n(37)),_=n(62),x=(n(3),f.ID_ATTRIBUTE_NAME),O=f.ROOT_ATTRIBUTE_NAME,q=1,D=9,M=11,U={},N=1,L=function(){this.rootID=N++};L.prototype.isReactComponent={},L.prototype.render=function(){return this.props.child},L.isReactTopLevelWrapper=!0;var z={TopLevelWrapper:L,_instancesByReactRootID:U,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,a,r){return z.scrollMonitor(a,function(){P.enqueueElementInternal(e,t,n),r&&P.enqueueCallbackInternal(e,r)}),e},_renderNewRootComponent:function(e,t,n,a){m(t)?void 0:p("37"),g.ensureScrollValueMonitoring();var r=I(e,!1);C.batchedUpdates(i,r,t,n,a);var s=r._instance.rootID;return U[s]=r,r},renderSubtreeIntoContainer:function(e,t,n,a){return null!=e&&S.has(e)?void 0:p("38"),z._renderSubtreeIntoContainer(e,t,n,a)},_renderSubtreeIntoContainer:function(e,t,n,a){P.validateCallback(a,"ReactDOM.render"),y.isValidElement(t)?void 0:p("39","string"==typeof t?" Instead of passing a string like 'div', pass React.createElement('div') or <div />.":"function"==typeof t?" Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />.":null!=t&&void 0!==t.props?" This may be caused by unintentionally loading two independent copies of React.":"");var o,i=y.createElement(L,{child:t});if(e){var l=S.get(e);o=l._processChildContext(l._context)}else o=k;var m=c(n);if(m){var d=m._currentElement,h=d.props.child;if(_(h,t)){var f=m._renderedComponent.getPublicInstance(),g=a&&function(){a.call(f)};return z._updateRootComponent(m,i,o,n,g),f}z.unmountComponentAtNode(n)}var v=r(n),b=v&&!!s(v),T=u(n),w=b&&!m&&!T,E=z._renderNewRootComponent(i,n,w,o)._renderedComponent.getPublicInstance();return a&&a.call(E),E},render:function(e,t,n){return z._renderSubtreeIntoContainer(null,e,t,n)},unmountComponentAtNode:function(e){m(e)?void 0:p("40");var t=c(e);if(!t){u(e),1===e.nodeType&&e.hasAttribute(O);return!1}return delete U[t._instance.rootID],C.batchedUpdates(l,t,e,!1),!0},_mountImageIntoNode:function(e,t,n,s,o){if(m(t)?void 0:p("41"),s){var i=r(t);if(E.canReuseMarkup(e,i))return void v.precacheNode(n,i);var l=i.getAttribute(E.CHECKSUM_ATTR_NAME);i.removeAttribute(E.CHECKSUM_ATTR_NAME);var u=i.outerHTML;i.setAttribute(E.CHECKSUM_ATTR_NAME,l);var d=e,c=a(d,u),f=" (client) "+d.substring(c-20,c+20)+"\n (server) "+u.substring(c-20,c+20);t.nodeType===D?p("42",f):void 0}if(t.nodeType===D?p("43"):void 0,o.useCreateElement){for(;t.lastChild;)t.removeChild(t.lastChild);h.insertTreeBefore(t,e,null)}else A(t,e),v.precacheNode(n,t.firstChild)}};e.exports=z},function(e,t,n){"use strict";var a=n(5),r=n(23),s=(n(2),{HOST:0,COMPOSITE:1,EMPTY:2,getType:function(e){return null===e||e===!1?s.EMPTY:r.isValidElement(e)?"function"==typeof e.type?s.COMPOSITE:s.HOST:void a("26",e)}});e.exports=s},function(e,t){"use strict";var n={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){n.currentScrollLeft=e.x,n.currentScrollTop=e.y}};e.exports=n},function(e,t,n){"use strict";function a(e,t){return null==t?r("30"):void 0,null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}var r=n(5);n(2);e.exports=a},function(e,t){"use strict";function n(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}e.exports=n},function(e,t,n){"use strict";function a(e){for(var t;(t=e._renderedNodeType)===r.COMPOSITE;)e=e._renderedComponent;return t===r.HOST?e._renderedComponent:t===r.EMPTY?null:void 0}var r=n(93);e.exports=a},function(e,t,n){"use strict";function a(){return!s&&r.canUseDOM&&(s="textContent"in document.documentElement?"textContent":"innerText"),s}var r=n(10),s=null;e.exports=a},function(e,t,n){"use strict";function a(e){if(e){var t=e.getName();if(t)return" Check the render method of `"+t+"`."}return""}function r(e){return"function"==typeof e&&"undefined"!=typeof e.prototype&&"function"==typeof e.prototype.mountComponent&&"function"==typeof e.prototype.receiveComponent}function s(e,t){var n;if(null===e||e===!1)n=u.create(s);else if("object"==typeof e){var i=e,l=i.type;if("function"!=typeof l&&"string"!=typeof l){var c="";c+=a(i._owner),o("130",null==l?l:typeof l,c)}"string"==typeof i.type?n=m.createInternalComponent(i):r(i.type)?(n=new i.type(i),n.getHostNode||(n.getHostNode=n.getNativeNode)):n=new d(i)}else"string"==typeof e||"number"==typeof e?n=m.createInstanceForText(e):o("131",typeof e);return n._mountIndex=0,n._mountImage=null,n}var o=n(5),i=n(6),l=n(229),u=n(88),m=n(90),d=(n(276),n(2),n(3),function(e){this.construct(e)});i(d.prototype,l,{_instantiateReactComponent:s}),e.exports=s},function(e,t){"use strict";function n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!a[e.type]:"textarea"===t}var a={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};e.exports=n},function(e,t,n){"use strict";var a=n(10),r=n(36),s=n(37),o=function(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t};a.canUseDOM&&("textContent"in document.documentElement||(o=function(e,t){return 3===e.nodeType?void(e.nodeValue=t):void s(e,r(t))})),e.exports=o},function(e,t,n){"use strict";function a(e,t){return e&&"object"==typeof e&&null!=e.key?u.escape(e.key):t.toString(36)}function r(e,t,n,s){var c=typeof e;if("undefined"!==c&&"boolean"!==c||(e=null),null===e||"string"===c||"number"===c||"object"===c&&e.$$typeof===i)return n(s,e,""===t?m+a(e,0):t),1;var p,h,f=0,y=""===t?m:t+d;if(Array.isArray(e))for(var g=0;g<e.length;g++)p=e[g],h=y+a(p,g),f+=r(p,h,n,s);else{var v=l(e);if(v){var b,T=v.call(e);if(v!==e.entries)for(var w=0;!(b=T.next()).done;)p=b.value,h=y+a(p,w++),f+=r(p,h,n,s);else for(;!(b=T.next()).done;){var S=b.value;S&&(p=S[1],h=y+u.escape(S[0])+d+a(p,0),f+=r(p,h,n,s))}}else if("object"===c){var E="",R=String(e);o("31","[object Object]"===R?"object with keys {"+Object.keys(e).join(", ")+"}":R,E)}}return f}function s(e,t,n){return null==e?0:r(e,"",t,n)}var o=n(5),i=(n(15),n(244)),l=n(275),u=(n(2),n(52)),m=(n(3),"."),d=":";e.exports=s},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{
default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function i(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}function l(){}function u(e,t){var n={run:function(a){try{var r=e(t.getState(),a);(r!==n.props||n.error)&&(n.shouldComponentUpdate=!0,n.props=r,n.error=null)}catch(e){n.shouldComponentUpdate=!0,n.error=e}}};return n}function m(e){var t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},m=a.getDisplayName,c=void 0===m?function(e){return"ConnectAdvanced("+e+")"}:m,h=a.methodName,g=void 0===h?"connectAdvanced":h,S=a.renderCountProp,E=void 0===S?void 0:S,R=a.shouldHandleStateChanges,P=void 0===R||R,C=a.storeKey,k=void 0===C?"store":C,I=a.withRef,A=void 0!==I&&I,_=i(a,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]),x=k+"Subscription",O=T++,q=(t={},t[k]=b.storeShape,t[x]=b.subscriptionShape,t),D=(n={},n[x]=b.subscriptionShape,n);return function(t){(0,f.default)("function"==typeof t,"You must pass a component to the function returned by connect. Instead received "+JSON.stringify(t));var n=t.displayName||t.name||"Component",a=c(n),i=d({},_,{getDisplayName:c,methodName:g,renderCountProp:E,shouldHandleStateChanges:P,storeKey:k,withRef:A,displayName:a,wrappedComponentName:n,WrappedComponent:t}),m=function(n){function m(e,t){r(this,m);var o=s(this,n.call(this,e,t));return o.version=O,o.state={},o.renderCount=0,o.store=e[k]||t[k],o.propsMode=Boolean(e[k]),o.setWrappedInstance=o.setWrappedInstance.bind(o),(0,f.default)(o.store,'Could not find "'+k+'" in either the context or props of '+('"'+a+'". Either wrap the root component in a <Provider>, ')+('or explicitly pass "'+k+'" as a prop to "'+a+'".')),o.initSelector(),o.initSubscription(),o}return o(m,n),m.prototype.getChildContext=function(){var e,t=this.propsMode?null:this.subscription;return e={},e[x]=t||this.context[x],e},m.prototype.componentDidMount=function(){P&&(this.subscription.trySubscribe(),this.selector.run(this.props),this.selector.shouldComponentUpdate&&this.forceUpdate())},m.prototype.componentWillReceiveProps=function(e){this.selector.run(e)},m.prototype.shouldComponentUpdate=function(){return this.selector.shouldComponentUpdate},m.prototype.componentWillUnmount=function(){this.subscription&&this.subscription.tryUnsubscribe(),this.subscription=null,this.notifyNestedSubs=l,this.store=null,this.selector.run=l,this.selector.shouldComponentUpdate=!1},m.prototype.getWrappedInstance=function(){return(0,f.default)(A,"To access the wrapped instance, you need to specify "+("{ withRef: true } in the options argument of the "+g+"() call.")),this.wrappedInstance},m.prototype.setWrappedInstance=function(e){this.wrappedInstance=e},m.prototype.initSelector=function(){var t=e(this.store.dispatch,i);this.selector=u(t,this.store),this.selector.run(this.props)},m.prototype.initSubscription=function(){if(P){var e=(this.propsMode?this.props:this.context)[x];this.subscription=new v.default(this.store,e,this.onStateChange.bind(this)),this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription)}},m.prototype.onStateChange=function(){this.selector.run(this.props),this.selector.shouldComponentUpdate?(this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate,this.setState(w)):this.notifyNestedSubs()},m.prototype.notifyNestedSubsOnComponentDidUpdate=function(){this.componentDidUpdate=void 0,this.notifyNestedSubs()},m.prototype.isSubscribed=function(){return Boolean(this.subscription)&&this.subscription.isSubscribed()},m.prototype.addExtraProps=function(e){if(!(A||E||this.propsMode&&this.subscription))return e;var t=d({},e);return A&&(t.ref=this.setWrappedInstance),E&&(t[E]=this.renderCount++),this.propsMode&&this.subscription&&(t[x]=this.subscription),t},m.prototype.render=function(){var e=this.selector;if(e.shouldComponentUpdate=!1,e.error)throw e.error;return(0,y.createElement)(t,this.addExtraProps(e.props))},m}(y.Component);return m.WrappedComponent=t,m.displayName=a,m.childContextTypes=D,m.contextTypes=q,m.propTypes=q,(0,p.default)(m,t)}}t.__esModule=!0;var d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};t.default=m;var c=n(184),p=a(c),h=n(28),f=a(h),y=n(1),g=n(288),v=a(g),b=n(105),T=0,w={}},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e){return function(t,n){function a(){return r}var r=e(t,n);return a.dependsOnOwnProps=!1,a}}function s(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function o(e,t){return function(t,n){var a=(n.displayName,function(e,t){return a.dependsOnOwnProps?a.mapToProps(e,t):a.mapToProps(e)});return a.dependsOnOwnProps=!0,a.mapToProps=function(t,n){a.mapToProps=e,a.dependsOnOwnProps=s(e);var r=a(t,n);return"function"==typeof r&&(a.mapToProps=r,a.dependsOnOwnProps=s(r),r=a(t,n)),r},a}}t.__esModule=!0,t.wrapMapToPropsConstant=r,t.getDependsOnOwnProps=s,t.wrapMapToPropsFunc=o;var i=n(106);a(i)},function(e,t,n){"use strict";t.__esModule=!0,t.storeShape=t.subscriptionShape=void 0;var a=n(1);t.subscriptionShape=a.PropTypes.shape({trySubscribe:a.PropTypes.func.isRequired,tryUnsubscribe:a.PropTypes.func.isRequired,notifyNestedSubs:a.PropTypes.func.isRequired,isSubscribed:a.PropTypes.func.isRequired}),t.storeShape=a.PropTypes.shape({subscribe:a.PropTypes.func.isRequired,dispatch:a.PropTypes.func.isRequired,getState:a.PropTypes.func.isRequired})},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){(0,o.default)(e)||(0,l.default)(n+"() in "+t+" must return a plain object. Instead received "+e+".")}t.__esModule=!0,t.default=r;var s=n(46),o=a(s),i=n(64),l=a(i)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},u=n(1),m=a(u),d=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},c=function(e){function t(){var n,a,r;s(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=o(this,e.call.apply(e,[this].concat(l))),a.handleClick=function(e){if(a.props.onClick&&a.props.onClick(e),!e.defaultPrevented&&0===e.button&&!a.props.target&&!d(e)){e.preventDefault();var t=a.context.router.history,n=a.props,r=n.replace,s=n.to;r?t.replace(s):t.push(s)}},r=n,o(a,r)}return i(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=r(e,["replace","to"]),a=this.context.router.history.createHref("string"==typeof t?{pathname:t}:t);return m.default.createElement("a",l({},n,{onClick:this.handleClick,href:a}))},t}(m.default.Component);c.propTypes={onClick:u.PropTypes.func,target:u.PropTypes.string,replace:u.PropTypes.bool,to:u.PropTypes.oneOfType([u.PropTypes.string,u.PropTypes.object]).isRequired},c.defaultProps={replace:!1},c.contextTypes={router:u.PropTypes.shape({history:u.PropTypes.shape({push:u.PropTypes.func.isRequired,replace:u.PropTypes.func.isRequired,createHref:u.PropTypes.func.isRequired}).isRequired}).isRequired},t.default=c},function(e,t){"use strict";function n(e){return function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];return{type:a,payload:{method:e,args:n}}}}t.__esModule=!0;var a=t.CALL_HISTORY_METHOD="@@router/CALL_HISTORY_METHOD",r=t.push=n("push"),s=t.replace=n("replace"),o=t.go=n("go"),i=t.goBack=n("goBack"),l=t.goForward=n("goForward");t.routerActions={push:r,replace:s,go:o,goBack:i,goForward:l}},function(e,t){"use strict";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.type,o=t.payload;return n===r?a({},e,{location:o}):e}t.__esModule=!0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};t.routerReducer=n;var r=t.LOCATION_CHANGE="@@router/LOCATION_CHANGE",s={location:null}},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l=n(18),u=a(l),m=n(1),d=a(m),c=n(67),p=a(c),h=function(e){function t(){var n,a,o;r(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=s(this,e.call.apply(e,[this].concat(l))),a.state={match:a.computeMatch(a.props,a.context.router)},o=n,s(a,o)}return o(t,e),t.prototype.getChildContext=function(){this.context.router;return{router:i({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,a=e.location,r=e.path,s=e.strict,o=e.exact,i=t.route;if(n)return n;var l=(a||i.location).pathname;return r?(0,p.default)(l,{path:r,strict:s,exact:o}):i.match},t.prototype.componentWillMount=function(){var e=this.props,t=e.component,n=e.render,a=e.children;(0,u.default)(!(t&&n),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),(0,u.default)(!(t&&a),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),(0,u.default)(!(n&&a),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){(0,u.default)(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),(0,u.default)(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function e(){var t=this.state.match,n=this.props,a=n.children,r=n.component,e=n.render,s=this.context.router,o=s.history,i=s.route,l=s.staticContext,u=this.props.location||i.location,m={match:t,location:u,history:o,staticContext:l};return r?t?d.default.createElement(r,m):null:e?t?e(m):null:a?"function"==typeof a?a(m):!Array.isArray(a)||a.length?d.default.Children.only(a):null:null},t}(d.default.Component);h.propTypes={computedMatch:m.PropTypes.object,path:m.PropTypes.string,exact:m.PropTypes.bool,strict:m.PropTypes.bool,component:m.PropTypes.func,render:m.PropTypes.func,children:m.PropTypes.oneOfType([m.PropTypes.func,m.PropTypes.node]),location:m.PropTypes.object},h.contextTypes={router:m.PropTypes.shape({history:m.PropTypes.object.isRequired,route:m.PropTypes.object.isRequired,staticContext:m.PropTypes.object})},h.childContextTypes={router:m.PropTypes.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){var t=Function.prototype.toString,n=Object.prototype.hasOwnProperty,a=RegExp("^"+t.call(n).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");try{var r=t.call(e);return a.test(r)}catch(e){return!1}}function r(e){var t=u(e);if(t){var n=t.childIDs;m(e),n.forEach(r)}}function s(e,t,n){return"\n    in "+(e||"Unknown")+(t?" (at "+t.fileName.replace(/^.*[\\\/]/,"")+":"+t.lineNumber+")":n?" (created by "+n+")":"")}function o(e){return null==e?"#empty":"string"==typeof e||"number"==typeof e?"#text":"string"==typeof e.type?e.type:e.type.displayName||e.type.name||"Unknown"}function i(e){var t,n=P.getDisplayName(e),a=P.getElement(e),r=P.getOwnerID(e);return r&&(t=P.getDisplayName(r)),s(n,a&&a._source,t)}var l,u,m,d,c,p,h,f=n(25),y=n(15),g=(n(2),n(3),"function"==typeof Array.from&&"function"==typeof Map&&a(Map)&&null!=Map.prototype&&"function"==typeof Map.prototype.keys&&a(Map.prototype.keys)&&"function"==typeof Set&&a(Set)&&null!=Set.prototype&&"function"==typeof Set.prototype.keys&&a(Set.prototype.keys));if(g){var v=new Map,b=new Set;l=function(e,t){v.set(e,t)},u=function(e){return v.get(e)},m=function(e){v.delete(e)},d=function(){return Array.from(v.keys())},c=function(e){b.add(e)},p=function(e){b.delete(e)},h=function(){return Array.from(b.keys())}}else{var T={},w={},S=function(e){return"."+e},E=function(e){return parseInt(e.substr(1),10)};l=function(e,t){var n=S(e);T[n]=t},u=function(e){var t=S(e);return T[t]},m=function(e){var t=S(e);delete T[t]},d=function(){return Object.keys(T).map(E)},c=function(e){var t=S(e);w[t]=!0},p=function(e){var t=S(e);delete w[t]},h=function(){return Object.keys(w).map(E)}}var R=[],P={onSetChildren:function(e,t){var n=u(e);n?void 0:f("144"),n.childIDs=t;for(var a=0;a<t.length;a++){var r=t[a],s=u(r);s?void 0:f("140"),null==s.childIDs&&"object"==typeof s.element&&null!=s.element?f("141"):void 0,s.isMounted?void 0:f("71"),null==s.parentID&&(s.parentID=e),s.parentID!==e?f("142",r,s.parentID,e):void 0}},onBeforeMountComponent:function(e,t,n){var a={element:t,parentID:n,text:null,childIDs:[],isMounted:!1,updateCount:0};l(e,a)},onBeforeUpdateComponent:function(e,t){var n=u(e);n&&n.isMounted&&(n.element=t)},onMountComponent:function(e){var t=u(e);t?void 0:f("144"),t.isMounted=!0;var n=0===t.parentID;n&&c(e)},onUpdateComponent:function(e){var t=u(e);t&&t.isMounted&&t.updateCount++},onUnmountComponent:function(e){var t=u(e);if(t){t.isMounted=!1;var n=0===t.parentID;n&&p(e)}R.push(e)},purgeUnmountedComponents:function(){if(!P._preventPurging){for(var e=0;e<R.length;e++){var t=R[e];r(t)}R.length=0}},isMounted:function(e){var t=u(e);return!!t&&t.isMounted},getCurrentStackAddendum:function(e){var t="";if(e){var n=o(e),a=e._owner;t+=s(n,e._source,a&&a.getName())}var r=y.current,i=r&&r._debugID;return t+=P.getStackAddendumByID(i)},getStackAddendumByID:function(e){for(var t="";e;)t+=i(e),e=P.getParentID(e);return t},getChildIDs:function(e){var t=u(e);return t?t.childIDs:[]},getDisplayName:function(e){var t=P.getElement(e);return t?o(t):null},getElement:function(e){var t=u(e);return t?t.element:null},getOwnerID:function(e){var t=P.getElement(e);return t&&t._owner?t._owner._debugID:null},getParentID:function(e){var t=u(e);return t?t.parentID:null},getSource:function(e){var t=u(e),n=t?t.element:null,a=null!=n?n._source:null;return a},getText:function(e){var t=P.getElement(e);return"string"==typeof t?t:"number"==typeof t?""+t:null},getUpdateCount:function(e){var t=u(e);return t?t.updateCount:0},getRootIDs:h,getRegisteredIDs:d};e.exports=P},function(e,t){"use strict";var n="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103;e.exports=n},function(e,t,n){"use strict";var a={};e.exports=a},function(e,t,n){"use strict";var a=!1;e.exports=a},function(e,t){"use strict";function n(e){var t=e&&(a&&e[a]||e[r]);if("function"==typeof t)return t}var a="function"==typeof Symbol&&Symbol.iterator,r="@@iterator";e.exports=n},function(e,t){"use strict";function n(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];if(0===t.length)return function(e){return e};if(1===t.length)return t[0];var a=t[t.length-1],r=t.slice(0,-1);return function(){return r.reduceRight(function(e,t){return t(e)},a.apply(void 0,arguments))}}t.__esModule=!0,t.default=n},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){function a(){g===y&&(g=y.slice())}function s(){return f}function i(e){if("function"!=typeof e)throw new Error("Expected listener to be a function.");var t=!0;return a(),g.push(e),function(){if(t){t=!1,a();var n=g.indexOf(e);g.splice(n,1)}}}function m(e){if(!(0,o.default)(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if("undefined"==typeof e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(v)throw new Error("Reducers may not dispatch actions.");try{v=!0,f=h(f,e)}finally{v=!1}for(var t=y=g,n=0;n<t.length;n++)t[n]();return e}function d(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");h=e,m({type:u.INIT})}function c(){var e,t=i;return e={subscribe:function(e){function n(){e.next&&e.next(s())}if("object"!=typeof e)throw new TypeError("Expected the observer to be an object.");n();var a=t(n);return{unsubscribe:a}}},e[l.default]=function(){return this},e}var p;if("function"==typeof t&&"undefined"==typeof n&&(n=t,t=void 0),"undefined"!=typeof n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(r)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var h=e,f=t,y=[],g=y,v=!1;return m({type:u.INIT}),p={dispatch:m,subscribe:i,getState:s,replaceReducer:d},p[l.default]=c,p}t.__esModule=!0,t.ActionTypes=void 0,t.default=r;var s=n(46),o=a(s),i=n(325),l=a(i),u=t.ActionTypes={INIT:"@@redux/INIT"}},function(e,t){"use strict";function n(e){"undefined"!=typeof console&&"function"==typeof console.error&&console.error(e);try{throw new Error(e)}catch(e){}}t.__esModule=!0,t.default=n},function(e,t,n){"use strict";"undefined"==typeof Promise&&(n(214).enable(),window.Promise=n(213)),n(330),Object.assign=n(6)},function(e,t){(function(t){"use strict";function n(e){i.length||(o(),l=!0),i[i.length]=e}function a(){for(;u<i.length;){var e=u;if(u+=1,i[e].call(),u>m){for(var t=0,n=i.length-u;t<n;t++)i[t]=i[t+u];i.length-=u,u=0}}i.length=0,u=0,l=!1}function r(e){var t=1,n=new c(e),a=document.createTextNode("");return n.observe(a,{characterData:!0}),function(){t=-t,a.data=t}}function s(e){return function(){function t(){clearTimeout(n),clearInterval(a),e()}var n=setTimeout(t,0),a=setInterval(t,50)}}e.exports=n;var o,i=[],l=!1,u=0,m=1024,d="undefined"!=typeof t?t:self,c=d.MutationObserver||d.WebKitMutationObserver;o="function"==typeof c?r(a):s(a),n.requestFlush=o,n.makeRequestCallFromTimer=s}).call(t,function(){return this}())},function(e,t){"use strict";function n(e){return{type:a,widgetdocs:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.widgetSetWidgetDocs=n;var a=t.WIDGET_SET_WIDGETDOCS="WIDGET_SET_WIDGETDOCS"},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(134),p=a(c),h=n(127),f=a(h),y=n(131),g=a(y),v=n(19),b=a(v),T=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.categories,n=e.selectedCategory,a=e.response,r=e.history;return u.default.createElement("div",{className:"page"},u.default.createElement(p.default,{categories:t}),u.default.createElement("main",{className:"content with-sidebar",id:"content"},u.default.createElement("div",{className:"section"},u.default.createElement("h1",null,"API Reference"),u.default.createElement("p",null,"This section is a complete reference guide for the Dynamic Signal APIs."),n&&u.default.createElement("div",{className:"categories",id:"categories"},u.default.createElement("div",{className:"category-list"},u.default.createElement(f.default,{category:n}))),a&&u.default.createElement(g.default,{response:a,history:r})),u.default.createElement(b.default,null)))}}]),t}(u.default.Component);T.propTypes={categories:d.default.array.isRequired},t.default=T},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(8),i=n(140),l=a(i),u=n(19),m=a(u),d=n(139),c=a(d),p=function(){return s.default.createElement("div",{className:"page"},s.default.createElement(l.default,null),s.default.createElement("main",{id:"content",className:"content with-sidebar"},s.default.createElement("div",{className:"section"},s.default.createElement(o.Switch,null,s.default.createElement(o.Route,{exact:!0,path:"/getting-started",render:function(){return s.default.createElement(c.default,{page:"introduction"})}}),s.default.createElement(o.Route,{exact:!0,path:"/getting-started/:page",render:function(e){var t=e.match;return s.default.createElement(c.default,{page:t.params.page})}}))),s.default.createElement(m.default,null)))};t.default=p},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(9),i=n(19),l=a(i),u=function(){return s.default.createElement("div",{className:"page"},s.default.createElement("div",{className:"content",id:"content"},s.default.createElement("div",{className:"section"},s.default.createElement("h1",null,"Build the community that’s right for you."),s.default.createElement("p",null,"Customize the design and capabilities of your community by leveraging the Dynamic Signal APIs to match your needs."),s.default.createElement("div",{className:"panels"},s.default.createElement("div",{className:"panel"},s.default.createElement("i",{className:"fa fa-puzzle-piece"}),s.default.createElement("div",null,s.default.createElement("h2",null,"Getting Started"),s.default.createElement("div",null,"Discover how the VoiceStorm Developer program works and how to leverage the platform to create your community."),s.default.createElement(o.Link,{to:"/getting-started",className:"button"},"Learn More"))),s.default.createElement("div",{className:"panel"},s.default.createElement("i",{className:"fa fa-cogs"}),s.default.createElement("div",null,s.default.createElement("h2",null,"API Reference"),s.default.createElement("div",null,"Review the API technical reference to help you integrate the VoiceStorm platform to create your community."),s.default.createElement(o.Link,{to:"/api",className:"button"},"Learn More"))),s.default.createElement("div",{className:"panel"},s.default.createElement("i",{className:"fa fa-code"}),s.default.createElement("div",null,s.default.createElement("h2",null,"JavaScript SDK"),s.default.createElement("div",null,"Learn to use our JavaScript SDK to easily enable system functionality across your own sites."),s.default.createElement(o.Link,{to:"/javascript-sdk",className:"button"},"Learn More"))),s.default.createElement("div",{className:"panel"},s.default.createElement("i",{className:"fa fa-photo"}),s.default.createElement("div",null,s.default.createElement("h2",null,"Widget Reference"),s.default.createElement("div",null,"Learn to use our reusable widgets that can help you quickly build a website showing you community content."),s.default.createElement(o.Link,{to:"/widgets",className:"button"},"Learn More"))))),s.default.createElement(l.default,null)))};t.default=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(8),i=n(144),l=a(i),u=n(141),m=a(u),d=n(143),c=a(d),p=n(19),h=a(p),f=n(39),y=a(f),g=n(142),v=a(g),b=function(){return s.default.createElement("div",{className:"page"},s.default.createElement(l.default,null),s.default.createElement("main",{id:"content",className:"content with-sidebar"},s.default.createElement("div",{className:"section"},s.default.createElement(y.default,{scrollElId:"content"},s.default.createElement(o.Switch,null,s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk",render:function(){return s.default.createElement(v.default,{page:"Intro"})}}),s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk/intro",render:function(){return s.default.createElement(v.default,{page:"Intro"})}}),s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk/environment",component:m.default}),s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk/promise",render:function(){return s.default.createElement(v.default,{page:"Promise"})}}),s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk/error",render:function(){return s.default.createElement(v.default,{page:"Error"})}}),s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk/auth",render:function(){return s.default.createElement(v.default,{page:"Auth"})}}),s.default.createElement(o.Route,{exact:!0,path:"/javascript-sdk/reference",component:c.default})))),s.default.createElement(h.default,null)))};t.default=b},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(8),i=n(4),l=a(i),u=n(148),m=a(u),d=n(158),c=a(d),p=n(159),h=a(p),f=n(19),y=a(f),g=n(39),v=a(g),b=n(73),T=a(b),w=function(e){var t=e.categories,n=e.widgets;e.widget;return s.default.createElement("div",{className:"page"},s.default.createElement(m.default,{categories:t,widgets:n}),s.default.createElement("main",{className:"content with-sidebar",id:"content"},s.default.createElement("div",{className:"section"},s.default.createElement(v.default,{scrollElId:"content"},s.default.createElement(o.Switch,null,s.default.createElement(o.Route,{exact:!0,path:"/widgets",render:function(){return s.default.createElement(T.default,{page:"Intro"})}}),s.default.createElement(o.Route,{exact:!0,path:"/widgets/intro",render:function(){return s.default.createElement(T.default,{page:"Intro"})}}),s.default.createElement(o.Route,{exact:!0,path:"/widgets/how",render:function(){return s.default.createElement(T.default,{page:"How"})}}),s.default.createElement(o.Route,{exact:!0,path:"/widgets/customize",render:function(){return s.default.createElement(T.default,{page:"Customize"})}}),s.default.createElement(o.Route,{exact:!0,path:"/widgets/style",render:function(){return s.default.createElement(T.default,{page:"Style"})}}),s.default.createElement(o.Route,{exact:!0,path:"/widgets/:category",component:c.default}),s.default.createElement(o.Route,{path:"/widgets/:category/:widget",component:h.default})))),s.default.createElement(y.default,null)))};w.propTypes={categories:l.default.object.isRequired,widgets:l.default.object.isRequired,widget:l.default.string},t.default=w},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(138),p=a(c),h=n(42),f=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props.category,t=(0,h.sortApiRoutes)(e.routes);return u.default.createElement("div",{className:"category"},u.default.createElement("h2",null,e.name),u.default.createElement("p",{className:"summary"},e.summary),e.notes&&u.default.createElement("p",{className:"notes"},e.notes),u.default.createElement("div",{className:"routes"},t.map(function(e){return u.default.createElement(p.default,{key:e.name[0],route:e})})))}}]),t}(u.default.Component);f.propTypes={category:d.default.object.isRequired},t.default=f},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(42),p=n(9),h=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"renderVerb",value:function(e){return u.default.createElement("span",{className:"verb-"+e},e)}},{key:"renderRoute",value:function(e,t){var n=(0,c.getRouteLink)(e),a=t==="#"+n?"active-route":"";return u.default.createElement("a",{href:"#"+n,key:n,className:a},this.renderVerb(e.verbs[0])," ",e.path[0].substring(3))}},{key:"render",value:function(){var e=this,t=this.props,n=t.category,a=t.hash,r=(0,c.sortApiRoutes)(n.routes);return u.default.createElement("div",{className:"category-link nav-link"
},u.default.createElement(p.NavLink,{to:"/api/"+n.name},n.name),u.default.createElement("div",{className:"route-links"},r.map(function(t){return e.renderRoute(t,a)})))}}]),t}(u.default.Component);h.propTypes={category:d.default.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(9),p=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"renderCollectionType",value:function(e){return e.isArray?u.default.createElement("span",null,"[ ]"):e.isCollection?u.default.createElement("span",null,"{ }"):null}},{key:"renderTypeText",value:function(e){var t=["string","dateTime","bool","int","long","guid"];return e.indexOf("Enum")>-1?"string":t.indexOf(e)>-1?""+e:u.default.createElement(c.Link,{to:"/api/responses/"+e},e)}},{key:"render",value:function(){var e=this.props.field,t=this.renderTypeText(e.type);return u.default.createElement("span",{className:"type"},t," ",this.renderCollectionType(e))}}]),t}(u.default.Component);Request.propTypes={field:d.default.object.isRequired},t.default=p},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.enums,n=e.type,a=t[n];return u.default.createElement("div",{className:"enums"},Object.keys(a.fields).sort().map(function(e){return u.default.createElement("span",{className:"enum-value",key:e},a.fields[e].name)}))}}]),t}(u.default.Component);t.default=m},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(72),p=a(c),h=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.response,n=e.history;return u.default.createElement("div",{className:"route-item"},u.default.createElement("h3",{className:"path"},t.name),t.summary&&u.default.createElement("p",null,t.summary),t.notes&&u.default.createElement("p",{className:"notes"},"Notes: ",t.notes),u.default.createElement(p.default,{response:t}),u.default.createElement("a",{className:"button",onClick:n.goBack},"Go Back"))}}]),t}(u.default.Component);h.propTypes={response:d.default.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(71),p=a(c),h=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props.request;return u.default.createElement("div",{className:"request"},u.default.createElement("div",null,u.default.createElement("div",{className:"prop-heading"},u.default.createElement("h4",null,"Request")),u.default.createElement("div",{className:"properties"},e.fields.map(function(e){return u.default.createElement(p.default,{key:e.name,field:e})}))))}}]),t}(u.default.Component);h.propTypes={request:d.default.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(132),p=a(c),h=n(72),f=a(h),y=n(42),g=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.route,n=e.route.request,a=e.responses,r=a[t.apiResponse],s=t.verbs.join(" "),o=void 0!==n.fields&&n.fields.length>0;return u.default.createElement("div",{className:"route-item"},u.default.createElement("span",{id:(0,y.getRouteLink)(t)}),t.path.map(function(e){return u.default.createElement("h3",{className:"path",key:e},u.default.createElement("span",{className:"verbs"},s)," ",e)}),u.default.createElement("p",null,n.summary),n.notes&&u.default.createElement("p",{className:"notes"},"Notes: ",n.notes),o&&u.default.createElement(p.default,{request:n}),u.default.createElement(f.default,{response:r}))}}]),t}(u.default.Component);g.propTypes={route:d.default.object.isRequired,responses:d.default.object.isRequired},t.default=g},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(136),p=a(c),h=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"render",value:function(){var e=this.props.categories;return u.default.createElement("nav",{className:"sidebar"},u.default.createElement("div",{className:"scroll"},u.default.createElement("h2",null,"API Reference"),u.default.createElement("div",{className:"nav-links"},e.map(function(e){return u.default.createElement(p.default,{key:e.name,category:e})}))))}}]),t}(u.default.Component);h.propTypes={categories:d.default.array.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(9),o=n(122),i=a(o),l=function(e,t){var n=t.match,a=n.params,r=a.category,s=a.response;return{categories:e.api.categories,selectedCategory:e.api.categories.find(function(e){return e.name===r}),response:e.api.responses[s]}};t.default=(0,s.withRouter)((0,r.connect)(l)(i.default))},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(9),o=n(128),i=a(o),l=function(e,t){var n=t.location,a=t.match;if(a){var r=a.params.category,s=e.api.categories.find(function(e){return e.name===r});return{hash:n.hash,selectedCategory:s}}return{hash:n.hash}};t.default=(0,s.withRouter)((0,r.connect)(l)(i.default))},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(130),o=a(s),i=function(e,t){return{enums:e.api.enums}};t.default=(0,r.connect)(i)(o.default)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(133),o=a(s),i=function(e,t){return{responses:e.api.responses}};t.default=(0,r.connect)(i)(o.default)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(188),p=a(c),h=n(185),f=a(h),y=n(186),g=a(y),v=n(190),b=a(v),T=n(192),w=a(T),S=n(193),E=a(S),R=n(191),P=a(R),C=n(189),k=a(C),I=n(187),A=a(I),_=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidMount",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"componentDidUpdate",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"render",value:function(){var e=this.props.page,t=null;switch(e){case"introduction":t=p.default;break;case"authentication":t=f.default;break;case"common-objects":t=g.default;break;case"making-a-request":t=b.default;break;case"rate-limiting":t=w.default;break;case"simple-tasks":t=E.default;break;case"post-routing":t=P.default;break;case"json-data-types":t=k.default;break;case"image-formats":t=A.default;break;default:t=null}return u.default.createElement("div",{className:"part",dangerouslySetInnerHTML:{__html:t}})}}]),t}(u.default.Component);_.propTypes={page:d.default.string.isRequired},t.default=_},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(9),i=function(){return s.default.createElement("nav",{className:"sidebar"},s.default.createElement("h2",null,"Essentials"),s.default.createElement("div",{className:"scroll"},s.default.createElement("div",{className:"nav-links"},s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{exact:!0,to:"/getting-started"},"Introduction")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/authentication"},"Authentication")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/common-objects"},"Common Objects")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/making-a-request"},"Making a Request")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/rate-limiting"},"Rate Limiting"))),s.default.createElement("h2",null,"Example Use Cases"),s.default.createElement("div",{className:"nav-links"},s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/simple-tasks"},"Simple Tasks"))),s.default.createElement("h2",null,"Misc. Topics"),s.default.createElement("div",{className:"nav-links"},s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/post-routing"},"Post Routing")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/json-data-types"},"JSON Data Types")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/getting-started/image-formats"},"Image Formats")))))};t.default=i},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(47),d=a(m),c=n(9),p=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidMount",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"componentDidUpdate",value:function(){window.Prism&&window.Prism.highlightAll();var e=this.props.location.hash.replace("#","");if(e){var t=d.default.findDOMNode(this.refs[e]);t&&t.scrollIntoView()}}},{key:"render",value:function(){return u.default.createElement("div",null,u.default.createElement("h1",null,"Environment"),u.default.createElement("p",null,"The VoiceStorm JavaScript SDK creates an environment you can customize."),u.default.createElement("h2",{ref:"global"},"VoiceStorm Global Object"),u.default.createElement("p",null,"The VoiceStorm JavaScript SDK exposes one global JavaScript variable: VoiceStorm. All functionality is either exposed as a function or property of VoiceStorm or as a jQuery widget. The global VoiceStorm object is not guaranteed to be available until after VoiceStormAsyncInit() has been called. This is similar to ",u.default.createElement("a",{href:"https://developers.facebook.com/docs/javascript/quickstart",target:"_blank"},"fbAsyncInit in the Facebook JavaScript SDK"),"."),u.default.createElement("p",null,"There are several utility functions and objects exposed by the VoiceStorm global object. They are:"),u.default.createElement("table",{className:"table table-bordered table-striped bs-table"},u.default.createElement("thead",null,u.default.createElement("tr",null,u.default.createElement("th",{style:{minWidth:"25%"}},"Property Name"),u.default.createElement("th",null,"Type"),u.default.createElement("th",null,"Description"))),u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.jQuery"),u.default.createElement("td",null,"Object"),u.default.createElement("td",null,"The instance of jQuery used internally by the VoiceStorm SDK")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.host()"),u.default.createElement("td",null,"Function"),u.default.createElement("td",null,"Returns the hostname of your VoiceStorm community")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.build()"),u.default.createElement("td",null,"Function"),u.default.createElement("td",null,"Returns the build number of the VoiceStorm SDK")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.version()"),u.default.createElement("td",null,"Function"),u.default.createElement("td",null,"Returns the version of the VoiceStorm API the SDK is using (usually “v1”)")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults"),u.default.createElement("td",null,"Object"),u.default.createElement("td",null,"An object containing overrideable default properties.")))),u.default.createElement("h2",{ref:"defaults"},"Defaults"),u.default.createElement("p",null,"There are several default properties you can set to change the behavior of the VoiceStorm JavaScript SDK. It is important to only assign properties of the default object, ",u.default.createElement("strong",null,"do not replace or remove the default object itself"),"!"),u.default.createElement("table",{className:"table table-bordered table-striped bs-table"},u.default.createElement("thead",null,u.default.createElement("tr",null,u.default.createElement("th",{style:{minWidth:"25%"}},"Property Name"),u.default.createElement("th",null,"Type"),u.default.createElement("th",null,"Default"),u.default.createElement("th",null,"Description"))),u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.channelUrl"),u.default.createElement("td",null,"string"),u.default.createElement("td",null," "),u.default.createElement("td",null,"Must be set to support social media authentication (see the ",u.default.createElement(c.Link,{to:"/javascript-sdk/auth"},"Social Login")," section)")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.dataPrefix"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"'voicestorm'"),u.default.createElement("td",null,"Used for data attribute names (see the Widget section)")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.shareButtonText"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"'Share'"),u.default.createElement("td",null,"The text of share buttons created via widgets")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.shareButtonClass"),u.default.createElement("td",null,"string"),u.default.createElement("td",null," "),u.default.createElement("td",null,"The CSS class of share buttons created via widgets")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.socialPopupName"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"'VoiceStormSocialPopup'"),u.default.createElement("td",null,"The window.name of popup windows used for social media authentication (see the ",u.default.createElement(c.Link,{to:"/javascript-sdk/auth"},"Social Login")," section)")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.submitButtonClass"),u.default.createElement("td",null,"string"),u.default.createElement("td",null," "),u.default.createElement("td",null,"The CSS class of submit buttons created via widgets")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.timeout"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"10000"),u.default.createElement("td",null,"The timeout in milliseconds of all AJAX calls made by the VoiceStorm SDK")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.timezoneOffset"),u.default.createElement("td",null,"string"),u.default.createElement("td",null),u.default.createElement("td",null,"An ",u.default.createElement("a",{href:"http://www.w3.org/TR/NOTE-datetime",target:"_blank"},"ISO 8601"),"time zone designator indicating the local timezone set for the community.",u.default.createElement("br",null),u.default.createElement("strong",null,"Examples:")," '-00:00' indicates Coordinated Universal Time (UTC). '-08:00' indicates Pacific Standard Time.")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.timezoneIanaName"),u.default.createElement("td",null,"string"),u.default.createElement("td",null),u.default.createElement("td",null,"An ",u.default.createElement("a",{href:"http://www.iana.org/time-zones",target:"_blank"},"IANA"),u.default.createElement("a",{href:"http://en.wikipedia.org/wiki/Tz_database#Names_of_time_zones",target:"_blank"},"time zone name"),"indicating the local timezone set for the community. Use this name with 3rd party JavaScript libraries like ",u.default.createElement("a",{href:"http://momentjs.com/timezone/",target:"_blank"},"Moment Timezone"),"to convert times returned by JavaScript APIs (which are also in UTC) to local community time.",u.default.createElement("br",null),u.default.createElement("strong",null,"Examples:")," 'Etc/UTC' indicates Coordinated Universal Time (UTC). 'America/Los_Angeles' indicates Pacific Standard Time.")),u.default.createElement("tr",null,u.default.createElement("td",null,"VoiceStorm.defaults.reactionProviders"),u.default.createElement("td",null,"string array"),u.default.createElement("td",null),u.default.createElement("td",null,"A list of social providers that support reactions, like Comment, Share, and Like. This list is provided as a convenient way to determine if a particular provider, such as Facebook, supports reactions. To get detailed information about all the providers available in the community and the reactions they support, call ",u.default.createElement("code",null,"VoiceStorm.api('GET', 'providers')"),". See ",u.default.createElement(c.Link,{to:"/api/Registration#get_providers"},"GET /v1/providers")," for more details.",u.default.createElement("br",null),u.default.createElement("strong",null,"Example:")," ",u.default.createElement("code",null,'["Facebook", "Twitter", "YouTube"]'))))),u.default.createElement("p",null,"An easy way to set defaults is at the top of your VoiceStormAsyncInit:"),u.default.createElement("pre",{className:"language-javascript"},u.default.createElement("code",{className:"language-javascript"},"function VoiceStormAsyncInit()\n{\n\t// Override defaults\n\tVoiceStorm.defaults.channelUrl = window.location.protocol + '//' + window.location.host + '/channel.html';\n\tVoiceStorm.defaults.shareButtonText = 'Share Now!';\n}")))}}]),t}(u.default.Component);t.default=p},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(196),p=a(c),h=n(197),f=a(h),y=n(195),g=a(y),v=n(194),b=a(v),T=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidMount",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"componentDidUpdate",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"render",value:function(){var e=this.props.page,t=null;switch(e){case"Intro":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:p.default}});break;case"Promise":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:f.default}});break;case"Auth":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:b.default}});break;case"Error":t=u.default.createElement("div",{dangerouslySetInnerHTML:{__html:g.default}});break;default:t=null}return t}}]),t}(u.default.Component);T.propTypes={page:d.default.string.isRequired},t.default=T},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(47),d=a(m),c=n(9),p=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidMount",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"componentDidUpdate",value:function(){window.Prism&&window.Prism.highlightAll();var e=this.props.location.hash.replace("#","");if(e){var t=d.default.findDOMNode(this.refs[e]);t&&t.scrollIntoView()}}},{key:"render",value:function(){return u.default.createElement("div",null,u.default.createElement("h1",null,"Functional Reference"),u.default.createElement("h2",{ref:"reference-changePassword"},"VoiceStorm.changePassword()"),u.default.createElement("p",null,"Allows the currently logged in user to change his password. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/responses/successResponse"},"successResponse"),"."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.changePassword(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"currentPassword"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required value of user's current password")),u.default.createElement("tr",null,u.default.createElement("td",null,"newPassword"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required new value for user's password")))),u.default.createElement("h2",{ref:"reference-currentUser"},"VoiceStorm.currentUser()"),u.default.createElement("p",null,"Requests the currently logged in user. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_user"},"GET /v1/user")," response. If the user is not currently logged on, the error handler will be called."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.currentUser()"))))),u.default.createElement("h2",{ref:"reference-geos"},"VoiceStorm.geos()"),u.default.createElement("p",null,"Requests the list of defined countries, provinces, and states. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Utility#GET_geos"},"GET /v1/utility/geos")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.geos()"))))),u.default.createElement("h2",{ref:"reference-leaderboard"},"VoiceStorm.leaderboard()"),u.default.createElement("p",null,"Requests the details of a specific leaderboard. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Leaderboards#GET_leaderboard"},"GET /v1/leaderboard")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.leaderboard(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of the leaderboard to request")))),u.default.createElement("table",{
className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.leaderboard(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of the leaderboard to request")))),u.default.createElement("h2",{ref:"reference-leaderboardRankings"},"VoiceStorm.leaderboardRankings()"),u.default.createElement("p",null,"Requests the rankings of a specific leaderboard. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Leaderboards#GET_leaderboardRankings"},"GET /v1/leaderboardrankings")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.leaderboardRankings(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of the leaderboard to request")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.leaderboardRankings(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of the leaderboard to request")),u.default.createElement("tr",null,u.default.createElement("td",null,"skip"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"optional start index of rankings in leaderboard")),u.default.createElement("tr",null,u.default.createElement("td",null,"take"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"optional count of rankings to return")),u.default.createElement("tr",null,u.default.createElement("td",null,"include"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional comma delimited string of the following to request information:",u.default.createElement("br",null),u.default.createElement("ul",null,u.default.createElement("li",null,"‘images’ to return images with the leaderboard")))),u.default.createElement("tr",null,u.default.createElement("td",null,"sortMode"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional one of the following to sort the rankings:",u.default.createElement("br",null),u.default.createElement("ul",null,u.default.createElement("li",null,"'Rank' to sort by rank"),u.default.createElement("li",null,"'JoinDateDescending' to sort by user join date"),u.default.createElement("li",null,"'AlphabeticalByUserName' to sort by user name")))))),u.default.createElement("h2",{ref:"reference-login"},"VoiceStorm.login()"),u.default.createElement("p",null,"Logs a user in. The VoiceStorm SDK will persist the logged in user's session until it expires or ",u.default.createElement("a",{href:"#reference-logout"},"VoiceStorm.logout()")," is called. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_user"},"GET /v1/user")," response representing the logged in user."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.login(email, password)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"email"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required email address of user logging in")),u.default.createElement("tr",null,u.default.createElement("td",null,"password"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required password of user logging in'[']")))),u.default.createElement("h2",{ref:"reference-loginWithToken"},"VoiceStorm.loginWithToken()"),u.default.createElement("p",null,"Logs a user in with token and expiration from a ",u.default.createElement("a",{href:"/api/Login#POST_login"},"POST /v1/login")," response. The VoiceStorm SDK will persist the logged in user's session until it expires or ",u.default.createElement("a",{href:"#reference-logout"},"VoiceStorm.logout()")," is called. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_user"},"GET /v1/user")," response representing the logged in user."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.loginWithToken(token, expiration)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"token"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required token")),u.default.createElement("tr",null,u.default.createElement("td",null,"expiration"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required expiration")))),u.default.createElement("h2",{ref:"reference-logout"},"VoiceStorm.logout()"),u.default.createElement("p",null,"Logs out a currently logged in user. Returns a promise object. The success handler will always be called, but passed nothing."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.logout()"))))),u.default.createElement("h2",{ref:"reference-post"},"VoiceStorm.post()"),u.default.createElement("p",null,"Requests a specific post. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Posts#GET_post"},"GET /v1/post")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.post(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required id of the post to request")))),u.default.createElement("h2",{ref:"reference-postUrl"},"VoiceStorm.postUrl()"),u.default.createElement("p",null,"Given a ",u.default.createElement(c.Link,{to:"/api/Posts#GET_post"},"GET /v1/post")," response, return a permalink to the post. ",u.default.createElement("strong",null,"This returns a string, not a promise object!",u.default.createElement("br",{className:"Apple-interchange-newline"}))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.postUrl(post)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"post"),u.default.createElement("td",null,u.default.createElement(c.Link,{to:"/api/Posts#GET_post"},"GET /v1/post")," response"),u.default.createElement("td",null,"required post object to link to, eg, returned from ",u.default.createElement("a",{href:"#reference-post"},"VoiceStorm.post()"))))),u.default.createElement("h2",{ref:"reference-profileUrl"},"VoiceStorm.profileUrl()"),u.default.createElement("p",null,"Given a user id, return a permalink to the user's profile. ",u.default.createElement("strong",null,"This returns a string, not a promise object!",u.default.createElement("br",{className:"Apple-interchange-newline"}))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.profileUrl(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required id of user to link to")))),u.default.createElement("h2",{ref:"reference-putUser"},"VoiceStorm.putUser()"),u.default.createElement("p",null,"Update properties of a user. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_user"},"GET /v1/user")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.putUser(user)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"user"),u.default.createElement("td",null,"object"),u.default.createElement("td",null,"user is a set of key/value pairs to update. See ",u.default.createElement(c.Link,{to:"/api/Users#POST_user"},"PUT /v1/user")," request.")))),u.default.createElement("h2",{ref:"reference-reactToPost"},"VoiceStorm.reactToPost()"),u.default.createElement("p",null,"Shows the user interface to react to a specific post. Returns a promise object."),u.default.createElement("p",null,"The reactToPost method is a specialized version of ",u.default.createElement("a",{href:"#reference-sharePost"},"sharePost"),". It accepts all the same options as sharePost, plus an additional parameter specific to reactions."),u.default.createElement("p",null,"See ",u.default.createElement("a",{href:"#reference-sharePost"},"sharePost")," for a description of how to customize the reactToPost user interface. All the same options on sharePost apply to reactToPost."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.reactToPost(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required ID of the post to react to")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.reactToPost(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"reactionType"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required One of the ",u.default.createElement("strong",null,"reactionType")," values shown in ",u.default.createElement(c.Link,{to:"/api/Responses#providerReactionResponse"},"providerReactionResponse"),". Call ",u.default.createElement("code",null,"VoiceStorm.api('GET', 'providers')")," to get a list of providers available in the community and the reactionTypes they support. See ",u.default.createElement(c.Link,{to:"/api/Registration#GET_providers"},"GET /v1/providers")," for more details.")),u.default.createElement("tr",null,u.default.createElement("td",null,u.default.createElement("em",null,"sharePost options")),u.default.createElement("td",null),u.default.createElement("td",null,"All options supported by ",u.default.createElement("a",{href:"#reference-sharePost"},"sharePost")," can also be passed to reactToPost.")))),u.default.createElement("h2",{ref:"reference-reportPostViewEvent"},"VoiceStorm.reportPostViewEvent()"),u.default.createElement("p",null,"Records a post view in the reporting system. Use this on a single article view page to enable article view tracking. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/#successResponse"},"successResponse"),"."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.reportPostViewEvent(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required id of the post to report on")))),u.default.createElement("h2",{ref:"reference-sharePost"},"VoiceStorm.sharePost()"),u.default.createElement("p",null,"Shows the user interface to share a specific post. Returns a promise object. If the user is not currently logged on, the error handler will be called. By default, the share user interface is shown in a browser popup window. Because a popup window is shown, sharePost should only be called in response to a user click event; otherwise a user popup blocker may block the new window."),u.default.createElement("p",null,"To show the share user interface inside your own container, such as a ",u.default.createElement("a",{href:"http://getbootstrap.com/javascript/#modals",target:"_blank"},"Bootstrap modal"),", use the ",u.default.createElement("strong",null,"lightboxContainer")," option and handle sharePost events."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.sharePost(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required ID of the post to share")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.sharePost(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"postId"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional ID of the post to share. Either postId or postUrl must be set")),u.default.createElement("tr",null,u.default.createElement("td",null,"postUrl"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional URL to a page containing a post to share. Either postId or postUrl must be set")),u.default.createElement("tr",null,u.default.createElement("td",null,"lightboxContainer,",u.default.createElement("br",null),"shareDialogLightboxContainer"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional jQuery selector for an element that will contain the sharing user interface instead of a browser popup window. This element is typically a <div> with no content. sharePost will empty the contents of this element each time the sharing user interface is displayed. See ",u.default.createElement("strong",null,"Using a Lightbox"),", below, for details. Although either option may be used, typically one passes lightboxContainer in the options object, or sets ",u.default.createElement(c.Link,{to:"/javascript-sdk/environment#defaults"},"VoiceStorm.defaults"),".shareDialogLightboxContainer to apply this value globablly")),u.default.createElement("tr",null,u.default.createElement("td",null,"cssUrl,",u.default.createElement("br",null),"shareDialogCssUrl"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional fully-qualifed (absolute) secure URL to a stylesheet to apply to the sharing user interface. The user interface always appears on a secure page, so this URL must also be secure (https) or it will be ignored. See ",u.default.createElement("strong",null,"Styling the User Interface"),", below, for details. Although either option may be used, typically one passes cssUrl in the options object, or sets ",u.default.createElement(c.Link,{to:"/javascript-sdk/environment#defaults"},"VoiceStorm.defaults"),".shareDialogCssUrl to apply this value globablly")))),u.default.createElement("h3",{ref:"reference-sharePost-lightbox"},"Using a Lightbox"),u.default.createElement("p",null,"By default, the sharing user interface opens in a browser popup window. You can change this behavior by setting ",u.default.createElement("strong",null,"lightboxContainer")," to an element on your page, such as a div inside a dialog, like a Bootstrap modal. Handle events sent by sharePost to show and hide your lightbox and update your page when a share takes place."),u.default.createElement("h3",{ref:"reference-sharePost-events"},"Lightbox Events"),u.default.createElement("p",null,"When ",u.default.createElement("strong",null,"lightboxContainer")," is set, sharePost will communicate to that element using jQuery events. Your event handlers will show and hide your lightbox and react to sharing actions as they occur. Each event is namespaced to the VoiceStorm Javascript SDK and sharePost method. Register your event handlers on the VoiceStorm jQuery object in case the VoiceStorm JavaScript SDK is using a different jQuery instance than your page."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"sharePost lightbox events",u.default.createElement("br",null)))),u.default.createElement("tr",null,u.default.createElement("td",null,"show.voicestorm.sharepost"),u.default.createElement("td",null,"This event fires just before the sharePost user interface is displayed. Use it to show your lightbox and display any type of loading indicator")),u.default.createElement("tr",null,u.default.createElement("td",null,"shown.voicestorm.sharepost"),u.default.createElement("td",null,"This event fires when the sharing user interface is visible to the user. Use it to hide your loading indicator, if you displayed one during the show event")),u.default.createElement("tr",null,u.default.createElement("td",null,"authenticated.voicestorm.sharepost"),u.default.createElement("td",null,"This event fires after a successful login from the sharing user interface. The event contains an additional property called ",u.default.createElement("code",null,"login"),". Event.login contains the ",u.default.createElement("code",null,"token")," and ",u.default.createElement("code",null,"expiration"),"returned in a ",u.default.createElement(c.Link,{to:"/api/Login#POST_login"},"POST /v1/login")," response. Use these properties to log the user into VoiceStorm on your site by calling ",u.default.createElement("a",{href:"#reference-loginWithToken"},"VoiceStorm.loginWithToken()"),".")),u.default.createElement("tr",null,u.default.createElement("td",null,"shared.voicestorm.sharepost"),u.default.createElement("td",null,"This event fires after a successful share. The ID of the post comment created for the share is available as the ",u.default.createElement("code",null,"detail"),"property of the event. Use that ID to get more information about the share. See example")),u.default.createElement("tr",null,u.default.createElement("td",null,"closed.voicestorm.sharepost"),u.default.createElement("td",null,"This event fires after the user has dismissed the sharing user interface. Use it to hide your lightbox.")))),u.default.createElement("h3",null,"Lightbox Example"),u.default.createElement("h5",null,"HTML"),u.default.createElement("pre",{className:"language-markup"},u.default.createElement("code",{className:"language-markup"},'<!-- Sharing Bootstrap Modal -->\n<div ref="share-modal" className="modal fade" tabindex="-1" role="dialog" aria-hidden="true">\n\t<div className="modal-dialog">\n\t\t<div className="modal-content">\n\t\t\t<div className="modal-header">\n\t\t\t\t<button type="button" className="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n\t\t\t\t<h4 className="modal-title" ref="myModalLabel">Share a Post</h4>\n\t\t\t</div>\n\t\t\t<h4 ref="share-modal-loading" style="display: none; margin-left: 20px;"><span className="glyphicon glyphicon-refresh"></span> Loading... </h4>\n\t\t\t<div ref="share-modal-sharepost-container" className="modal-body">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>')),u.default.createElement("h5",null,"Script"),u.default.createElement("pre",{className:"language-javascript"},u.default.createElement("code",{className:"language-javascript"},"// Tell VoiceStorm JavaScript SDK to use my modal lightbox\nVoiceStorm.defaults.shareDialogLightboxContainer = '#share-modal-sharepost-container';\n\n// Handle VoiceStorm.sharePost lightbox events\nVoiceStorm.jQuery('#share-modal-sharepost-container')\n\t.on('show.voicestorm.sharepost', function (e) {\n\t\t$('#share-modal-sharepost-container').empty();\n\t\t$('#share-modal-loading').show();\n\t\t$('#share-modal').modal('show');\n\t})\n\t.on('shown.voicestorm.sharepost', function (e) {\n\t\t$('#share-modal-loading').hide();\n\t})\n\t.on('authenticated.voicestorm.sharepost', function (e) {\n\t\tVoiceStorm.loginWithToken(e.login.token, e.login.expiration);\n\t})\n\t.on('shared.voicestorm.sharepost', function (e) {\n\t\tvar id = e.detail;\n\t\tVoiceStorm.api('GET', 'postcomment/' + id).then(function (postcomment) {\n\t\t\t// Update page with new post comment\n\t\t});\n\t})\n\t.on('closed.voicestorm.sharepost', function (e) {\n\t\t$('#share-modal').modal('hide');\n\t});")),u.default.createElement("h3",{ref:"reference-sharePost-cssurl"},"Styling the User Interface"),u.default.createElement("p",null,"The share dialog uses CSS classes for styling. The root class is ",u.default.createElement("code",null,"voicestorm-share-dialog"),". To override these classes in your own stylesheet, set the ",u.default.createElement("code",null,"shareDialogCssUrl")," property in ",u.default.createElement(c.Link,{to:"/javascript-sdk/environment#defaults"},"VoiceStorm.defaults")," or ",u.default.createElement("code",null,"cssUrl")," in the options object passed to ",u.default.createElement("strong",null,"VoiceStorm.sharePost"),". See ",u.default.createElement("a",{href:"#reference-sharePost"},"VoiceStorm.sharePost()")," above for details."),u.default.createElement("h2",{ref:"reference-stream"},"VoiceStorm.stream()"),u.default.createElement("p",null,"Requests the posts in a specific stream. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Streams#GET_stream"},"GET /v1/stream")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.stream(name)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"name"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required name of the stream to request posts for")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.stream(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"name"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required name of the stream to request posts for")),u.default.createElement("tr",null,u.default.createElement("td",null,"skip"),u.default.createElement("td",null,"numbe"),u.default.createElement("td",null,"optional start index of posts in stream")),u.default.createElement("tr",null,u.default.createElement("td",null,"take"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"optional count of posts to return")),u.default.createElement("tr",null,u.default.createElement("td",null,"include"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional comma delimited string of the following to request additional information:",u.default.createElement("br",null),u.default.createElement("ul",null,u.default.createElement("li",null,"‘content’ to return the full post content"),u.default.createElement("li",null,"‘images’ to return the post’s images")))),u.default.createElement("tr",null,u.default.createElement("td",null,"idsOnly"),u.default.createElement("td",null,"bool"),u.default.createElement("td",null,"optionally true to only return post ids")))),u.default.createElement("h2",{ref:"reference-socialLogin"},"VoiceStorm.socialLogin()"),u.default.createElement("p",null,"Shows the user interface to login via a specific social provider. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_user"},"GET /v1/user")," response representing the newly logged in user. The VoiceStorm SDK will persist the logged in user's session until it expires or ",u.default.createElement("a",{href:"#reference-logout"},"VoiceStorm.logout()")," is called. In most cases, this will show a 3rd party Oauth dialog as a popup window. Because a popup window is required, this should only be called in response to a user click event; otherwise a user popup blocker may block the new window."),u.default.createElement("p",null,"For this function to succeed, you must include a channel.html file on your site and set ",u.default.createElement("code",null,"VoiceStorm.defaults.channelUrl")," to point to that file. See ",u.default.createElement("a",{href:"#social"},u.default.createElement("strong",null,"Social Login and Channel Registration"))," for details."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.socialLogin(providerName)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"providerName"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,'canonicalName of a social provider that supports login, such as "Facebook". To get a list of social providers that support login, call',u.default.createElement("a",{href:"#reference-socialProviders"},u.default.createElement("strong",null,"VoiceStorm.socialProviders('LoginRegistration')")),". providerName is case-sensitive")))),u.default.createElement("h2",{ref:"reference-socialProviders"},"VoiceStorm.socialProviders()"),u.default.createElement("p",null,"Requests a list of available social providers. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Registration#GET_providers"},"GET /v1/providers")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",null,u.default.createElement("strong",null,"VoiceStorm.socialProviders()"))),u.default.createElement("tr",null,u.default.createElement("td",null,"returns all social providers a user can add")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.socialProviders(type)"))),u.default.createElement("tr",null,u.default.createElement("td",null,">type"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"one of the following:",u.default.createElement("br",null),u.default.createElement("ul",null,u.default.createElement("li",null,"'AddChannel' to return all social providers a user can add"),u.default.createElement("li",null,"'LoginRegistration' to return only providers enabled for login and registration")))))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.socialProviders(type)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"type"),u.default.createElement("td",null,"bool"),u.default.createElement("td",null,"true for all social providers a user can add, false for only login and registration providers")))),u.default.createElement("h2",{ref:"reference-updateUserNotificationPreferences"},"VoiceStorm.updateUserNotificationPreferences()"),u.default.createElement("p",null,"Update a user's notification preferences. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Responses/successResponse"},"successResponse"),"."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.updateUserNotificationPreferences(preferences)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"preferences"),u.default.createElement("td",null,"object"),u.default.createElement("td",null,"preferences is a set of key/value pairs to update. See the ",u.default.createElement(c.Link,{to:"/api/Users#GET_userNotificationPreferences"},"GET /v1/usernotificationspreferences")," response.")))),u.default.createElement("h2",{ref:"reference-user"},"VoiceStorm.user()"),u.default.createElement("p",null,"Requests details of a specific user. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_user"},"GET /v1/user")," response."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",null,u.default.createElement("strong",null,"VoiceStorm.user()"))),u.default.createElement("tr",null,u.default.createElement("td",null,"request details of the currently logged in user")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.user(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of user to request")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"
},u.default.createElement("strong",null,"VoiceStorm.user(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"optional id of user to request, defaults to currently logged in user")),u.default.createElement("tr",null,u.default.createElement("td",null,"include"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"optional comma delimited string of the following to request additional user information:",u.default.createElement("br",null),u.default.createElement("ul",null,u.default.createElement("li",null,"‘address’ to include the user’s address"),u.default.createElement("li",null,"‘affiliations’ to include the user affiliations"),u.default.createElement("li",null,"‘channels’ to include connected social providers"),u.default.createElement("li",null,"‘images’ to include the profile image")))))),u.default.createElement("h2",{ref:"reference-userAddChannel"},"VoiceStorm.userAddChannel()"),u.default.createElement("p",null,"Shows the user interface for a user to add a specific social provider account to their profile. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/responses#providerAuthResponse"},"providerAuthResponse"),". In most cases, this will show a 3rd party Oauth dialog as a popup window. Because a popup window is required, this should only be called in response to a user click event; otherwise a user popup blocker may block the new window."),u.default.createElement("p",null,"For this function to succeed, you must include a channel.html file on your site and set ",u.default.createElement("code",null,"VoiceStorm.defaults.channelUrl")," to point to that file. See ",u.default.createElement("a",{href:"#social"},u.default.createElement("strong",null,"Social Login and Channel Registration"))," for details."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.userAddChannel(providerName)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"providerName"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,'canonicalName of a social provider that supports add channel, such as "Facebook". To get a list of social providers that support add channel, call ',u.default.createElement("a",{href:"#reference-socialProviders"},u.default.createElement("strong",null,"VoiceStorm.socialProviders('AddChannel')")),". providerName is case-sensitive")))),u.default.createElement("h2",{ref:"reference-userNotificationPreferences"},"VoiceStorm.userNotificationPreferences()"),u.default.createElement("p",null,"Requests a user's notification preferences. Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/Users#GET_userNotificationPreferences"},"GET /v1/usernotificationspreferences"),"."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.userNotificationPreferences(id)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of user to request")))),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.",u.default.createElement("strong",null,"userNotificationPreferences"),"(options)"))),u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},"options is a set of key/value pairs to configure the request:")),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required id of user to request")))),u.default.createElement("h2",{ref:"reference-userNotificationsResendSmsCode"},"VoiceStorm.userNotificationsResendSmsCode()"),u.default.createElement("p",null,"Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/responses/successResponse"},"successResponse"),"."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.userNotificationsResendSmsCode(id, returnUrl)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required user id")),u.default.createElement("tr",null,u.default.createElement("td",null,"returnUrl"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required URL in the sms verification message")))),u.default.createElement("h2",{ref:"reference-userNotificationsVerifySmsCode"},"VoiceStorm.userNotificationsVerifySmsCode()"),u.default.createElement("p",null,"Returns a promise object. The success handler will be passed a ",u.default.createElement(c.Link,{to:"/api/responses/successResponse"},"successResponse"),"."),u.default.createElement("table",{className:"table table-bordered table-striped js-table"},u.default.createElement("tbody",null,u.default.createElement("tr",null,u.default.createElement("td",{colSpan:"3"},u.default.createElement("strong",null,"VoiceStorm.userNotificationsVerifySmsCode(id, smsVerificationCode)"))),u.default.createElement("tr",null,u.default.createElement("td",null,"id"),u.default.createElement("td",null,"number"),u.default.createElement("td",null,"required user id")),u.default.createElement("tr",null,u.default.createElement("td",null,"smsVerificationCode"),u.default.createElement("td",null,"string"),u.default.createElement("td",null,"required sms verification code")))))}}]),t}(u.default.Component);t.default=p},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(9),i=function(){return s.default.createElement("nav",{className:"sidebar"},s.default.createElement("h2",null)," ",s.default.createElement("div",{className:"scroll"},s.default.createElement("div",{className:"nav-links"},s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/javascript-sdk/intro"},"Introduction")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/javascript-sdk/environment"},"Environment")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/javascript-sdk/promise"},"Promise Objects")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/javascript-sdk/error"},"Error Objects")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/javascript-sdk/auth"},"Authentication & Security")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(o.NavLink,{to:"/javascript-sdk/reference"},"Reference")))))};t.default=i},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(9),d=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"onSearch",value:function(e){console.log("Header search input",e)}},{key:"handleSubmit",value:function(e){e.preventDefault()}},{key:"render",value:function(){var e=this;return u.default.createElement("div",{className:"header"},u.default.createElement("ul",null,u.default.createElement("li",{className:"brand"},u.default.createElement(m.Link,{to:"/"},u.default.createElement("img",{src:"./Docs.png",alt:"API Documentation"}))),u.default.createElement("li",{className:"search"},u.default.createElement("form",{onSubmit:this.handleSubmit,autoComplete:"off"},u.default.createElement("input",{type:"text",name:"search",placeholder:"Search",autoComplete:"off",onChange:function(t){return e.onSearch(t.target.value)}}))),u.default.createElement("li",null,u.default.createElement(m.NavLink,{exact:!0,to:"/"},"Home")),u.default.createElement("li",null,u.default.createElement(m.NavLink,{to:"/getting-started"},"Getting Started")),u.default.createElement("li",null,u.default.createElement(m.NavLink,{to:"/api"},"API Reference")),u.default.createElement("li",null,u.default.createElement(m.NavLink,{to:"/javascript-sdk"},"JavaScript SDK")),u.default.createElement("li",null,u.default.createElement(m.NavLink,{to:"/widgets"},"Widgets"))))}}]),t}(u.default.Component);t.default=d},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(9),u=function(e){var t=e.category,n=e.widgets;return s.default.createElement("div",{className:"category-link nav-link"},s.default.createElement(l.NavLink,{to:"/widgets/"+t.name},t.name," Widgets"),s.default.createElement("div",{className:"route-links"},Object.values(n).filter(function(e){return e.category===t.name}).sort().map(function(e){return s.default.createElement(l.NavLink,{key:e.name,activeClassName:"selected",to:"/widgets/"+t.name+"/"+e.name},e.name)})))};u.propTypes={category:i.default.object.isRequired,widgets:i.default.object.isRequired},t.default=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){return Object.values(e).filter(function(e){return e.category===t}).sort(function(e,t){return e.name<t.name?-1:e.name>t.name?1:0})}Object.defineProperty(t,"__esModule",{value:!0});var s=n(1),o=a(s),i=n(4),l=a(i),u=n(152),m=a(u),d=function(e){var t=e.categories,n=e.widgets,a=e.categoryName;return a?o.default.createElement(m.default,{widgets:r(n,a)}):o.default.createElement("ul",{className:"category-list list-unstyled"},Object.values(t).sort(function(e,t){return e.name<t.name?-1:e.name>t.name?1:0}).map(function(e){return o.default.createElement("li",{key:e.name},o.default.createElement("h2",null,e.name," Widgets"),o.default.createElement(m.default,{widgets:r(n,e.name)}))}))};d.propTypes={categories:l.default.object.isRequired,widgets:l.default.object.isRequired,categoryName:l.default.string},t.default=d},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(9),u=n(146),m=a(u),d=function(e){var t=e.categories,n=e.widgets;return s.default.createElement("nav",{className:"sidebar"},s.default.createElement("h2",null)," ",s.default.createElement("div",{className:"scroll"},s.default.createElement("div",{className:"nav-links"},s.default.createElement("div",{className:"nav-link"},s.default.createElement(l.NavLink,{to:"/widgets/intro"},"Introduction")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(l.NavLink,{to:"/widgets/how"},"How Widgets Work")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(l.NavLink,{to:"/widgets/customize"},"Customization")),s.default.createElement("div",{className:"nav-link"},s.default.createElement(l.NavLink,{to:"/widgets/style"},"Styling")),s.default.createElement("h2",null,"Widget Reference"),Object.keys(t).sort().map(function(e){return s.default.createElement(m.default,{key:e,index:e,category:t[e],widgets:n})}))))};d.propTypes={categories:i.default.object.isRequired,widgets:i.default.object.isRequired},t.default=d},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(147),u=a(l),m=n(74),d=a(m),c=n(38),p=a(c),h=function(e){var t=e.categories,n=e.widgets,a=e.category;return a?s.default.createElement("div",{className:"widget-category"},s.default.createElement(d.default,null),s.default.createElement("h2",null,a.name," Widgets"),s.default.createElement("p",{className:"summary"},a.summary),s.default.createElement(u.default,{categories:t,widgets:n,categoryName:a.name})):s.default.createElement(p.default,null)};h.propTypes={categories:i.default.object.isRequired,widgets:i.default.object.isRequired,category:i.default.object.isRequired},t.default=h},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(40),u=a(l),m=n(41),d=a(m),c=function(e){var t=e.event;return s.default.createElement("tr",null,s.default.createElement("td",null,t.name,t.isPreventable&&s.default.createElement("div",null,s.default.createElement("em",null,"preventable"))),s.default.createElement("td",null,s.default.createElement(u.default,{desc:t.summary}),t.helper&&s.default.createElement(d.default,{helperName:t.helper})))};c.propTypes={event:i.default.object.isRequired},t.default=c},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(150),u=a(l),m=function(e){var t=e.widget,n=Object.values(t.events)[0],a=Object.values(t.events).filter(function(e){return e.isPreventable}),r=a[0],o=Object.values(t.events).filter(function(e){return e.hasResponse}),i=o[0],l="#my"+t.name;return s.default.createElement("div",{className:"widget-events"},s.default.createElement("h3",{id:t.name+"-events"},"Events"),s.default.createElement("p",null,"The ",t.name," widget exposes events for hooking into its functionality."),s.default.createElement("table",{className:"table table-bordered table-striped bs-events-table"},s.default.createElement("thead",null,s.default.createElement("tr",null,s.default.createElement("th",null,"Event Type"),s.default.createElement("th",null,"Description"))),s.default.createElement("tbody",null,Object.values(t.events).map(function(e){return s.default.createElement(u.default,{key:e.name,event:e})}))),r&&s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},"$('"+l+"').on('"+r.name+"'), function (event) {\n\tif (!validate()) {\n\t\tevent.preventDefault();\n\t}\n}")),i&&s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},"$('"+l+"').on('"+i.name+'\'), function (event, response) {\n\tif (response.status === "success") {\n\t\t// do something...\n\t}\n}')),!r&&!i&&s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},"$('"+l+"').on('"+n.name+"'), function (event) {\n\t// do something...\n}")))};m.propTypes={widget:i.default.object.isRequired},t.default=m},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(153),u=a(l),m=function(e){var t=e.widgets,n=t.map(function(e){return s.default.createElement(u.default,{key:e.name,widgetName:e.name,categoryName:e.category})});return s.default.createElement("ul",{className:"widget-list list-unstyled"},n)};m.propTypes={widgets:i.default.array.isRequired},t.default=m},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(9),u=function(e){var t=e.widgetName,n=e.categoryName;return s.default.createElement("li",null,s.default.createElement(l.NavLink,{to:"/widgets/"+n+"/"+t},t))};u.propTypes={widgetName:i.default.string.isRequired,categoryName:i.default.string},t.default=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=function(e){var t=e.widgetName,n=".VoiceStorm"+t,a="#my"+t;return s.default.createElement("div",{className:"widget-methods"},s.default.createElement("h3",{id:n+"-methods"},"Methods"),s.default.createElement("h4",null,s.default.createElement("code",null,n,"(options)")),s.default.createElement("p",null,"Renders the widget into your element. Accepts an optional options ",s.default.createElement("code",null,"object"),"."),s.default.createElement("pre",{className:"language-javascript"},s.default.createElement("code",{className:"language-javascript"},"$('"+a+"')"+n+"({\n\toption: value\n});")),s.default.createElement("h4",null,s.default.createElement("code",null,n,"('option', 'name')")),s.default.createElement("p",null,"Returns the value of option 'name'."),s.default.createElement("h4",null,s.default.createElement("code",null,n,"('option', 'name', value)")),s.default.createElement("p",null,"Sets option 'name' to ",s.default.createElement("code",null,"value"),"."),s.default.createElement("h4",null,s.default.createElement("code",null,n,"('refresh')")),s.default.createElement("p",null,"Reloads the widget using the current options and data."))};l.propTypes={widgetName:i.default.string.isRequired},t.default=l},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(40),u=a(l),m=n(41),d=a(m),c=function(e){var t=e.option;return s.default.createElement("tr",null,s.default.createElement("td",null,t.name),s.default.createElement("td",null,s.default.createElement("span",null,t.type)," ",t.localizable&&s.default.createElement("em",null,"localizable")),s.default.createElement("td",null,t.default),s.default.createElement("td",null,t.required&&s.default.createElement("strong",null,"Required."),s.default.createElement(u.default,{desc:t.summary}),t.helper&&s.default.createElement(d.default,{helperName:t.helper})))};c.propTypes={option:i.default.object.isRequired},t.default=c},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),s=a(r),o=n(4),i=a(o),l=n(155),u=a(l),m=function(e){var t=e.widget;return s.default.createElement("div",{className:"widget-options"},s.default.createElement("h3",{id:t.name+"-options"},"Options"),s.default.createElement("p",null,"Options can be passed via data attributes or JavaScript. For data attributes, append the option name to ",s.default.createElement("code",null,"data-voicestorm-"),", as in ",s.default.createElement("code",null,'data-voicestorm-option="value"'),"."),s.default.createElement("table",{className:"table table-bordered table-striped js-options-table"},s.default.createElement("thead",null,s.default.createElement("tr",null,s.default.createElement("th",null,"Name"),s.default.createElement("th",null,"Type"),s.default.createElement("th",null,"Default"),s.default.createElement("th",null,"Description"))),s.default.createElement("tbody",null,Object.values(t.options).map(function(e){return s.default.createElement(u.default,{key:e.name,option:e})}))))};m.propTypes={widget:i.default.object.isRequired},t.default=m},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=n(1),u=a(l),m=n(4),d=a(m),c=n(74),p=a(c),h=n(40),f=a(h),y=n(41),g=a(y),v=n(156),b=a(v),T=n(154),w=a(T),S=n(151),E=a(S),R=n(38),P=a(R),C=function(e){function t(){return r(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),i(t,[{key:"componentDidMount",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"componentDidUpdate",value:function(){window.Prism&&window.Prism.highlightAll()}},{key:"render",value:function(){var e=this.props.widget;return e?u.default.createElement("div",{className:"widget-reference"},u.default.createElement(p.default,null),u.default.createElement("h2",null,e.name),u.default.createElement("p",null,u.default.createElement(f.default,{desc:e.summary}),e.helper&&u.default.createElement(g.default,{helperName:e.helper})),e.hasImage&&u.default.createElement("img",{src:"/img/widgets/"+e.name+".png",alt:"Widget sample"}),u.default.createElement(b.default,{widget:e}),u.default.createElement(w.default,{widgetName:e.name}),u.default.createElement(E.default,{widget:e})):u.default.createElement(P.default,null)}}]),t}(u.default.Component);C.propTypes={widget:d.default.object.isRequired},t.default=C},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(149),o=a(s),i=function(e,t){var n=t.match.params.category,a=e.widgets.categories[n];return{categories:e.widgets.categories,widgets:e.widgets.widgets,category:a}};t.default=(0,r.connect)(i)(o.default)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(157),o=a(s),i=function(e,t){var n=t.match.params.widget,a=e.widgets.widgets[n];return{categories:e.widgets.categories,widgets:e.widgets.widgets,widget:a}};t.default=(0,r.connect)(i)(o.default)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(16),s=n(126),o=a(s),i=function(e,t){return{categories:e.widgets.categories,widgets:e.widgets.widgets,widget:t.match.params.widget}};t.default=(0,r.connect)(i)(o.default)},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.API_SEARCH_INPUT_CHANGED="API_SEARCH_INPUT_CHANGED",t.API_CUSTOM_TYPE_CLICKED="API_CUSTOM_TYPE_CLICKED"},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.apidocs={categories:[{name:"Utility",summary:"API calls for developer convenience.",notes:"",routes:[{name:["/utility/ping","/utility/ping/{text}"],path:["/v1/utility/ping","/v1/utility/ping/{text}"],verbs:["GET"],request:{name:"ping",summary:"An echo request that responds if the API is up",fields:[{type:"string",name:"text",summary:"Optional text to include in the response",nativeType:"string"}],example:"GET http://sample.voicestorm.com/v1/ping HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"pingResponse"},{name:["/utility/geos"],path:["/v1/utility/geos"],verbs:["GET"],request:{name:"geos",summary:"Gets the list of defined countries, states, and provinces",fields:[]},apiResponse:"geosResponse"},{name:["/utility/timezones"],path:["/v1/utility/timezones"],verbs:["GET"],request:{name:"timeZones",summary:"Gets the list of time zones supported by the platform.  These time zones are IANA (or Olson) time zones.",fields:[]},apiResponse:"timeZonesResponse"},{name:["/utility/languages"],path:["/v1/utility/languages"],verbs:["GET"],request:{name:"languages",summary:"Gets the list of languages that the community supports.  For the meaning of language codes see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",fields:[]},apiResponse:"languagesResponse"},{name:["POST PUT /utility/testpassword"],path:["/v1/utility/testpassword"],verbs:["POST","PUT"],request:{name:"testPassword",summary:"Tests whether a given password satisfies the community's password security requirements",fields:[{type:"string",name:"sample",summary:"Sample password to test",nativeType:"string"}]},apiResponse:"testPasswordResponse"}]},{name:"Users",summary:"APIs to manage users, user profiles, and retrieve a variety of user-specific data.",notes:"The user APIs let developers work with the currently logged in user, or other users.  In addition to the user profile, there are APIs to award or retrieve user points, retrieve user shares and submited posts.",routes:[{name:["/affiliations"],path:["/v1/affiliations"],verbs:["GET"],request:{name:"affiliations",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the list of affiliation questions and their associated answers.",notes:"Users can be attributed with these question and answer pairs.",fields:[],example:"GET http://sample.voicestorm.com/v1/affiliations HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"affiliationsResponse"},{name:["/user"],path:["/v1/user"],verbs:["GET"],request:{name:"defaultUser",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the currently logged-in user",fields:[{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Channels" to return the the user\'s channels.  Specify "Images" to return the user\'s profile images.  Specify "Affiliations" to return the user\'s affiliations.  Specify "ScheduleSettings" to return the user\'s auto-scheduling preferences, if permissions allow.',defaultValue:"Channels,Images",isArray:!0,nativeType:"List<string>"}],example:"GET http://sample.voicestorm.com/v1/user?accessToken=[ACCESS_TOKEN] HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"userRequestResponse"},{name:["/user/{id}"],path:["/v1/user/{id}"],verbs:["GET"],request:{name:"user",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the specified user",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Channels" to return the the user\'s channels.  Specify "Images" to return the user\'s profile images.  Specify "Affiliations" to return the user\'s affiliations.  Specify "ScheduleSettings" to return the user\'s auto-scheduling preferences, if permissions allow.',defaultValue:"Channels,Images",isArray:!0,nativeType:"List<string>"}],example:"GET http://sample.voicestorm.com/v1/user/16281 HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"userRequestResponse"},{name:["POST PUT /user/email"],path:["/v1/user/email"],verbs:["POST","PUT"],request:{name:"userByEmailRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a user by their email address",sdkName:"GetUserByEmail",fields:[{type:"string",name:"email",summary:"The user's email",required:!0,nativeType:"string"},{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Channels" to return the the user\'s channels.  Specify "Images" to return the user\'s profile images.  Specify "Affiliations" to return the user\'s affiliations.  Specify "ScheduleSettings" to return the user\'s auto-scheduling preferences, if permissions allow.',defaultValue:"Channels,Images",isArray:!0,nativeType:"List<string>"}]},apiResponse:"userRequestResponse"},{name:["/users"],path:["/v1/users"],verbs:["GET"],request:{name:"users",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of users",fields:[{type:"long",name:"ids",summary:"The user IDs",required:!0,isArray:!0,nativeType:"List<long>"},{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Channels" to return the the user\'s channels.  Specify "Images" to return the user\'s profile images.  Specify "Affiliations" to return the user\'s affiliations.  Specify "ScheduleSettings" to return the user\'s auto-scheduling preferences, if permissions allow.',defaultValue:"Channels,Images",isArray:!0,nativeType:"List<string>"}]},apiResponse:"usersResponse"},{name:["/user/{id}/points","/userpoints"],path:["/v1/user/{id}/points","/v1/userpoints"],verbs:["GET"],request:{name:"userPoints",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of user point records",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"int",name:"skip",summary:"The starting index in the list of point records",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of points records to return",nativeType:"int"}],example:"GET http://sample.voicestorm.com/v1/user/210/points HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"userPointsResponse"},{name:["/user/{id}/rankings","/userrankings"],path:["/v1/user/{id}/rankings","/v1/userrankings"],verbs:["GET"],request:{name:"userRankings",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets all leaderboard rankings for a user",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"}]},apiResponse:"userLeaderboardsResponse"},{name:["/userchannel/{id}","/userchannel"],path:["/v1/userchannel/{id}","/v1/userchannel"],verbs:["GET"],request:{name:"userChannel",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the specified user channel",fields:[{type:"long",name:"id",summary:"The user channel ID",required:!0,nativeType:"long"},{type:"string",name:"include",summary:"Specifies optional data to return with the user channel.",notes:'Specify "Images" to return the user\'s profile images.',defaultValue:"none",isArray:!0,nativeType:"List<string>"}]},apiResponse:"userChannelResponse"},{name:["/user/{id}/channels","/userchannels"],path:["/v1/user/{id}/channels","/v1/userchannels"],verbs:["GET"],request:{name:"userChannels",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of channels connected by a user",
fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"include",summary:"Specifies optional data to return with each user channel.",notes:'Specify "Images" to return the user\'s profile images.',defaultValue:"none",isArray:!0,nativeType:"List<string>"}]},apiResponse:"userChannelsResponse"},{name:["/user/{id}/posts","/userposts"],path:["/v1/user/{id}/posts","/v1/userposts"],verbs:["GET"],request:{name:"userPosts",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of posts made by a user",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"include",summary:"Specifies optional data to return with the stream.",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.',isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, only returns the post IDs in the stream.  If false, returns the full posts.  Use for de-duplicating posts client side.",nativeType:"bool"},{type:"int",name:"skip",summary:"The starting index in the list of posts",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of posts to return",nativeType:"int"}],example:"GET http://sample.voicestorm.com/v1/user/210/posts HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"postStreamResponse"},{name:["POST PUT /user/{id}/points","POST PUT /userpoints"],path:["/v1/user/{id}/points","/v1/userpoints"],verbs:["POST","PUT"],request:{name:"userPointsAward",isAuthorizationRequired:!0,authorizationRoles:["Manager","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Awards points to the specified user.  This method is only available via the server-side REST API.",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"long",name:"userChannelId",summary:"The ID of the user channel that earned the points",nativeType:"long?"},{type:"bool",name:"isRedemption",summary:"Indicates if this point record is for a redemption (rather than an award or deduction)",defaultValue:"false",nativeType:"bool"},{type:"decimal",name:"pointValue",summary:"The value of the points",required:!0,nativeType:"Decimal"},{type:"string",name:"description",summary:"A user-visible description of the points",nativeType:"string"},{type:"string",name:"apiPointType",summary:"A type specified by the API caller who awarded the points",nativeType:"string"},{type:"string",name:"apiPointInfo",summary:"A JSON blob specified by the API caller.",notes:"The system treats this opaquely.",required:!0,nativeType:"string"}],example:"POST http://sample.voicestorm.com/v1/userpoints HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nAuthorization: Bearer [BEARER_TOKEN]\r\nContent-Type: application/x-www-form-urlencoded\r\nHost: sample.voicestorm.com\r\nContent-Length: 100\r\nConnection: Keep-Alive\r\n\r\nid=16281&pointvalue=100&description=From the api&apipointtype=TypeTest&apipointinfo={ a: 120, b:100}"},apiResponse:"userPointsAwardResponse"},{name:["/user/{id}/notifications/preferences","/usernotificationspreferences"],path:["/v1/user/{id}/notifications/preferences","/v1/usernotificationspreferences"],verbs:["GET"],request:{name:"userNotificationPreferencesRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the notification preferences for the specified user",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"}]},apiResponse:"userNotificationPreferencesResponse"},{name:["POST PUT /user/{id}/notifications/preferences","POST PUT /usernotificationspreferences"],path:["/v1/user/{id}/notifications/preferences","/v1/usernotificationspreferences"],verbs:["POST","PUT"],request:{name:"updateUserNotificationPreferencesRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the notification preferences for the specified user",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"bool",name:"preferences",summary:"The notification preferences to set.  The keys are the preference IDs.  The values indicate whether each preference is enabled.",notes:"Any preferences not included in the collection will be unchanged.",isCollection:!0,nativeType:"Dictionary<string, bool>"},{type:"bool",name:"subscribeToSms",summary:"Is the user subscribed to SMS text notifications?",notes:"SMS support requires a Twilio account.  Please contact your account manager for details on this feature.",nativeType:"bool?"},{type:"string",name:"smsPhoneNumber",summary:"The phone number that SMS messages will be sent to",nativeType:"string"},{type:"string",name:"smsReturnUrl",summary:"The URL in the SMS verification text message.",notes:"This URL to the site must be sent whenever a verification is provided.",nativeType:"string"},{type:"bool",name:"subscribeToEmails",summary:"(Deprecated.  Use the Preferences field.)  Is the user subscribed to email?",nativeType:"bool?"},{type:"bool",name:"subscribeToDigests",summary:"(Deprecated.  Use the Preferences field.)  Is the user subscribed to regular digests?",nativeType:"bool?"},{type:"bool",name:"subscribeToShareFollowup",summary:"(Deprecated.  Use the Preferences field.)  Is the user subscribed to share followups?",nativeType:"bool?"}]},apiResponse:"userNotificationPreferencesResponse"},{name:["POST PUT /user/{id}/notifications/verifysmscode","POST PUT /usernotificationsverifysmscode"],path:["/v1/user/{id}/notifications/verifysmscode","/v1/usernotificationsverifysmscode"],verbs:["POST","PUT"],request:{name:"userNotificationPreferencesVerifySmsRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Verifies the SMS code for the specified user",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"smsVerificationCode",summary:"The SMS verification code",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /user/{id}/notifications/resendsmscode","POST PUT /usernotificationsresendsmscode"],path:["/v1/user/{id}/notifications/resendsmscode","/v1/usernotificationsresendsmscode"],verbs:["POST","PUT"],request:{name:"userNotificationPreferencesResendSmsRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Resends the SMS code for the specified user",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"smsReturnUrl",summary:"The URL in the SMS verification text message.",notes:"This URL to the site must be sent whenever a verification is provided.",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /user/{id}","POST PUT /user"],path:["/v1/user/{id}","/v1/user"],verbs:["POST","PUT"],request:{name:"userRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Updates properties on a user",fields:[{type:"long",name:"id",summary:"The user's internal ID",nativeType:"long"},{type:"string",name:"email",summary:"The user's email address",nativeType:"string"},{type:"string",name:"firstName",summary:"The user's first name",nativeType:"string"},{type:"string",name:"lastName",summary:"The user's last name",nativeType:"string"},{type:"string",name:"location",summary:"The user's self-described location (may not be an actual geographic location)",nativeType:"string"},{type:"string",name:"externalApiUserId",summary:"The user's ID on the external system managed by the caller of this API",nativeType:"string"},{type:"long",name:"managerUserId",summary:"The ID of the user's manager",nativeType:"long?"},{type:"string",name:"timeZone",summary:'User time zone represented as a tz database time zone name as set by IANA. Example: "America/Los_Angeles".',nativeType:"string"},{type:"string",name:"selectedTimeZone",summary:'The user\'s selected time zone represented as a tz database time zone name as set by IANA. Example: "America/Los_Angeles".',nativeType:"string"},{type:"string",name:"apiInfo",summary:"API-specific property bag",nativeType:"string"},{type:"userTagRequestResponse",name:"tags",summary:"The user's tags",isCollection:!0,nativeType:"Dictionary<string, UserTagRequestResponse>"},{type:"userBadgeRequestResponse",name:"badges",summary:"(Deprecated) The user's badges",isCollection:!0,nativeType:"Dictionary<string, UserBadgeRequestResponse>"},{type:"userAffiliationResponse",name:"affiliations",summary:"The user's affiliations",isArray:!0,nativeType:"List<UserAffiliationResponse>"},{type:"divisionResponse",name:"divisions",summary:"The user's divisions",isArray:!0,nativeType:"List<DivisionResponse>"},{type:"string",name:"languages",summary:"The user's languages",isArray:!0,nativeType:"List<string>"},{type:"string",name:"primaryLanguage",summary:"The user's primary interface language",nativeType:"string"},{type:"userScheduleSettingsResponse",name:"scheduleSettings",summary:"The user's preferred auto schedule share settings",nativeType:"UserScheduleSettingsResponse"},{type:"whitelistIdentifiersResponse",name:"identifiers",summary:"A list of identifiers that the user entered during registration",notes:"This property is read-only.",isArray:!0,nativeType:"IEnumerable<WhitelistIdentifiersResponse>"}]},apiResponse:"userRequestResponse"},{name:["DELETE /user/{id}","DELETE POST /deleteuser"],path:["/v1/user/{id}","/v1/deleteuser"],verbs:["DELETE","POST"],request:{name:"deleteUserRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes a user from the system",notes:"The user's account and channels will be removed from the system. Articles, shares, and additional activity created by the user will continue to be present in the system.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"}]},apiResponse:"successResponse"},{name:["POST PUT /user/socialprofileimage"],path:["/v1/user/socialprofileimage"],verbs:["POST","PUT"],request:{name:"socialProfileImage",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the current user's profile image with a profile image from a social channel",fields:[{type:"long",name:"userChannelId",summary:"The user channel ID",nativeType:"long"}]},apiResponse:"successResponse"},{name:["PUT /user/{id}/profileimage","PUT /userprofileimage"],path:["/v1/user/{id}/profileimage","/v1/userprofileimage"],verbs:["PUT"],request:{name:"uploadUserProfileImage",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets a user's profile image via binary upload.",notes:"This method is used when uploading a binary image directly.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"bool",name:"cropImage",summary:"If set, crop the image.",notes:"Must also specify StartX, StartY, Width, and Height.",nativeType:"bool"},{type:"int",name:"startX",summary:"The starting x-axis coordinate relative to the left of the image",nativeType:"int?"},{type:"int",name:"startY",summary:"The starting y-axis coordinate relative to the top of the image",nativeType:"int?"},{type:"int",name:"width",summary:"The resulting width of the cropped image",nativeType:"int?"},{type:"int",name:"height",summary:"The resulting height of the cropped image",nativeType:"int?"}],headers:{"Content-Type":{header:"Content-Type",notes:"Options include: image/jpg, image/jpeg, image/pjpeg, image/png, image/x-png, image/gif",isRequired:!0}},example:"PUT http://sample.voicestorm.com/v1/userprofileimage?AccessToken=<TOKEN> HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nContent-Type: image/jpeg\r\nHost: d1034:16071\r\nContent-Length: 122721\r\nConnection: Keep-Alive\r\n\r\n<Image Binary Data>"},apiResponse:"successResponse"},{name:["POST /user/{id}/profileimage","POST /userprofileimage"],path:["/v1/user/{id}/profileimage","/v1/userprofileimage"],verbs:["POST"],request:{name:"uploadUserProfileImageFile",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the user's profile image via MIME-multipart upload.",notes:"Use this method when uploading a binary image from a browser form.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"bool",name:"cropImage",summary:"If set, crop the image.",notes:"Must also specify StartX, StartY, Width, and Height.",nativeType:"bool"},{type:"int",name:"startX",summary:"The starting x-axis coordinate relative to the left of the image",nativeType:"int?"},{type:"int",name:"startY",summary:"The starting y-axis coordinate relative to the top of the image",nativeType:"int?"},{type:"int",name:"width",summary:"The resulting width of the cropped image",nativeType:"int?"},{type:"int",name:"height",summary:"The resulting height of the cropped image",nativeType:"int?"}]},apiResponse:"successResponse"},{name:["POST PUT /user/{id}/cropprofileimage","POST PUT /usercropprofileimage"],path:["/v1/user/{id}/cropprofileimage","/v1/usercropprofileimage"],verbs:["POST","PUT"],request:{name:"cropUserProfileImage",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Crops an existing user profile image.",notes:"Use for browsers such as IE9 and less that don't support HTML5 image upload.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"bool",name:"cropImage",summary:"If set, crop the image.",notes:"Must also specify StartX, StartY, Width, and Height.",nativeType:"bool"},{type:"int",name:"startX",summary:"The starting x-axis coordinate relative to the left of the image",nativeType:"int?"},{type:"int",name:"startY",summary:"The starting y-axis coordinate relative to the top of the image",nativeType:"int?"},{type:"int",name:"width",summary:"The resulting width of the cropped image",nativeType:"int?"},{type:"int",name:"height",summary:"The resulting height of the cropped image",nativeType:"int?"}]},apiResponse:"successResponse"},{name:["POST /user/{id}/addchannel","POST /useraddchannel"],path:["/v1/user/{id}/addchannel","/v1/useraddchannel"],verbs:["POST"],request:{name:"userAddChannel",isAuthorizationRequired:!0,authorizationRoles:["manager","member"],authorizationMethods:["SdkToken"],summary:"Starts the add channel process for a new user channel.",notes:"The user must be logged in.  Due to the nature of OAuth, this API is only available via the JS SDK.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"string",name:"provider",summary:"The provider",nativeType:"string"},{type:"string",name:"extraData",summary:"The extra data",notes:"Ignored when the interactive flag is set to true.",nativeType:"string"},{type:"bool",name:"interactive",summary:"Set true for hybrid mobile apps that will show the popup in a browser context.",nativeType:"bool"},{type:"string",name:"returnUrl",summary:"When the interactive flag is set to true, where to redirect after completion.",nativeType:"string"}],example:"POST http://sample.voicestorm.com/v1/useraddchannel HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nContent-Type: application/x-www-form-urlencoded\r\nHost: sample.voicestorm.com\r\nContent-Length: 563\r\n\r\nAccessToken=[ACCESS_TOKEN]&Provider=Twitter"},apiResponse:"providerStartResponse"},{name:["POST PUT /user/{id}/removechannel/{userchannelid}","POST PUT /userremovechannel"],path:["/v1/user/{id}/removechannel/{userChannelId}","/v1/userremovechannel"],verbs:["POST","PUT"],request:{name:"userRemoveChannel",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Removes a user channel",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"long",name:"userChannelId",summary:"The user channel ID",nativeType:"long"},{type:"long",name:"userChannelIds",summary:"The user channel IDs",isArray:!0,nativeType:"List<long>"}]},apiResponse:"successResponse"},{name:["POST PUT /user/{id}/defaultsharingchannels","POST PUT /userdefaultsharingchannels"],path:["/v1/user/{id}/defaultsharingchannels","/v1/userdefaultsharingchannels"],verbs:["POST","PUT"],request:{name:"userDefaultSharingChannels",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets which user channels are preselected for sharing.",notes:"This method updates the sharingDefault flag in the user's channels.  See <a href='http://dev.voicestorm.com/api#userChannelResponse_response'>userChannelResponse</a>.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"long",name:"userChannelIds",summary:"The user channel IDs to preselect",isArray:!0,nativeType:"List<long>"}]},apiResponse:"successResponse"},{name:["POST PUT /user/{id}/addtag","POST PUT /useraddtag"],path:["/v1/user/{id}/addtag","/v1/useraddtag"],verbs:["POST","PUT"],request:{name:"userAddTag",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Adds a tag to a user.",notes:"This API does not support creating new tags or attributes.",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"name",summary:"The tag to add",notes:"If value is set, this is the name of the attribute to add.",required:!0,nativeType:"string"},{type:"string",name:"value",summary:"The optional value",notes:"This will set the value of the respective attribute.",nativeType:"string"}],example:"POST http://sample.voicestorm.com/v1/user/16281/addtag HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nAuthorization: Bearer [BEARER_TOKEN]\r\nContent-Type: application/x-www-form-urlencoded\r\nHost: sample.voicestorm.com\r\nContent-Length: 16\r\nConnection: Keep-Alive\r\n\r\nname=KeyboardCat"},apiResponse:"successResponse"},{name:["POST PUT /user/{id}/removetag","POST PUT /userremovetag"],path:["/v1/user/{id}/removetag","/v1/userremovetag"],verbs:["POST","PUT"],request:{name:"userRemoveTag",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Removes a tag or attribute from a user.",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"name",summary:"The tag or attribute to remove",required:!0,nativeType:"string"}],example:"POST http://sample.voicestorm.com/v1/user/16281/removetag HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nAuthorization: Bearer [BEARER_TOKEN]\r\nContent-Type: application/x-www-form-urlencoded\r\nHost: sample.voicestorm.com\r\nContent-Length: 16\r\nConnection: Keep-Alive\r\n\r\nname=KeyboardCat"},apiResponse:"successResponse"},{name:["/manage/affiliations"],path:["/v1/manage/affiliations"],verbs:["GET"],request:{name:"managerAffiliations",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the list of affiliation questions and their associated answers.",notes:"Users can be attributed with these question and answer pairs.  This includes manager only affiliation questions.",fields:[]},apiResponse:"affiliationsResponse"},{name:["/manage/user/{id}/affiliations"],path:["/v1/manage/user/{id}/affiliations"],verbs:["GET"],request:{name:"managerGetUserAffiliations",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the affiliation answers given by a specific user.",notes:"This includes manager only affiliation questions.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"}]},apiResponse:"userAffiliationsRequestResponse"},{name:["POST PUT /manage/user/{id}/affiliations"],path:["/v1/manage/user/{id}/affiliations"],verbs:["POST","PUT"],request:{name:"managerSetUserAffiliations",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Updates the affiliation answers for a user.",notes:"This includes manager only affiliation questions.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"userAffiliationResponse",name:"affiliations",summary:"The list of the user's affiliations",isArray:!0,nativeType:"IEnumerable<UserAffiliationResponse>"}]},apiResponse:"userAffiliationsRequestResponse"},{name:["PUT /manage/user/{id}/email"],path:["/v1/manage/user/{id}/email"],verbs:["PUT"],request:{name:"updateUserEmailRequest",isAuthorizationRequired:!0,authorizationRoles:["servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Attempts to update a user's email address.",notes:"If there is a conflict with an existing email address, you must resolve this conflict using the Manager Portal.",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"email",summary:"The user's new email address",required:!0,nativeType:"string"}]},apiResponse:"userRequestResponse"},{name:["POST /manage/user/{id}/delete"],path:["/v1/manage/user/{id}/delete"],verbs:["POST"],request:{name:"manageDeleteUserRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes a user from the system",notes:"The user's account and channels will be deleted. The user's posts, comments, rankings, and other activity will be retained.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"}]},apiResponse:"successResponse"},{name:["POST /manage/user/{id}/suspend"],path:["/v1/manage/user/{id}/suspend"],verbs:["POST"],request:{name:"manageSuspendUserRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Suspends a user from the system",notes:"The user's account, channels, posts, comments, rankings, and other activity will be retained.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"}]},apiResponse:"successResponse"},{name:["POST /manage/user/{id}/unsuspend"],path:["/v1/manage/user/{id}/unsuspend"],verbs:["POST"],request:{name:"managerUnsuspendUserRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Unsuspends a user",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"}]},apiResponse:"successResponse"},{name:["PUT /manage/user/{id}/divisions"],path:["/v1/manage/user/{id}/divisions"],verbs:["PUT"],request:{name:"manageUserDivisionsRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Updates a user's divisions",notes:"Note: This operation performs a complete overwrite of the user's divisions.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"long",name:"divisionIds",summary:"The division IDs to which a user belongs",isArray:!0,nativeType:"IEnumerable<long>"}]},apiResponse:"successResponse"},{name:["PUT /manage/user/{id}/tags"],path:["/v1/manage/user/{id}/tags"],verbs:["PUT"],request:{name:"manageUserAddTagsRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets a users tags & attributes",notes:"Caution: this action is destructive and will overwrite existing tags & attributes. This API does not support creating new tags or attributes.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"userTagRequestResponse",name:"tags",summary:"A collection of tags/attributes for the specified user",required:!0,isArray:!0,nativeType:"IEnumerable<UserTagRequestResponse>"}]},apiResponse:"userTagsResponse"},{name:["PUT /manage/user/{id}/privileges"],path:["/v1/manage/user/{id}/privileges"],verbs:["PUT"],request:{name:"updateUserPrivilegesRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Updates a user's permissions",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"bool",name:"privileges",summary:"The list of privileges to update for the user.",notes:"Acceptable privileges include 'IsSharer', 'IsAuthor', 'IsCommenter', and 'IsOrganizationalManager'.  Anything else will be ignored.",isCollection:!0,nativeType:"Dictionary<string, bool>"}]},apiResponse:"updateUserPrivilegesResponse"}]},{name:"Community",summary:"API calls related to the community.",notes:"",routes:[{name:["/community/info"],path:["/v1/community/info"],verbs:["GET"],request:{name:"communityInfo",summary:"Gets community settings",fields:[]},apiResponse:"communityInfoResponse"}]},{name:"Discussions",summary:"API calls related to discussions.",notes:"Use these APIs to create and retrieve discussion information including; comments, likes on posts, and likes on comments.",routes:[{name:["POST /post/{id}/discussion"],path:["/v1/post/{id}/discussion"],verbs:["POST"],request:{name:"discussionCommentPost",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Adds an internal comment to the discussion on a post",fields:[{type:"guid",name:"id",summary:"The post ID to comment on",required:!0,nativeType:"Guid"},{type:"string",name:"commentText",summary:"The comment to add to the post.",notes:"Maximum length: 3500 characters.",required:!0,nativeType:"string"},{type:"long",name:"parentCommentId",summary:"The ID of the parent comment if this is a reply",nativeType:"long?"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"discussionCommentResponse"},{name:["PUT /post/{id}/discussion/{commentid}"],path:["/v1/post/{id}/discussion/{commentId}"],verbs:["PUT"],request:{name:"discussionCommentPut",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Updates an internal comment on a post",fields:[{type:"guid",name:"id",summary:"The post ID to comment on",required:!0,nativeType:"Guid"},{type:"long",name:"commentId",summary:"The comment ID",nativeType:"long"},{type:"string",name:"commentText",summary:"The comment to add to the post.",notes:"Maximum length: 3500 characters.",required:!0,nativeType:"string"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"discussionCommentResponse"},{name:["DELETE /post/{id}/discussion/{commentid}"],path:["/v1/post/{id}/discussion/{commentId}"],verbs:["DELETE"],request:{name:"discussionCommentDelete",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Removes an internal comment from a post",fields:[{type:"guid",name:"id",summary:"The post ID to comment on",required:!0,nativeType:"Guid"},{type:"long",name:"commentId",summary:"The comment ID",nativeType:"long"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["/post/{id}/discussion"],path:["/v1/post/{id}/discussion"],verbs:["GET"],request:{name:"discussionCommentsRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a paged list of internal comments for a post",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"},{type:"long",name:"parentCommentId",summary:"The ID of the parent comment if requesting replies",nativeType:"long?"},{type:"long",name:"before",summary:"Only return comments before this comment ID",nativeType:"long?"},{type:"long",name:"after",summary:"Only return comments after this comment ID",nativeType:"long?"},{type:"int",name:"limit",summary:"Return up to this number of comments (maximum 250)",required:!0,nativeType:"int"}]},apiResponse:"discussionCommentsResponse"},{name:["POST /post/{id}/discussion/{commentid}/like"],path:["/v1/post/{id}/discussion/{commentId}/like"],verbs:["POST"],request:{name:"discussionCommentAddLike",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Adds an internal like on an internal comment",fields:[{type:"guid",name:"id",summary:"The ID of post that contains the comment",required:!0,nativeType:"Guid"},{type:"long",name:"commentId",summary:"The ID of the comment to like/unlike",required:!0,nativeType:"long"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["DELETE /post/{id}/discussion/{commentid}/like"],path:["/v1/post/{id}/discussion/{commentId}/like"],
verbs:["DELETE"],request:{name:"discussionCommentRemoveLike",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Removes an internal like on an internal comment",fields:[{type:"guid",name:"id",summary:"The ID of post that contains the comment",required:!0,nativeType:"Guid"},{type:"long",name:"commentId",summary:"The ID of the comment to like/unlike",required:!0,nativeType:"long"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["/post/{id}/discussion/{commentid}/like/tooltip"],path:["/v1/post/{id}/discussion/{commentId}/like/tooltip"],verbs:["GET"],request:{name:"discussionCommentLikeTooltip",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a list of users that have liked this comment",notes:"This is useful for creating tooltips.",fields:[{type:"guid",name:"id",summary:"The ID of post that contains the comment",required:!0,nativeType:"Guid"},{type:"long",name:"commentId",summary:"The ID of the comment to like/unlike",required:!0,nativeType:"long"},{type:"int",name:"count",summary:"The number of names to retrieve that have liked a comment",defaultValue:"5",nativeType:"int"}]},apiResponse:"userTooltipResponse"},{name:["/post/{id}/discussion/{commentid}/like/list"],path:["/v1/post/{id}/discussion/{commentId}/like/list"],verbs:["GET"],request:{name:"discussionCommentLikeList",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a continuable list of users that have liked this comment",notes:"This is useful for creating infinite scroll modals.",fields:[{type:"guid",name:"id",summary:"The ID of post that contains the comment",required:!0,nativeType:"Guid"},{type:"long",name:"commentId",summary:"The ID of the comment to like/unlike",required:!0,nativeType:"long"},{type:"int",name:"limit",summary:"Return up to this number of users",defaultValue:"50",required:!0,nativeType:"int"},{type:"long",name:"before",summary:"Only return elements before this ID",nativeType:"long?"},{type:"long",name:"after",summary:"Only return elements after this ID",nativeType:"long?"}]},apiResponse:"continuableUserOverviewResponse"},{name:["POST /post/{id}/like"],path:["/v1/post/{id}/like"],verbs:["POST"],request:{name:"discussionPostAddLike",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Adds an internal like on a post",fields:[{type:"guid",name:"id",summary:"The ID of the post to like/unlike",required:!0,nativeType:"Guid"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["DELETE /post/{id}/like"],path:["/v1/post/{id}/like"],verbs:["DELETE"],request:{name:"discussionPostRemoveLike",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Removes an internal like on a post",fields:[{type:"guid",name:"id",summary:"The ID of the post to like/unlike",required:!0,nativeType:"Guid"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["/post/{id}/like/tooltip"],path:["/v1/post/{id}/like/tooltip"],verbs:["GET"],request:{name:"discussionPostLikeTooltip",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a list of users that have liked this post",notes:"This is useful for creating tooltips.",fields:[{type:"guid",name:"id",summary:"The ID of the post to like/unlike",required:!0,nativeType:"Guid"},{type:"int",name:"count",summary:"The number of names to retrieve that have liked a post",defaultValue:"5",nativeType:"int"}]},apiResponse:"userTooltipResponse"},{name:["/post/{id}/like/list"],path:["/v1/post/{id}/like/list"],verbs:["GET"],request:{name:"discussionPostLikeList",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a continuable list of users that have liked this post",notes:"This is useful for creating infinite scroll modals.",fields:[{type:"guid",name:"id",summary:"The ID of the post to like/unlike",required:!0,nativeType:"Guid"},{type:"int",name:"limit",summary:"Return up to this number of users",defaultValue:"50",required:!0,nativeType:"int"},{type:"long",name:"before",summary:"Only return elements before this ID",nativeType:"long?"},{type:"long",name:"after",summary:"Only return elements after this ID",nativeType:"long?"}]},apiResponse:"continuableUserOverviewResponse"}]},{name:"Divisions",summary:"API calls related to divisions.",notes:"",routes:[{name:["/divisions"],path:["/v1/divisions"],verbs:["GET"],request:{name:"divisions",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the list of divisions",fields:[]},apiResponse:"divisionsResponse"},{name:["POST PUT /division/create"],path:["/v1/division/create"],verbs:["POST","PUT"],request:{name:"divisionRequest",isAuthorizationRequired:!0,authorizationRoles:["Manager","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Creates a division.  This method is only available via the server-side REST API.",fields:[{type:"string",name:"name",summary:"The division name",required:!0,nativeType:"string"}]},apiResponse:"divisionResponse"}]},{name:"Documents",summary:"API calls related to documents and attachments.",notes:"",routes:[{name:["/documents/{id}","/documents"],path:["/v1/documents/{id}","/v1/documents"],verbs:["GET"],request:{name:"documentRequest",summary:"Returns a signed download URL for a particular document",fields:[{type:"guid",name:"id",summary:"The document's ID",required:!0,nativeType:"Guid"}]},apiResponse:"documentResponse"},{name:["/documents/supportedtypes"],path:["/v1/documents/supportedTypes"],verbs:["GET"],request:{name:"supportedDocumentTypesRequest",summary:"Returns a collection of supported document types",fields:[]},apiResponse:"supportedDocumentTypesResponse"},{name:["/post/{id}/documents"],path:["/v1/post/{id}/documents"],verbs:["GET"],request:{name:"postDocumentListRequest",summary:"Returns a list of all the documents attached to a post",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"documentListResponse"},{name:["POST /documents"],path:["/v1/documents"],verbs:["POST"],request:{name:"uploadDocumentFile",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Uploads a document via MIME multipart upload",notes:"Use this method when uploading a binary document from a browser form.",fields:[]},apiResponse:"documentInfoResponse"},{name:["PUT /documents"],path:["/v1/documents"],verbs:["PUT"],request:{name:"uploadDocumentBinary",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Uploads a document via binary upload",notes:"Use this method when uploading a binary document directly",fields:[{type:"string",name:"fileName",summary:"The document's preferred filename (with extension)",required:!0,nativeType:"string"}]},apiResponse:"documentInfoResponse"},{name:["POST /post/{id}/documents"],path:["/v1/post/{id}/documents"],verbs:["POST"],request:{name:"uploadPostDocumentFile",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Uploads a document to a post via MIME multipart upload",notes:"Use this method when uploading a binary document from a browser form",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"documentInfoResponse"},{name:["PUT /post/{id}/documents"],path:["/v1/post/{id}/documents"],verbs:["PUT"],request:{name:"uploadPostDocumentBinary",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Uploads a document to a post via binary upload",notes:"Use this method when uploading a binary document directly",fields:[{type:"string",name:"fileName",summary:"The document's preferred filename (with extension)",required:!0,nativeType:"string"},{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"documentInfoResponse"},{name:["DELETE /documents/{id}"],path:["/v1/documents/{id}"],verbs:["DELETE"],request:{name:"documentDeleteRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes a document",fields:[{type:"guid",name:"id",summary:"The document's ID",required:!0,nativeType:"Guid"}]},apiResponse:"successResponse"}]},{name:"Events",summary:"API calls to record events.",notes:"Use these APIs to record events that happen on your site for reporting purposes.",routes:[{name:["POST PUT /event/post/{id}/postview","POST PUT /event/post/postview"],path:["/v1/event/post/{id}/postview","/v1/event/post/postview"],verbs:["POST","PUT"],request:{name:"eventPostView",summary:"Records a post view in the reporting system.",notes:"Use this on a single post view page to enable tracking in reports.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /event/post/{id}/discussionview","POST PUT /event/post/discussionview"],path:["/v1/event/post/{id}/discussionview","/v1/event/post/discussionview"],verbs:["POST","PUT"],request:{name:"discussionPostView",summary:"Records a discussion view in the reporting system.",notes:"Use this when displaying the internal discussions on a post to enable tracking in reports.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /event/post/{id}/mediaview","POST PUT /event/post/mediaview"],path:["/v1/event/post/{id}/mediaview","/v1/event/post/mediaview"],verbs:["POST","PUT"],request:{name:"eventMediaView",summary:"Records a media view in the reporting system.",notes:"Use this to track video and audio playback events.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"mediaViewEventTypeEnum",name:"eventType",summary:"The type of media view event",nativeType:"MediaViewEventTypeEnum"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"}]},{name:"Registration",summary:"The Registration APIs handle end-user registration, invitations, and email whitelisting. ",notes:"Registration APIs help remove the burden of managing social providers, having a separate login credentials database, and other common but tedious tasks.",routes:[{name:["POST /invite"],path:["/v1/invite"],verbs:["POST"],request:{name:"inviteRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sends an invitation to join the community to one or more email addresses.",notes:'Email addresses are validated as part of the request.  If one or more invalid email addresses are found, the result code is "invalid_request" and result data.invalidEmails contains an array of the email addresses that failed validation.',fields:[{type:"string",name:"email",summary:"A single email address to send an invitation to.",notes:"Must provide either email or emails, not both.",nativeType:"string"},{type:"string",name:"emails",summary:"A list of email addresses to send an invitation to.",notes:"Must provide either email or emails, not both.",isArray:!0,nativeType:"List<string>"},{type:"string",name:"message",summary:"An optional plain text message to include in the invitation",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /whitelist/add"],path:["/v1/whitelist/add"],verbs:["POST","PUT"],request:{name:"whitelistAddRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Adds one or more email addresses to the whitelist.",notes:'Email addresses are validated as part of the request.  If one or more invalid email addresses are found, the result code is "invalid_request" and result data.invalidEmails contains an array of the email addresses that failed validation.',fields:[{type:"string",name:"emails",summary:"A list of email addresses to add to the whitelist",isArray:!0,nativeType:"List<string>"}]},apiResponse:"successResponse"},{name:["POST PUT /whitelist/delete"],path:["/v1/whitelist/delete"],verbs:["POST","PUT"],request:{name:"whitelistDeleteRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes one or more email addresses from the whitelist",fields:[{type:"string",name:"emails",summary:"A list of email addresses to remove from the whitelist",isArray:!0,nativeType:"List<string>"}]},apiResponse:"successResponse"},{name:["/whitelist"],path:["/v1/whitelist"],verbs:["GET"],request:{name:"whitelistRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the email address whitelist",fields:[{type:"int",name:"skip",summary:"The starting index in the list of emails",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of emails to return",nativeType:"int"}]},apiResponse:"whitelistResponse"},{name:["/manage/register/whitelist/definitions"],path:["/v1/manage/register/whitelist/definitions"],verbs:["GET"],request:{name:"whitelistIdentifierDefinitionsRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a collection of all whitelist definitions",fields:[]},apiResponse:"whitelistIdentifierDefinitionsResponse"},{name:["POST /manage/register/whitelist/identifiers"],path:["/v1/manage/register/whitelist/identifiers"],verbs:["POST"],request:{name:"addWhitelistIdentifierEntriesRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Adds a collection of whitelist identifiers to the existing list",fields:[{type:"registrationIdentifiersRequestResponse",name:"entries",summary:"A colleciton of whitelist identifier sets",isArray:!0,nativeType:"IEnumerable<RegistrationIdentifiersRequestResponse>"}]},apiResponse:"successResponse"},{name:["PUT /manage/register/whitelist/identifiers"],path:["/v1/manage/register/whitelist/identifiers"],verbs:["PUT"],request:{name:"replaceWhitelistIdentifierEntriesRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Replaces the entire list of whitelist identifiers",notes:"Warning! This operation is destructive and will remove all existing values.",fields:[{type:"registrationIdentifiersRequestResponse",name:"entries",summary:"A colleciton of whitelist identifier sets",isArray:!0,nativeType:"IEnumerable<RegistrationIdentifiersRequestResponse>"}]},apiResponse:"successResponse"},{name:["DELETE /manage/register/whitelist/identifiers"],path:["/v1/manage/register/whitelist/identifiers"],verbs:["DELETE"],request:{name:"deleteWhitelistIdentifierEntriesRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Removes existing whitelist identifiers that match the collection requested",fields:[{type:"registrationIdentifiersRequestResponse",name:"entries",summary:"A colleciton of whitelist identifier sets",isArray:!0,nativeType:"IEnumerable<RegistrationIdentifiersRequestResponse>"}]},apiResponse:"successResponse"},{name:["/providers"],path:["/v1/providers"],verbs:["GET"],request:{name:"providers",summary:"Gets a list of enabled social providers",fields:[{type:"providerListTypeEnum",name:"type",summary:"Only include providers that support this capability",nativeType:"ProviderListTypeEnum"}],example:"GET http://sample.voicestorm.com/v1/providers HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"providersResponse"},{name:["POST PUT /register"],path:["/v1/register"],verbs:["POST","PUT"],request:{name:"registerRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Registers a new user.",notes:"This API is only available via the server-side REST API.",fields:[{type:"string",name:"email",summary:'The user\'s email address (the "user name")',required:!0,nativeType:"string"},{type:"string",name:"password",summary:"The user's password",required:!0,nativeType:"string"},{type:"string",name:"firstName",summary:"The user's first name",nativeType:"string"},{type:"string",name:"lastName",summary:"The user's last name",nativeType:"string"},{type:"bool",name:"delayActivation",summary:"Determines if activation should be postponed.",notes:"Normally users are activated immediately.  Activation may be delayed so the user's profile can be updated, or if the user needs to confirm terms and conditions before the registration is complete.",nativeType:"bool"},{type:"string",name:"invitationKey",summary:"Code to verify the registering user is invited.",notes:"For invitation-only sites.",nativeType:"string"},{type:"string",name:"timeZone",summary:"The user's IANA time zone",nativeType:"string"},{type:"whitelistIdentifiersResponse",name:"whitelistIdentifiers",summary:"A list of whitelist identifiers that will allow the user the be registered",notes:"This feature only applies to communities with Advanced Registration enabled. For a list of possible registration identifiers, retrieve their definitions using the appropriate API call.",isArray:!0,nativeType:"IEnumerable<WhitelistIdentifiersResponse>"}]},apiResponse:"loginResponse"},{name:["POST PUT /register/begin"],path:["/v1/register/begin"],verbs:["POST","PUT"],request:{name:"beginRegisterRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Registers a new user.",notes:"This API is only available via the server-side REST API.",fields:[{type:"string",name:"email",summary:'The user\'s email address (the "user name")',required:!0,nativeType:"string"},{type:"string",name:"invitationKey",summary:"Code to verify the registering user is invited.",notes:"For invitation-only sites.",nativeType:"string"},{type:"string",name:"timeZone",summary:"The user's IANA time zone",nativeType:"string"},{type:"string",name:"firstName",summary:"The user's first name",nativeType:"string"},{type:"string",name:"lastName",summary:"The user's last name",nativeType:"string"},{type:"whitelistIdentifiersResponse",name:"whitelistIdentifiers",summary:"A list of whitelist identifiers that will allow the user the be registered",notes:"This feature only applies to communities with Advanced Registration enabled. For a list of possible registration identifiers, retrieve their definitions using the appropriate API call.",isArray:!0,nativeType:"IEnumerable<WhitelistIdentifiersResponse>"}]},apiResponse:"successResponse"},{name:["POST PUT /register/complete"],path:["/v1/register/complete"],verbs:["POST","PUT"],request:{name:"completeRegisterRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["OAuth2ClientCredentials"],summary:"Completes registration of a new user",fields:[{type:"string",name:"email",summary:'The user\'s email address (the "user name")',required:!0,nativeType:"string"},{type:"string",name:"password",summary:"The user's password",required:!0,nativeType:"string"},{type:"string",name:"firstName",summary:"The user's first name",nativeType:"string"},{type:"string",name:"lastName",summary:"The user's last name",nativeType:"string"},{type:"string",name:"verificationCode",summary:"The verification code",required:!0,nativeType:"string"},{type:"bool",name:"delayActivation",summary:"Determines if activation should be postponed.",notes:"Normally users are activated immediately.  Activation may be delayed so the user's profile can be updated, or if the user needs to confirm terms and conditions before the registration is complete.",nativeType:"bool"}]},apiResponse:"loginResponse"},{name:["POST PUT /register/validateinvitationtoken"],path:["/v1/register/validateinvitationtoken"],verbs:["POST","PUT"],request:{name:"validateInvitationTokenRequest",summary:"Validates an invitation token",fields:[{type:"string",name:"token",summary:"The email token",required:!0,nativeType:"string"}]},apiResponse:"validateInvitationTokenResponse"},{name:["POST PUT /register/activate/{id}"],path:["/v1/register/activate/{id}"],verbs:["POST","PUT"],request:{name:"activateUserRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["OAuth2ClientCredentials","SdkToken"],summary:"Activates a new user.",notes:"Use to manually activate a user if the user was not activated during the registration call.  This API is only available via the server-side REST API.",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"bool",name:"sendWelcomeEmail",summary:"Whether a welcome email should be sent",nativeType:"bool"},{type:"bool",name:"setProfileCompleted",summary:"Whether to mark the user's profile as being completed during onboarding",nativeType:"bool"}]},apiResponse:"successResponse"},{name:["POST PUT /register/provider/{provider}"],path:["/v1/register/provider/{provider}"],verbs:["POST","PUT"],request:{name:"providerRegisterRequest",summary:"New user registration via a social provider",fields:[{type:"string",name:"provider",summary:"The social provider to use for registration",nativeType:"string"}]},apiResponse:"providerStartResponse"},{name:["POST PUT /register/sendverifyemail"],path:["/v1/register/sendverifyemail"],verbs:["POST","PUT"],request:{name:"sendVerifyEmailRequest",summary:"Sends the user a new email with the verification code",fields:[{type:"long",name:"id",summary:"The user ID.",notes:"If a user ID is provided, the email field will be ignored.",nativeType:"long?"},{type:"string",name:"email",summary:"The email to verify.",notes:"If a user ID is not provided, sends a verification email to the provided email address.",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /register/verifyaccount"],path:["/v1/register/verifyaccount"],verbs:["POST","PUT"],request:{name:"verifyAccountRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Acknowledges the account verification code",fields:[{type:"long",name:"id",summary:"The user ID",required:!0,nativeType:"long"},{type:"string",name:"verificationCode",summary:"The verification code",required:!0,nativeType:"string"},{type:"bool",name:"checkOnly",summary:"Use to see if the code is correct, without actually verifying the account",nativeType:"bool"}]},apiResponse:"successResponse"},{name:["POST PUT /register/verifyemail"],path:["/v1/register/verifyemail"],verbs:["POST","PUT"],request:{name:"verifyEmailRequest",summary:"Checks the account verification code for an email address",fields:[{type:"string",name:"email",summary:'The user\'s email address (the "user name")',required:!0,nativeType:"string"},{type:"string",name:"verificationCode",summary:"The verification code",required:!0,nativeType:"string"},{type:"bool",name:"checkOnly",summary:"Use to see if the code is correct, without actually verifying the account",nativeType:"bool?"}]},apiResponse:"successResponse"}]},{name:"Leaderboards",summary:"APIs to work with leaderboards and user rankings.",notes:"These APIs support a listing of leaderboards and of rankings within the leaderboards.",routes:[{name:["/leaderboards"],path:["/v1/leaderboards"],verbs:["GET"],request:{name:"leaderboardList",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of leaderboards defined in the system",fields:[],example:"GET http://sample.voicestorm.com/v1/leaderboards HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"leaderboardListResponse"},{name:["/leaderboard/{id}","/leaderboard"],path:["/v1/leaderboard/{id}","/v1/leaderboard"],verbs:["GET"],request:{name:"leaderboard",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the definition of a leaderboard",fields:[{type:"long",name:"id",summary:"The leaderboard ID",nativeType:"long"}],example:"GET http://sample.voicestorm.com/v1/leaderboard/65 HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"leaderboardResponse"},{name:["/leaderboard/{id}/rankings","/leaderboardrankings"],path:["/v1/leaderboard/{id}/rankings","/v1/leaderboardrankings"],verbs:["GET"],request:{name:"leaderboardRankings",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the rankings for a leaderboard",fields:[{type:"long",name:"id",summary:"The leaderboard ID",nativeType:"long"},{type:"int",name:"skip",summary:"The starting index in the list of leaderboard rankings",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of leaderboard rankings to return",nativeType:"int"},{type:"string",name:"include",summary:"Specifies optional data to return with the leaderboard.",notes:'Specify "Images" to return the leaderboard\'s images.',isArray:!0,nativeType:"List<string>"},{type:"leaderboardSortModeEnum",name:"sortMode",summary:"Determines the sort mode of the results",nativeType:"LeaderboardSortModeEnum"}],example:"GET http://sample.voicestorm.com/v1/leaderboard/65/rankings HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"leaderboardRankingResponse"}]},{name:"Login",summary:"The Login APIs handle end-user logins and channel management.",notes:"Login APIs help remove the burden of managing social providers, having a separate login credentials database, and other common but tedious tasks.",routes:[{name:["POST /login"],path:["/v1/login"],verbs:["POST"],request:{name:"loginRequest",summary:"Email and password user login.",notes:"For client use only.",fields:[{type:"string",name:"email",summary:'The user\'s email address (the "user name")',nativeType:"string"},{type:"string",name:"password",summary:"The user's password",nativeType:"string"}]},apiResponse:"loginResponse"},{name:["POST /login/emailgrant"],path:["/v1/login/emailgrant"],verbs:["POST"],request:{name:"loginEmailGrantRequest",summary:"Requests a grant token via email",fields:[{type:"string",name:"email",summary:'The user\'s email address (the "user name")',nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST /login/exchangegrant"],path:["/v1/login/exchangegrant"],verbs:["POST"],request:{name:"loginExchangeGrantRequest",summary:"Requests a grant token via email",fields:[{type:"string",name:"grantToken",summary:"The grant token",nativeType:"string"},{type:"string",name:"description",summary:"The login location description (user readable)",nativeType:"string"}]},apiResponse:"loginResponse"},{name:["POST PUT /login/changepassword"],path:["/v1/login/changepassword"],verbs:["POST","PUT"],request:{name:"changePasswordRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","member","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Changes the password for a user who is logged in",fields:[{type:"string",name:"currentPassword",summary:"The user's existing password",nativeType:"string"},{type:"string",
name:"newPassword",summary:"The user's new/changed password",nativeType:"string"}]},apiResponse:"loginResponse"},{name:["POST PUT /login/forgotpassword"],path:["/v1/login/forgotpassword"],verbs:["POST","PUT"],request:{name:"forgotPasswordRequest",summary:"Initiates the password recovery process",fields:[{type:"string",name:"email",summary:"The user's email address",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /login/resetpassword"],path:["/v1/login/resetpassword"],verbs:["POST","PUT"],request:{name:"resetPasswordRequest",summary:"Resets a user's password",fields:[{type:"string",name:"token",summary:"The token provided in the forgot password email",nativeType:"string"},{type:"string",name:"newPassword",summary:"The user's new password",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST /login/provider/{provider}"],path:["/v1/login/provider/{provider}"],verbs:["POST"],request:{name:"providerLoginRequest",summary:"Social provider user login",fields:[{type:"string",name:"provider",summary:"The social provider to use for login",nativeType:"string"},{type:"string",name:"extraData",summary:"Extra data",nativeType:"string"}]},apiResponse:"providerStartResponse"},{name:["GET POST /login/sso"],path:["/v1/login/sso"],verbs:["GET","POST"],request:{name:"ssoLoginRequest",summary:"Logs in a user using single-sign-on (SSO).",notes:"The VoiceStorm platform supports SAML 2.0 single-sign-on.  For more information, please contact your account manager.",fields:[{type:"bool",name:"mobileMode",summary:"Indicates if mobile mode is enabled",nativeType:"bool"},{type:"string",name:"channelUrl",summary:"JavaScript SDK channel URL",nativeType:"string"},{type:"string",name:"returnUrl",summary:"Where to redirect the user after SSO",nativeType:"string"}]},apiResponse:"providerStartResponse"},{name:["/login/shorttoken"],path:["/v1/login/shorttoken"],verbs:["GET"],request:{name:"userShortTokenRequest",isAuthorizationRequired:!0,authorizationRoles:["member","manager"],authorizationMethods:["SdkToken"],summary:"Returns a short-lived token for an authenticated user",fields:[]},apiResponse:"userShortTokenResponse"},{name:["POST /login/compliance"],path:["/v1/login/compliance"],verbs:["POST"],request:{name:"userComplianceRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Creates a usage compliance entry for the requesting user",fields:[{type:"bool",name:"accept",summary:"Whether the requesting user accepts the community's usage compliance terms",nativeType:"bool"}]},apiResponse:"successResponse"}]},{name:"Images",summary:"API calls that support working with images.",routes:[{name:["PUT /manage/images"],path:["/v1/manage/images"],verbs:["PUT"],request:{name:"uploadImageBinary",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Uploads an image via binary upload",notes:"Use this method when uploading a binary image directly.",fields:[],headers:{"Content-Type":{header:"Content-Type",notes:"Options include: image/jpg, image/jpeg, image/pjpeg, image/png, image/x-png, image/gif",isRequired:!0}}},apiResponse:"uploadImageResponse"},{name:["POST /manage/images"],path:["/v1/manage/images"],verbs:["POST"],request:{name:"uploadImageFile",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Uploads an image via MIME-multipart upload",notes:"Use this method when uploading a binary image from a browser form.",fields:[]},apiResponse:"uploadImageResponse"}]},{name:"OAuth",summary:"OAuth APIs provide support for server-to-server bearer token management and invalidation.",notes:"",routes:[{name:["POST /oauth2/token"],path:["/v1/oauth2/token"],verbs:["POST"],request:{name:"oAuth2Token",summary:"Requests an OAuth2 token.",notes:'Use for server-to-server authorization.  For more details see <a href="http://tools.ietf.org/html/rfc6749">RFC 6749</a>.  Use HTTP Basic Auth to pass the client ID and secret.  Twitter has further information <a href="https://dev.twitter.com/docs/auth/application-only-auth">here.</a>',fields:[{type:"string",name:"grant_type",summary:"The OAuth2 grant type.",notes:'Currently the only supported type is "client_credentials".',nativeType:"string"},{type:"string",name:"client_id",summary:"The VoiceStorm API key",nativeType:"string"},{type:"string",name:"client_secret",summary:"The VoiceStorm API secret",nativeType:"string"}],example:"POST http://sample.voicestorm.com/v1/oauth2/token HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nAuthorization: Basic [BEARER_TOKEN]=\r\nContent-Type: application/x-www-form-urlencoded\r\nHost: d1034:16071\r\nContent-Length: 29\r\nConnection: Keep-Alive\r\n\r\ngrant_type=client_credentials"},apiResponse:"oAuth2TokenResponse"},{name:["POST /oauth2/invalidate_token"],path:["/v1/oauth2/invalidate_token"],verbs:["POST"],request:{name:"oAuth2InvalidateToken",summary:"Invalidates an existing token",fields:[{type:"string",name:"access_token",summary:"The existing access token previously issued by /oauth2/token",required:!0,nativeType:"string"}]},apiResponse:"oAuth2TokenResponse"}]},{name:"Groups",summary:"API calls related to groups.",notes:"",routes:[{name:["/manage/groups"],path:["/v1/manage/groups"],verbs:["GET"],request:{name:"manageGroupsList",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of groups",fields:[]},apiResponse:"groupListResponse"},{name:["/manage/groups/{id}/users"],path:["/v1/manage/groups/{id}/users"],verbs:["GET"],request:{name:"manageGroupsUsersList",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of users that belong to a group",notes:"Please note that Server-authenticated calls are not able to access groups that have been designated as private by the owning manager.",fields:[{type:"long",name:"id",summary:"The group ID",required:!0,nativeType:"long"},{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Channels" to return the the user\'s channels.  Specify "Images" to return the user\'s profile images.  Specify "Affiliations" to return the user\'s affiliations.  Specify "ScheduleSettings" to return the user\'s auto-scheduling preferences, if permissions allow.',defaultValue:"Channels,Images",isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, a list of user IDs in the group will be returned while 'Include', 'Skip', and 'Take' properties are all ignored.",nativeType:"bool"},{type:"int",name:"skip",summary:"The starting index in the list of elements",defaultValue:"0",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of elements to return",defaultValue:"50",nativeType:"int"}]},apiResponse:"usersResponse"}]},{name:"Search",summary:"API calls related to searching.",notes:"",routes:[{name:["POST PUT /search"],path:["/v1/search"],verbs:["POST","PUT"],request:{name:"searchRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Searches for a specific term",fields:[{type:"string",name:"term",summary:"The term to look for",required:!0,nativeType:"string"},{type:"searchRequestType",name:"type",summary:"The type of objects to search",required:!0,nativeType:"SearchRequestType"},{type:"int",name:"take",summary:"The maximum number of results to return",nativeType:"int"},{type:"string",name:"include",summary:"Specifies optional data to return with the post",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"}]},apiResponse:"searchResponse"},{name:["POST PUT /typeahead"],path:["/v1/typeahead"],verbs:["POST","PUT"],request:{name:"memberTypeAheadRequest",isAuthorizationRequired:!0,authorizationRoles:["member","manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Searches users and groups based on partial-string matching",fields:[{type:"string",name:"term",summary:"The search term to look for",required:!0,nativeType:"string"},{type:"searchRequestType",name:"type",summary:"The type of objects to search",defaultValue:"All",required:!0,nativeType:"SearchRequestType"},{type:"int",name:"take",summary:"The maximum number of results to return",defaultValue:"50",nativeType:"int"},{type:"bool",name:"includeMembers",summary:"Whether to include members in the result",defaultValue:"True",nativeType:"bool"},{type:"bool",name:"includeManagers",summary:"Whether to include managers in the result",defaultValue:"True",nativeType:"bool"},{type:"bool",name:"includePreregistered",summary:"Whether to include preregistered users in the result",defaultValue:"True",nativeType:"bool"},{type:"bool",name:"isOrganizationalManager",summary:"Whether to filter the user results to only those that have the organizational manager privilege",notes:"If a value is set to TRUE, then the positive filter will be applied to the request (e.g only return user results that are organizational managers). If a value is set to FALSE, then the negative of the filter will be applied to the request (e.g. only return user results that are not organizational managers). If a value is not set, then the filter is not applied to the user results at all (e.g. return all user results regardless of whether they are an organizational managers or not).",defaultValue:"NULL",nativeType:"bool?"},{type:"bool",name:"includeEmails",summary:"For email searches that do not match an existing user, this will check to see if that email is valid against the community's email whitelist",defaultValue:"True",nativeType:"bool"},{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Images" to return the user\'s profile images.',defaultValue:"none",isArray:!0,nativeType:"List<string>"}]},apiResponse:"typeAheadResponse"},{name:["POST PUT /manage/typeahead"],path:["/v1/manage/typeahead"],verbs:["POST","PUT"],request:{name:"managerTypeAheadRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Searches users and groups based on partial-string matching",fields:[{type:"long",name:"limitToDivisionIds",summary:"Restrict the search to only the provided divisions",isArray:!0,nativeType:"List<long>"},{type:"string",name:"term",summary:"The search term to look for",required:!0,nativeType:"string"},{type:"searchRequestType",name:"type",summary:"The type of objects to search",defaultValue:"All",required:!0,nativeType:"SearchRequestType"},{type:"int",name:"take",summary:"The maximum number of results to return",defaultValue:"50",nativeType:"int"},{type:"bool",name:"includeMembers",summary:"Whether to include members in the result",defaultValue:"True",nativeType:"bool"},{type:"bool",name:"includeManagers",summary:"Whether to include managers in the result",defaultValue:"True",nativeType:"bool"},{type:"bool",name:"includePreregistered",summary:"Whether to include preregistered users in the result",defaultValue:"True",nativeType:"bool"},{type:"bool",name:"isOrganizationalManager",summary:"Whether to filter the user results to only those that have the organizational manager privilege",notes:"If a value is set to TRUE, then the positive filter will be applied to the request (e.g only return user results that are organizational managers). If a value is set to FALSE, then the negative of the filter will be applied to the request (e.g. only return user results that are not organizational managers). If a value is not set, then the filter is not applied to the user results at all (e.g. return all user results regardless of whether they are an organizational managers or not).",defaultValue:"NULL",nativeType:"bool?"},{type:"bool",name:"includeEmails",summary:"For email searches that do not match an existing user, this will check to see if that email is valid against the community's email whitelist",defaultValue:"True",nativeType:"bool"},{type:"string",name:"include",summary:"Specifies optional data to return with the user.",notes:'Specify "Images" to return the user\'s profile images.',defaultValue:"none",isArray:!0,nativeType:"List<string>"}]},apiResponse:"typeAheadResponse"}]},{name:"Posts",summary:"The heart of the content system, posts are the fundamental content objects in the VoiceStorm system.  These APIs support a variety of actions on posts.",notes:"Posts have a rich set of information.  They can be used to store social content, user-generated information, events, and more.  The API allows post creation, sharing, viewing and commenting.",routes:[{name:["POST PUT /post/{id}/share"],path:["/v1/post/{id}/share"],verbs:["POST","PUT"],request:{name:"sharePost",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Shares a post on one or more social channels",fields:[{type:"feedCommentVisibilityStatusEnum",name:"visibility",summary:"Determines the visibility of the resulting comment",nativeType:"FeedCommentVisibilityStatusEnum"},{type:"dateTime",name:"shareAfterDate",summary:"Determines the delay in sharing the comment as an absolute date.",notes:"Use for sending a share at a particular time in the future.  The precision of sharing is approximately 1 minute, and must be set at least 60 seconds in the future.",nativeType:"DateTime?"},{type:"int",name:"shareDelaySeconds",summary:"Determines the delay in sharing the comment as a relative number of seconds from now.",notes:"Use for sending a share a certain number of seconds in the future.  The precision of sharing is approximately 1 minute, and must be set at least 60 seconds in the future.  The allowed range is 60 seconds to 1 day from now.",nativeType:"int?"},{type:"scheduleTypeEnum",name:"shareType",summary:"Sets the share type",notes:'Use "Now" or null to share immediately.  Use "Manual" to share at specified times.  Use "Auto" to let the system schedule the shares.',nativeType:"ScheduleTypeEnum?"},{type:"dateTime",name:"requestedShareDates",summary:"Sets the manual share dates.",notes:"When in Manual sharing mode, sets the times to share.",isArray:!0,nativeType:"List<DateTime>"},{type:"long",name:"userChannelIds",summary:"The list of user channel IDs",isArray:!0,nativeType:"List<long>"},{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"string",name:"comment",summary:"The optional comment to share along with the post",nativeType:"string"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}],example:"POST http://sample.voicestorm.com/v1/post/794775b6-520e-4fa1-9a88-8c668a6149c8/share HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nContent-Type: application/x-www-form-urlencoded\r\nHost: d1034:16071\r\nContent-Length: 626\r\n\r\nAccessToken=[ACCESS_TOKEN]&userid=16281&userchannelid=12113&comment=Sharing is Caring"},apiResponse:"postCommentResponse"},{name:["POST PUT /post/{id}/reaction/{reactiontype}"],path:["/v1/post/{id}/reaction/{reactionType}"],verbs:["POST","PUT"],request:{name:"reactToPost",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Reacts to a post on one or more social channels",fields:[{type:"providerReactionTypeEnum",name:"reactionType",summary:"The reaction type",nativeType:"ProviderReactionTypeEnum"},{type:"long",name:"userChannelIds",summary:"The list of user channel IDs",isArray:!0,nativeType:"List<long>"},{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"string",name:"comment",summary:"The optional comment to share along with the post",nativeType:"string"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"successResponse"},{name:["POST PUT /post/{id}/shorten","POST PUT /postshorten"],path:["/v1/post/{id}/shorten","/v1/postshorten"],verbs:["POST","PUT"],request:{name:"shortenPost",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Shortens a post URL",sdkName:"ShortenPostUrl",fields:[{type:"bool",name:"email",summary:"If true, creates a shortened link for use with email.",notes:"UserChannelId is ignored.",nativeType:"bool"},{type:"bool",name:"cutAndPaste",summary:"If true, creates a shortened link for use with cut and paste.",notes:"UserChannelId is ignored.",nativeType:"bool"},{type:"long",name:"userChannelIds",summary:"The list of user channel IDs",isArray:!0,nativeType:"List<long>"},{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"string",name:"comment",summary:"The optional comment to share along with the post",nativeType:"string"},{type:"long",name:"userId",summary:"The user ID of the user performing the action.  Defaults to the signed in user if not set.",nativeType:"long?"},{type:"userActivitySourceEnum",name:"activitySource",summary:"Describes the source of the user activity.",notes:"Allows the caller to specify what platform the activity is coming from.",nativeType:"UserActivitySourceEnum?"},{type:"userActivityReasonEnum",name:"activityReason",summary:"Describes the reason for the user activity",nativeType:"UserActivityReasonEnum?"},{type:"string",name:"activityDetail",summary:"Detail around the activity (i.e., what broadcast triggered the activity)",nativeType:"string"}]},apiResponse:"shortenUrlResponse"},{name:["/post/{id}","/post"],path:["/v1/post/{id}","/v1/post"],verbs:["GET"],request:{name:"post",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a specific post by ID",fields:[{type:"guid",name:"id",summary:"The post ID.",notes:"This is the unique identifier for the post.",required:!0,nativeType:"Guid"},{type:"string",name:"include",summary:"Specifies optional data to return with the post",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"long",name:"userId",summary:"The user who is viewing the post",defaultValue:"The logged in user.",nativeType:"long?"}],example:"GET http://sample.voicestorm.com/v1/post/fcab5c66-621b-453f-b083-0ea8e92117c8 HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: d1034:16071\r\nConnection: Keep-Alive"},apiResponse:"postResponse"},{name:["/posts"],path:["/v1/posts"],verbs:["GET"],request:{name:"posts",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a set of posts by IDs.",notes:" Use this method to retrieve a set of posts when the IDs are available.  IDs the are not found are silently excluded from the list.",fields:[{type:"guid",name:"ids",summary:"The list of post IDs",required:!0,isArray:!0,nativeType:"List<Guid>"},{type:"string",name:"include",summary:"Specifies optional data to return with the posts.",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"long",name:"userId",summary:"The user who is viewing the posts",defaultValue:"The logged in user.",nativeType:"long?"}]},apiResponse:"postsResponse"},{name:["/tag/{name}/posts","/tagposts"],path:["/v1/tag/{name}/posts","/v1/tagposts"],verbs:["GET"],request:{name:"postsByTag",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of posts for a given tag.",notes:"Use this method if you want to get a list of posts by tag directly, instead of through a stream.",fields:[{type:"string",name:"name",summary:"The name of the tag",nativeType:"string"},{type:"string",name:"include",summary:"Specifies optional data to return with the stream",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, only returns the post IDs in the stream.  If false, returns the full posts.  Use for de-duplicating posts client side.",nativeType:"bool"},{type:"int",name:"skip",summary:"The starting index in the list of posts",defaultValue:"0",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of posts to return",defaultValue:"25",nativeType:"int"},{type:"long",name:"userId",summary:"The user who is viewing the posts",defaultValue:"The logged in user.",nativeType:"long?"}],example:"GET http://sample.voicestorm.com/v1/tag/Techcrunch/posts HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"postStreamResponse"},{name:["POST PUT /post/import"],path:["/v1/post/import"],verbs:["POST","PUT"],request:{name:"importPost",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Creates a new post from a web URL.",notes:'The post importer creates a new post by examining page metadata and OpenGraph tags (<a href="http://ogp.me">http://ogp.me</a>).  The post may optionally be created directly or returned for further editing by the user.',fields:[{type:"string",name:"url",summary:"The URL of the post.",notes:"May be http:// or https://",required:!0,nativeType:"string"},{type:"long",name:"userId",summary:"The ID of the user who is creating the post",defaultValue:"If a user is logged in, that user is the creator.",nativeType:"long?"},{type:"long",name:"sourceId",summary:"The source ID to use for the creation of the post",nativeType:"long?"},{type:"bool",name:"persist",summary:"Whether the imported post will be persisted",defaultValue:"False",nativeType:"bool?"},{type:"bool",name:"publish",summary:"Optionally publish the post.",notes:'The caller must be a manager and "persist" must be true.',defaultValue:"False",nativeType:"bool?"},{type:"string",name:"imageUrl",summary:"Optionally create the post image from the URL provided",nativeType:"string"},{type:"string",name:"title",summary:"Optionally override the post title with this field",nativeType:"string"}]},apiResponse:"postResponse"},{name:["POST PUT /post"],path:["/v1/post"],verbs:["POST","PUT"],request:{name:"createPostRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Creates a post.",notes:"This call allows a server, manager, or user with article author rights to create a new post.",fields:[{type:"string",name:"title",summary:"The title of the post",nativeType:"string"},{type:"string",name:"description",summary:"The short description of the post",nativeType:"string"},{type:"string",name:"tagLine",summary:"The tag line of the post",nativeType:"string"},{type:"string",name:"content",summary:"The body of the post",nativeType:"string"},{type:"string",name:"creatorComments",summary:"A message associated with the post",nativeType:"string"},{type:"string",name:"permaLink",summary:"The external URL referenced by the post",nativeType:"string"},{type:"string",name:"memberVideoUrl",summary:"The video URL referenced by the post",nativeType:"string"},{type:"articleTypeEnum",name:"postType",summary:"The basic type of the post",nativeType:"ArticleTypeEnum?"},{type:"articleBylineTypeEnum",name:"postBylineType",summary:"A hint for the UI indicating the desired way the post's source or author should appear in the byline.",notes:"This is a hint to the UI.  The implementer of UI may choose to ignore or implement the hint.",nativeType:"ArticleBylineTypeEnum?"},{type:"string",name:"provider",summary:"The social provider from which the post originated (e.g., Facebook, Twitter).",notes:'This specifies where the post was originally found.  Use "InApp" for unique posts or user-submitted original content.',nativeType:"string"},{type:"approvalStateEnum",name:"approvalState",summary:"The approval state of the post.  Defaults to the author's Review Status setting.",notes:'This can only be set by managers or servers, not members.  Can be published, pending, or excluded.  If an author\'s Review Status is "Approve Immediately" only published or excluded are valid.',nativeType:"ApprovalStateEnum?"},{type:"displayModeEnum",name:"displayMode",summary:"Indicates redirection of a post to an internal or external location",nativeType:"DisplayModeEnum?"},{type:"bool",name:"sharable",summary:"Whether the VoiceStorm platform and widgets will allow for the post to be shared",nativeType:"bool?"},{type:"dateTime",name:"startDate",summary:"The date after which the post is available for viewing",nativeType:"DateTime?"},{type:"dateTime",name:"endDate",summary:"The date the after which the post will no longer be available for viewing",nativeType:"DateTime?"},{type:"dateTime",name:"providerTimeStamp",summary:"The date of the post from the provider's perspective, i.e., when it was originally posted on the social provider",nativeType:"DateTime?"},{type:"bool",name:"receivedPublishPoints",summary:"Whether the user who submitted the post received points when the post was published",nativeType:"bool"},{type:"string",name:"suggestedShareText",summary:"The suggested share text for the post",nativeType:"string"},{type:"string",name:"shortSuggestedShareText",summary:"The suggested share text for the post for short message providers",nativeType:"string"},{type:"int",name:"sharePoints",summary:"The number of points awarded when a user shares the post",nativeType:"int?"},{type:"int",name:"clickPoints",summary:"The number of points awarded when someone clicks on a shared link to the post",nativeType:"int?"},{type:"string",name:"providerPostId",summary:"The original ID of the post on the provider's network",nativeType:"string"},{type:"string",name:"classification",summary:"The type of post on the provider's network.",notes:"This field (which is not always available) usually indicates if the post is a photo, video, text, etc.",nativeType:"string"},{type:"bool",name:"shareWithImages",summary:"Controls if posts shared to short message services (like Twitter) have images shared",nativeType:"bool?"},{type:"bool",name:"shareImagesOnly",summary:"Controls if posts shared to certain services are treated as image/photo only updates",nativeType:"bool?"},{type:"string",name:"site",summary:"The site that the post originated on",nativeType:"string"},{type:"postLinkRequestResponse",name:"links",summary:"A list of links mentioned in the post",isArray:!0,nativeType:"IEnumerable<PostLinkRequestResponse>"},{type:"postTagRequestResponse",name:"tags",summary:"A list of tags that have been set on the post",isArray:!0,nativeType:"IEnumerable<PostTagRequestResponse>"},{type:"postMediaRequestResponse",name:"media",summary:"A list of additional media (images, videos) accompanying the content",isArray:!0,nativeType:"IEnumerable<PostMediaRequestResponse>"},{type:"string",name:"language",summary:"The language of the post content",nativeType:"string"},{type:"guid",name:"documents",summary:"A list of documents IDs to attach to this post",notes:"Currently, only managers are authorized to attach existing documents to posts.",isArray:!0,nativeType:"IEnumerable<Guid>"},{type:"postAuthorRequestResponse",name:"author",summary:"Detailed information about the author of the post content",nativeType:"PostAuthorRequestResponse"},{type:"long",name:"creatorId",summary:"The user that is creating the post",notes:"This property is only available for server-authenticated requests at this time. All other posts are automatically set to the authenticated user.",nativeType:"long?"},{type:"bool",name:"displayCreator",summary:"Controls whether the creator information is to be displayed with the post or not",notes:"This property is only available for server-authenticated requests at this time.",nativeType:"bool?"}]},apiResponse:"postResponse"},{name:["DELETE /post/{id}","DELETE /post"],path:["/v1/post/{id}","/v1/post"],verbs:["DELETE"],request:{name:"deletePostRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes a post.",notes:"This call allows a server, manager, or author of the post to delete the post.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["PUT /post/{id}/image","PUT /postimage"],path:["/v1/post/{id}/image","/v1/postimage"],verbs:["PUT"],request:{name:"uploadPostImage",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the post image via binary upload.",notes:"Use this method when uploading a binary image directly.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"}],headers:{"Content-Type":{header:"Content-Type",notes:"Options include: image/jpg, image/jpeg, image/pjpeg, image/png, image/x-png, image/gif",isRequired:!0}}},apiResponse:"successResponse"},{name:["POST /post/{id}/image","POST /postimage"],path:["/v1/post/{id}/image","/v1/postimage"],verbs:["POST"],request:{name:"uploadPostImageFile",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the post image via MIME-multipart upload.",notes:"Use this method when uploading a binary image from a browser form.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"}]
},apiResponse:"successResponse"},{name:["POST /post/{id}/imageurl","POST /postimageurl"],path:["/v1/post/{id}/imageurl","/v1/postimageurl"],verbs:["POST"],request:{name:"uploadImageFromUrl",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the post image via a URL.",notes:"Use this method when uploading an image from an existing URL.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"},{type:"string",name:"url",summary:"The HTTP or HTTPS URL",nativeType:"string"}]},apiResponse:"successResponse"},{name:["DELETE /post/{id}/image"],path:["/v1/post/{id}/image"],verbs:["DELETE"],request:{name:"deletePostImageRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes a post image.",notes:"This call allows a server, manager, or author of the post to delete the post image.",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["POST /post/{id}/video","POST /postvideo"],path:["/v1/post/{id}/video","/v1/postvideo"],verbs:["POST"],request:{name:"uploadPostVideoFile",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the post video via MIME-multipart upload.",notes:"Use this method when uploading a binary video from a browser form.",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["PUT /post/{id}/video","PUT /postvideo"],path:["/v1/post/{id}/video","/v1/postvideo"],verbs:["PUT"],request:{name:"uploadPostVideo",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the post video via binary upload.",notes:"Use this method when uploading a binary video directly.",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}],headers:{"Content-Type":{header:"Content-Type",notes:"Options include: video/mp4",isRequired:!0}}},apiResponse:"successResponse"},{name:["POST PUT /post/{id}/startvideo","POST PUT /poststartvideo"],path:["/v1/post/{id}/startvideo","/v1/poststartvideo"],verbs:["POST","PUT"],request:{name:"startUploadPostVideo",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Starts the process of uploading a large video.",notes:"Use this method when uploading a binary video that is larger than 5MB. Uploading large videos is a three step process so after you perform thsi request, you will need to upload your video to the <strong>URL</strong> returned from this call. Once the upload has completed, you will need to make a request to <i>/post/{id}/completevideo</i> with the <strong>ticket</strong> returned from this call to complete the upload process.",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"},{type:"string",name:"contentType",summary:"The Content-Type of the video",notes:"It is crucial that this matches the Content-Type header sent with the video when uploading the file to upload URL. If the two do not match, then validation will fail.",required:!0,nativeType:"string"},{type:"long",name:"contentLength",summary:"The Content-Length of the video",notes:"It is crucial that this matches the Content-Length header sent with the video when uploading the file to upload URL. If the two do not match, then validation will fail.",nativeType:"long?"}]},apiResponse:"startUploadPostVideoResponse"},{name:["POST PUT /post/{id}/completevideo","POST PUT /postcompletevideo"],path:["/v1/post/{id}/completevideo","/v1/postcompletevideo"],verbs:["POST","PUT"],request:{name:"completeUploadPostVideo",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Completes the process of uploading a large video.",notes:"Use this method when uploading a binary that is larger than 5MB.Uploading large videos is a three steop process in which this is the final piece.Perform this operation with the <strong>ticket</strong> you recieved from <i>/post/{id}/startvideo</i> after you have uploaded your video",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"},{type:"guid",name:"ticket",summary:"The file ticket",required:!0,nativeType:"Guid"},{type:"int",name:"width",summary:"The width of the media object in pixels",nativeType:"int?"},{type:"int",name:"height",summary:"The height of the media object in pixels",nativeType:"int?"},{type:"string",name:"mimeType",summary:"The MIME type of the media object",required:!0,nativeType:"string"},{type:"long",name:"duration",summary:"The video duration in milliseconds",nativeType:"long?"}]},apiResponse:"successResponse"},{name:["POST PUT /post/{id}/publish","POST PUT /postpublish"],path:["/v1/post/{id}/publish","/v1/postpublish"],verbs:["POST","PUT"],request:{name:"postPublishRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Publishes a post",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["POST PUT /post/{id}/exclude","POST PUT /postexclude"],path:["/v1/post/{id}/exclude","/v1/postexclude"],verbs:["POST","PUT"],request:{name:"postExcludeRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Excludes a post",fields:[{type:"guid",name:"id",summary:"The post ID",nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["POST PUT /post/{id}/hide","POST PUT /posthide"],path:["/v1/post/{id}/hide","/v1/posthide"],verbs:["POST","PUT"],request:{name:"hidePostRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Hides a post from stream results for the logged-in user",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["POST PUT /post/{id}/show","POST PUT /postshow"],path:["/v1/post/{id}/show","/v1/postshow"],verbs:["POST","PUT"],request:{name:"showPostRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Restores a post to stream results for the logged-in user",fields:[{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"successResponse"},{name:["/post/featured"],path:["/v1/post/featured"],verbs:["GET"],request:{name:"featuredPosts",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of featured posts",fields:[{type:"string",name:"include",summary:"Specifies optional data to return with the stream",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, only returns the post IDs.  If false, returns the full posts.",nativeType:"bool"},{type:"long",name:"userId",summary:"The user who is viewing the posts",defaultValue:"The logged in user.",nativeType:"long?"}]},apiResponse:"postStreamResponse"},{name:["POST PUT /manage/post/{id}"],path:["/v1/manage/post/{id}"],verbs:["POST","PUT"],request:{name:"managerEditPostRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Edits an existing post.",notes:"This call allows a server or manager to edit an existing post.",fields:[{type:"string",name:"title",summary:"The title of the post",nativeType:"string"},{type:"string",name:"description",summary:"The short description of the post",nativeType:"string"},{type:"string",name:"tagLine",summary:"The tag line of the post",nativeType:"string"},{type:"string",name:"content",summary:"The body of the post",nativeType:"string"},{type:"string",name:"creatorComments",summary:"A message associated with the post",nativeType:"string"},{type:"string",name:"permaLink",summary:"The external URL referenced by the post",nativeType:"string"},{type:"guid",name:"id",summary:"The post ID",required:!0,nativeType:"Guid"}]},apiResponse:"postResponse"},{name:["/manage/posts"],path:["/v1/manage/posts"],verbs:["GET"],request:{name:"managerPostsRequest",isAuthorizationRequired:!0,authorizationRoles:["manager","servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets posts by date.",notes:"This call allows a server or manager to get the most recent posts by date (within two weeks) regardless of approval state. User-specific response data (e.g. IsViewedByUser) in the post response will not be reflected even if a manager is requesting the data. This information is available through the regular /post request.",fields:[{type:"string",name:"include",summary:"Specifies optional data to return with the posts",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, only returns the post IDs in the stream.  If false, returns the full posts.  Use for de-duplicating posts client side.",nativeType:"bool"},{type:"dateTime",name:"minimumDateTime",summary:"Show posts newer than a certain date and time.",notes:"Only posts newer than two weeks will be returned.",nativeType:"DateTime?"},{type:"int",name:"skip",summary:"The starting index in the list of posts",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of posts to return",nativeType:"int"}]},apiResponse:"postStreamResponse"}]},{name:"Shortening",summary:"API calls related to URL shortening.",notes:"",routes:[{name:["POST PUT /shorten"],path:["/v1/shorten"],verbs:["POST","PUT"],request:{name:"shortenUrl",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Shortens a URL and attributes with user information",sdkName:"ShortenUrl",fields:[{type:"long",name:"userId",summary:"The user ID",nativeType:"long?"},{type:"long",name:"userChannelIds",summary:"The list of user channel IDs",isArray:!0,nativeType:"List<long>"},{type:"bool",name:"email",summary:"If true, creates a shortened link for use with email.",notes:"UserChannelId is ignored.",nativeType:"bool"},{type:"bool",name:"cutAndPaste",summary:"If true, creates a shortened link for use with cut and paste.",notes:"UserChannelId is ignored.",nativeType:"bool"},{type:"string",name:"url",summary:"The URL to shorten",nativeType:"string"}]},apiResponse:"shortenUrlResponse"}]},{name:"Sharing",summary:"APIs to support sharing content to social providers.",notes:"The main way to share is by sharing a post, but developers can also share content and links directly.",routes:[{name:["POST PUT /share/{id}/delete/","POST PUT /sharedelete/"],path:["/v1/share/{id}/delete/","/v1/sharedelete/"],verbs:["POST","PUT"],request:{name:"shareDelete",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Deletes a previously scheduled share",sdkName:"ShareDelete",fields:[{type:"long",name:"userId",summary:"The user ID",nativeType:"long?"},{type:"long",name:"id",summary:"The ID of the scheduled share",nativeType:"long"}]},apiResponse:"successResponse"},{name:["POST PUT /share/{id}/sendnow/","POST PUT /sharesendnow/"],path:["/v1/share/{id}/sendnow/","/v1/sharesendnow/"],verbs:["POST","PUT"],request:{name:"shareSendNow",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sends a previously scheduled share immediately",sdkName:"ShareSendNow",fields:[{type:"long",name:"userId",summary:"The user ID",nativeType:"long?"},{type:"long",name:"id",summary:"The ID of the scheduled share",nativeType:"long"}]},apiResponse:"successResponse"},{name:["/share/scheduled/"],path:["/v1/share/scheduled/"],verbs:["GET"],request:{name:"scheduledShares",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of pending scheduled shares",sdkName:"ShareGetAllScheduled",fields:[{type:"long",name:"userId",summary:"The user ID",nativeType:"long?"},{type:"long",name:"ids",summary:"An optional list of scheduled share IDs to filter on.  Without this, all scheduled shares will be returned for the given user.",isArray:!0,nativeType:"List<long>"}]},apiResponse:"scheduledSharesResponse"},{name:["/share/scheduled/{id}/"],path:["/v1/share/scheduled/{id}/"],verbs:["GET"],request:{name:"scheduleShare",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a pending scheduled share",sdkName:"ShareGetScheduled",fields:[{type:"long",name:"id",summary:"The ID of the scheduled share",required:!0,nativeType:"long"}]},apiResponse:"scheduledShareResponse"},{name:["POST PUT /share/scheduled/{id}/"],path:["/v1/share/scheduled/{id}/"],verbs:["POST","PUT"],request:{name:"scheduleShareDates",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Sets the share dates on a scheduled share",sdkName:"SharePutScheduled",fields:[{type:"long",name:"id",summary:"The ID of the scheduled share",required:!0,nativeType:"long"},{type:"dateTime",name:"shareDates",summary:"List of dates to schedule share",required:!0,isArray:!0,nativeType:"List<DateTime>"}]},apiResponse:"scheduledShareResponse"},{name:["/share/suggestedsharetime","/user/suggestedsharetime"],path:["/v1/share/suggestedsharetime","/v1/user/suggestedsharetime"],verbs:["GET"],request:{name:"userSuggestedShareTimeRequest",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Suggests a time of day that would be ideal to share a post.",notes:"Accepts a list of existing times that have already been selected and will suggest a time that works around them.",fields:[{type:"string",name:"currentTimes",summary:"Times currently selected by the user.  These are used to help determine another optimal time.",notes:"All times should be sent using 24-hour time in the following format: 00:00",isArray:!0,nativeType:"IEnumerable<string>"}]},apiResponse:"userSuggestedShareTimeResponse"}]},{name:"Streams",summary:"API calls for working with streams and stream definitions.",notes:"Streams are collections of posts, used to populate news feeds or other display collections.",routes:[{name:["/streams/definitions"],path:["/v1/streams/definitions"],verbs:["GET"],request:{name:"postStreamDefinitions",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the currently defined streams",fields:[],example:"GET http://sample.voicestorm.com/v1/streams/definitions HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"postStreamDefinitionsResponse"},{name:["/stream","/stream/{name}"],path:["/v1/stream","/v1/stream/{name}"],verbs:["GET"],request:{name:"postStream",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a stream of posts",fields:[{type:"string",name:"name",summary:"The name of the stream.",notes:"This name must match the <code>referenceName</code> returned from <code>/streams/definitions</code>.  Be sure to URL encode this property appropriately.",nativeType:"string"},{type:"string",name:"include",summary:"Specifies optional data to return with the stream",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, only returns the post IDs in the stream.  If false, returns the full posts.  Use for de-duplicating posts client side.",nativeType:"bool"},{type:"int",name:"skip",summary:"The starting index in the list of posts",defaultValue:"0",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of posts to return",defaultValue:"25",nativeType:"int"},{type:"long",name:"userId",summary:"The user who is viewing the posts",defaultValue:"The logged in user.",nativeType:"long?"}],example:"GET http://sample.voicestorm.com/v1/stream/Showcase HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"postStreamResponse"},{name:["/streams"],path:["/v1/streams"],verbs:["GET"],request:{name:"postStreams",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets multiple streams of posts.",notes:"This call allows a client request multiple streams simultaneously in one request.  It is much more efficient to do this than to make multiple individual requests.",fields:[{type:"string",name:"names",summary:"The names of the streams",required:!0,isArray:!0,nativeType:"List<string>"},{type:"string",name:"include",summary:"Specifies optional data to return with the stream",notes:'Specify "Content" to return the clean content of the post, stripped of dangerous HTML.  Specify "RawContent" to return the full content of the post including all HTML.  Specify "Images" to return the images attached to the post.  Specify "WatchVideo" to return hosted video URLs (signed).  Specify "Documents" to return attached document information.  ',isArray:!0,nativeType:"List<string>"},{type:"bool",name:"idsOnly",summary:"Determines if only IDs are returned.",notes:"If set to true, only returns the post IDs in the stream.  If false, returns the full posts.  Use for de-duplicating posts client side.",nativeType:"bool"},{type:"int",name:"skip",summary:"The starting index in the list of posts",defaultValue:"0",nativeType:"int"},{type:"int",name:"take",summary:"The maximum number of posts to return",defaultValue:"25",nativeType:"int"},{type:"long",name:"userId",summary:"The user who is viewing the posts",defaultValue:"The logged in user.",nativeType:"long?"}]},apiResponse:"postStreamsResponse"}]},{name:"Tags",summary:"APIs to retrieve which tags are defined in the VoiceStorm system.",notes:"Tags exist for both users and posts.",routes:[{name:["/usertags"],path:["/v1/usertags"],verbs:["GET"],request:{name:"userTags",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the user tags defined in the system",fields:[],example:"GET http://sample.voicestorm.com/v1/usertags HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"userTagsResponse"},{name:["/posttags"],path:["/v1/posttags"],verbs:["GET"],request:{name:"postTags",authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the post tags defined in the system",fields:[],example:"GET http://sample.voicestorm.com/v1/posttags HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.2; Dynamic Signal)\r\nHost: sample.voicestorm.com\r\nConnection: Keep-Alive"},apiResponse:"postTagsResponse"}]},{name:"Surveys",summary:"APIs to work with surveys including questions, answer options, and user responses.",notes:"",routes:[{name:["/surveys"],path:["/v1/surveys"],verbs:["GET"],request:{name:"surveysRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets a list of summary data for active surveys for the authenticated user",fields:[{type:"long",name:"userId",summary:"The ID of the user",notes:"If one is not provided, the currently logged in user will be used.",nativeType:"long"}]},apiResponse:"surveysResponse"},{name:["/surveys/{id}"],path:["/v1/surveys/{id}"],verbs:["GET"],request:{name:"surveyRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets an active survey for the authenticated user",fields:[{type:"long",name:"id",summary:"The ID of the survey",required:!0,nativeType:"long"},{type:"bool",name:"includeAnswers",summary:"Optional flag to include the current user's submitted answers for the requested survey",defaultValue:"false",nativeType:"bool"},{type:"long",name:"userId",summary:"The ID of the user",notes:"If one is not provided, the currently logged in user will be used.",nativeType:"long"}]},apiResponse:"surveyWithAnswersResponse"},{name:["POST PUT /surveys/{id}/answers"],path:["/v1/surveys/{id}/answers"],verbs:["POST","PUT"],request:{name:"surveyAnswersRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Submits an answer to a survey question for the authenticated user",fields:[{type:"long",name:"id",summary:"The ID of the survey",required:!0,nativeType:"long"},{type:"long",name:"questionId",summary:"The ID of the question that is being answered",required:!0,nativeType:"long"},{type:"submittedAnswerRequestResponse",name:"answers",summary:"Answer(s) submitted for the specified question ID",isArray:!0,nativeType:"List<SubmittedAnswerRequestResponse>"},{type:"long",name:"userId",summary:"The ID of the user",notes:"If one is not provided, the currently logged in user will be used.",nativeType:"long"}]},apiResponse:"answersResponse"},{name:["POST PUT /surveys/{id}/complete"],path:["/v1/surveys/{id}/complete"],verbs:["POST","PUT"],request:{name:"surveysCompleteRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Marks the survey as completed for the authenticated user",fields:[{type:"long",name:"id",summary:"The ID of the survey",required:!0,nativeType:"long"},{type:"long",name:"userId",summary:"The ID of the user",notes:"If one is not provided, the currently logged in user will be used.",nativeType:"long"}]},apiResponse:"successResponse"}]},{name:"Notifications",summary:"APIs to retrieve read and unread notifications for the logged-in user.",notes:"Notifications may be sent to a user via in-app experience, email, or to their mobile device.  The APIs allow a portal site or mobile app to display these notifications.",routes:[{name:["/user/notifications/{id}"],path:["/v1/user/notifications/{id}"],verbs:["GET"],request:{name:"userNotificationRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves an individual user notification",fields:[{type:"long",name:"id",summary:"The ID of the user notification",required:!0,nativeType:"long"},{type:"long",name:"userId",summary:"The ID of the user to retrieve notifications for",nativeType:"long"}]},apiResponse:"userNotificationResponse"},{name:["/user/notifications"],path:["/v1/user/notifications"],verbs:["GET"],request:{name:"userNotificationsRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a list of the user's notifications",fields:[{type:"long",name:"userId",summary:"The ID of the user to retrieve notifications for",nativeType:"long"},{type:"userNotificationState",name:"states",summary:"The states to include in the results",defaultValue:"['New, Acknowledged, Read']",isArray:!0,nativeType:"IEnumerable<UserNotificationState>"},{type:"long",name:"before",summary:"Only return elements before this ID",nativeType:"long?"},{type:"long",name:"after",summary:"Only return elements after this ID",nativeType:"long?"},{type:"int",name:"limit",summary:"Return up to this number of elements",defaultValue:"20",nativeType:"int"}]},apiResponse:"userNotificationsResponse"},{name:["/user/notifications/summary"],path:["/v1/user/notifications/summary"],verbs:["GET"],request:{name:"userNotificationsSummaryRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Retrieves a summary of the user's notifications including the number of 'New' notifications in each Priority",fields:[{type:"long",name:"userId",summary:"The ID of the user to retrieve notifications for",nativeType:"long"}]},apiResponse:"userNotificationsSummaryResponse"},{name:["/user/notifications/count"],path:["/v1/user/notifications/count"],verbs:["GET"],request:{name:"userNotificationsCountRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Gets the count of notifications, by states, for the specified user",fields:[{type:"long",name:"userId",summary:"The ID of the user that the notifications belong to",nativeType:"long"},{type:"userNotificationState",name:"states",summary:"The states to include in the count",notes:"Currently, only 'New' notifications are supported",defaultValue:"['New']",isArray:!0,nativeType:"IEnumerable<UserNotificationState>"}]},apiResponse:"userNotificationsCountResponse"},{name:["POST PUT /user/notifications/read"],path:["/v1/user/notifications/read"],verbs:["POST","PUT"],request:{name:"userNotificationsReadRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Marks notification(s) as read for a given user",notes:"Additional flags allow marking of all notifications as read up to the maximum specified ID",fields:[{type:"long",name:"userId",summary:"The ID of the user that the notification belongs to",nativeType:"long"},{type:"long",name:"ids",summary:"The IDs of the affected notifications",isArray:!0,nativeType:"List<long>"},{type:"bool",name:"includePrevious",summary:"Whether to mark all notifications as read up to the maximum requested ID",nativeType:"bool"},{type:"notificationActionSource",name:"source",summary:"The source of the request",notes:"Use NotificationBar when the request originated from a mobile push notification",defaultValue:"Default",nativeType:"NotificationActionSource"}]},apiResponse:"successResponse"},{name:["POST PUT /user/notifications/read/all"],path:["/v1/user/notifications/read/all"],verbs:["POST","PUT"],request:{name:"userNotificationsReadAllRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Marks all notifications as read for a given user",fields:[{type:"long",name:"userId",summary:"The ID of the user that the notifications belong to",nativeType:"long"},{type:"notificationActionSource",name:"source",summary:"The source of the request",notes:"Use NotificationBar when the request originated from a mobile push notification",defaultValue:"Default",nativeType:"NotificationActionSource"}]},apiResponse:"successResponse"},{name:["POST PUT /user/notifications/hide"],path:["/v1/user/notifications/hide"],verbs:["POST","PUT"],request:{name:"userNotificationsHideRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Marks a notification as hidden for a given user",fields:[{type:"long",name:"userId",summary:"The ID of the user that the notifications belongs to",nativeType:"long"},{type:"long",name:"ids",summary:"The IDs of the affected notifications",required:!0,isArray:!0,nativeType:"List<long>"}]},apiResponse:"successResponse"},{name:["POST PUT /user/notifications/unhide"],path:["/v1/user/notifications/unhide"],verbs:["POST","PUT"],request:{name:"userNotificationsUnhideRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Unhides a hidden notification for a given user",fields:[{type:"long",name:"userId",summary:"The ID of the user that the notifications belongs to",nativeType:"long"},{type:"long",name:"ids",summary:"The IDs of the affected notifications",required:!0,isArray:!0,nativeType:"List<long>"}]},apiResponse:"successResponse"},{name:["POST PUT /user/notifications/readconfirmation"],path:["/v1/user/notifications/readconfirmation"],verbs:["POST","PUT"],request:{name:"userNotificationsReadConfirmationRequest",isAuthorizationRequired:!0,authorizationRoles:[],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Marks a notification as read confirmed for a given user",notes:"This is a positive acknowledgement that the user read the message",fields:[{type:"long",name:"userId",summary:"The ID of the user that the notifications belongs to",nativeType:"long"},{type:"long",name:"ids",summary:"The IDs of the affected notifications",required:!0,isArray:!0,nativeType:"List<long>"}]},apiResponse:"successResponse"}]},{name:"Post Management",routes:[{name:["DELETE PATCH PUT /manage/posts"],path:["/v1/manage/posts"],verbs:["DELETE","PATCH","PUT"],request:{name:"postManagementRequest",isAuthorizationRequired:!0,authorizationRoles:["servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Allows server-authenticated calls to update properties for multiple posts in a single request",notes:"This API should be handled delicately as it can have dramatic repurcussions if used incorrectly. PATCH requests will add the following properties to the specified posts. PUT operations will overwrite existing values for these properties. DELETE operations will remove these values from the specified posts.",fields:[{type:"guid",name:"postIds",summary:"The posts being modified",required:!0,isArray:!0,nativeType:"IEnumerable<Guid>"},{type:"string",name:"tags",summary:"A collection of tag names that can be applied to posts",isArray:!0,nativeType:"List<string>"},{type:"long",name:"divisionIds",summary:"The division IDs to which the posts belong",isArray:!0,nativeType:"List<long>"},{type:"approvalStateEnum",name:"approvalState",summary:"The Approval state for the posts (This is not affected by the DELETE requests)",nativeType:"ApprovalStateEnum?"}]},apiResponse:"successResponse"}]},{name:"User Management",routes:[{name:["DELETE PATCH PUT /manage/users"],path:["/v1/manage/users"],verbs:["DELETE","PATCH","PUT"],request:{name:"userManagementRequest",isAuthorizationRequired:!0,authorizationRoles:["servertoserver"],authorizationMethods:["SdkToken","OAuth2ClientCredentials"],summary:"Allows server-authenticated calls to update properties for multiple users in a single request",notes:"This API should be handled delicately as it can have dramatic repurcussions if used incorrectly. PATCH requests will add the following properties to the specified users. PUT operations will overwrite existing values for these properties. DELETE operations will remove these values from the specified user.",fields:[{type:"long",name:"userIds",summary:"The users being modified",required:!0,isArray:!0,nativeType:"IEnumerable<long>"},{type:"userTagRequestResponse",name:"tags",summary:"A collection of tags/attributes that can be applied to users",isArray:!0,nativeType:"List<UserTagRequestResponse>"
},{type:"long",name:"divisionIds",summary:"The division IDs to which users can belong",isArray:!0,nativeType:"List<long>"},{type:"userDefaultNotificationEnum",name:"notificationsDefault",summary:"Setting that controls when the users will start receiving email notifications (This is not affected by DELETE requests)",notes:"You can enable email notifications for the selected users immediately or delay notifications until after the users log in for the first time. Note that users can opt out of individual notification types at any time from their preferences page or from the unsubscribe link at the bottom of every email. The following changes will not apply to users who have previously logged in.",nativeType:"UserDefaultNotificationEnum?"}]},apiResponse:"successResponse"}]}],responses:{providerStartResponse:{name:"providerStartResponse",fields:[{type:"string",name:"popupUrl",nativeType:"string"},{type:"string",name:"windowOpenParams",nativeType:"string"}]},providerAuthResponse:{name:"providerAuthResponse",fields:[{type:"string",name:"log",isArray:!0,nativeType:"List<string>"},{type:"string",name:"provider",nativeType:"string"},{type:"string",name:"disposition",nativeType:"string"},{type:"long",name:"userChannelId",nativeType:"long"},{type:"string",name:"userChannelUrl",nativeType:"string"},{type:"string",name:"displayName",nativeType:"string"},{type:"int",name:"maxCharLimit",nativeType:"int"},{type:"int",name:"imageUrlLength",nativeType:"int"},{type:"bool",name:"isEligibleSource",nativeType:"bool"},{type:"string",name:"message",nativeType:"string"},{type:"userRequestResponse",name:"user",summary:"The current user",nativeType:"UserRequestResponse"},{type:"string",name:"token",summary:"The login token",nativeType:"string"},{type:"dateTime",name:"expiration",summary:"The login token's expiration date",nativeType:"DateTime?"},{type:"string",name:"shortLivedToken",summary:"The short-lived token",nativeType:"string"},{type:"dateTime",name:"shortLivedTokenExpiration",summary:"The short-lived token's expiration date",nativeType:"DateTime?"}]},pingResponse:{name:"pingResponse",summary:"The response from a ping request",fields:[{type:"string",name:"text",summary:"The text provided in the request",nativeType:"string"}]},geosResponse:{name:"geosResponse",summary:"The collection of defined geographic entities",fields:[{type:"countryResponse",name:"countries",summary:"Known countries",isCollection:!0,nativeType:"Dictionary<string, CountryResponse>"},{type:"stateProvinceResponse",name:"states",summary:"Known states",isCollection:!0,nativeType:"Dictionary<string, StateProvinceResponse>"},{type:"stateProvinceResponse",name:"provinces",summary:"Known provinces",isCollection:!0,nativeType:"Dictionary<string, StateProvinceResponse>"}]},countryResponse:{name:"countryResponse",fields:[{type:"string",name:"countryCode",summary:"The country code",nativeType:"string"},{type:"string",name:"countryName",summary:"The country name",nativeType:"string"}]},stateProvinceResponse:{name:"stateProvinceResponse",fields:[{type:"string",name:"provinceCode",summary:"The state or province code",nativeType:"string"},{type:"string",name:"provinceName",summary:"The state or province name",nativeType:"string"},{type:"string",name:"countryCode",summary:"The country code",nativeType:"string"}]},timeZonesResponse:{name:"timeZonesResponse",summary:"The collection of time zones",fields:[{type:"timeZoneResponse",name:"communityTimeZone",summary:"The community’s time zone.",nativeType:"TimeZoneResponse"},{type:"timeZoneResponse",name:"timeZones",summary:"Known time zones",isArray:!0,nativeType:"List<TimeZoneResponse>"}]},timeZoneResponse:{name:"timeZoneResponse",summary:"A time zone",fields:[{type:"string",name:"id",summary:"The time zone ID (e.g., America/Los_Angeles)",nativeType:"string"},{type:"string",name:"fullName",summary:"The time zone full name (e.g., Pacific Time (America - Los Angeles)).",notes:"Use for selection lists.",nativeType:"string"},{type:"string",name:"ianaName",summary:"The time zone IANA name (e.g., America - Los Angeles)",nativeType:"string"},{type:"string",name:"offset",summary:'The time zone offset.  This will always be the "Standard" time zone offset.',nativeType:"string"},{type:"string",name:"mediumName",summary:"The time zone medium name.  This will be the generic name of the time zone (e.g., Pacific Time).",notes:"Use for showing daylight-saving agnostic time detail.",nativeType:"string"},{type:"string",name:"standardMediumName",summary:"The time zone standard medium name.  This will be the name of the time zone during standard time (e.g., Pacific Standard Time).",nativeType:"string"},{type:"string",name:"daylightMediumName",summary:"The time zone daylight medium name.  This will be the name of the time zone during daylight saving time (e.g., Pacific Daylight Time).",nativeType:"string"},{type:"string",name:"abbreviation",summary:"The time zone abbreviation.  This will be the generic abbreviation of the time zone (e.g., PT).",notes:"Use for showing daylight-saving agnostic time detail.",nativeType:"string"},{type:"string",name:"standardAbbreviation",summary:"The time zone standard abbreviation.  This will be the abbreviation of the time zone during standard time (e.g., PST).",nativeType:"string"},{type:"string",name:"daylightAbbreviation",summary:"The time zone daylight abbreviation.  This will be the abbreviation of the time zone during daylight saving time (e.g., PDT).",nativeType:"string"}]},languagesResponse:{name:"languagesResponse",summary:"A list of languages that the community supports.  For the meaning of language codes see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",fields:[{type:"languageResponse",name:"languages",summary:"Known languages",isArray:!0,nativeType:"List<LanguageResponse>"},{type:"bool",name:"showUserContentLanguageSelection",summary:"Whether members should select their own content language",nativeType:"bool"},{type:"string",name:"backfillContentLanguage",summary:"Language for content that displays beneath the user's preferred content",nativeType:"string"},{type:"string",name:"contentLanguagePrompt",summary:"The label to prompt members to select a content language",nativeType:"string"},{type:"string",name:"contentLanguages",summary:"If content languages are restricted, this will show a list of languages that are available for user selection",isArray:!0,nativeType:"List<string>"}]},testPasswordResponse:{name:"testPasswordResponse",summary:"Result of password compliance test",fields:[{type:"bool",name:"success",summary:"Indicates all password security requirements are satisfied",nativeType:"bool"},{type:"bool",name:"lengthPassed",summary:"Whether password security length requirement is satisfied",nativeType:"bool"},{type:"bool",name:"upperPassed",summary:"Whether password security uppercase letter requirement is satisfied",nativeType:"bool"},{type:"bool",name:"lowerPassed",summary:"Whether password security lowercase letter requirement is satisfied",nativeType:"bool"},{type:"bool",name:"numberPassed",summary:"Whether password security number character requirement is satisfied",nativeType:"bool"},{type:"bool",name:"specialPassed",summary:"Whether password security special character requirement is satisfied",nativeType:"bool"},{type:"bool",name:"validCharactersPassed",summary:"Whether the password contains valid characters only",nativeType:"bool"}]},affiliationsResponse:{name:"affiliationsResponse",summary:"The affiliations defined in the system",fields:[{type:"affiliationResponse",name:"affiliations",summary:"The collection of affiliations",isCollection:!0,nativeType:"Dictionary<long, AffiliationResponse>"}],example:'{"affiliations":{"1":{"question":{"questionId":1,"name":"Passion","scorePosition":3,"description":"What are you most passionate about?"},"answers":[{"answerId":3,"answer":"Tennis","score":3},{"answerId":4,"answer":"Biking","score":4},{"answerId":5,"answer":"Golf","score":5},{"answerId":6,"answer":"Snowboarding/Skiing","score":6},{"answerId":7,"answer":"Wakeboarding","score":7},{"answerId":8,"answer":"Triathlon","score":8},{"answerId":9,"answer":"Nutrition","score":9},{"answerId":10,"answer":"Fitness","score":10},{"answerId":83,"answer":"Snowboarding/Skiing","score":6},{"answerId":84,"answer":"Biking","score":4},{"answerId":85,"answer":"Fitness","score":10},{"answerId":87,"answer":"Tennis","score":3},{"answerId":94,"answer":"Biking","score":4},{"answerId":101,"answer":"Biking","score":4},{"answerId":104,"answer":"Fitness","score":10},{"answerId":108,"answer":"Tennis","score":3},{"answerId":110,"answer":"Tennis","score":3},{"answerId":114,"answer":"Biking","score":4},{"answerId":117,"answer":"Fitness","score":10},{"answerId":121,"answer":"Biking","score":4},{"answerId":125,"answer":"Biking","score":4},{"answerId":128,"answer":"Tennis","score":3},{"answerId":129,"answer":"Tennis","score":3},{"answerId":130,"answer":"Tennis","score":3},{"answerId":131,"answer":"Tennis","score":3},{"answerId":132,"answer":"Tennis","score":3},{"answerId":133,"answer":"Tennis","score":3},{"answerId":139,"answer":"Snowboarding/Skiing","score":6},{"answerId":140,"answer":"Snowboarding/Skiing","score":6},{"answerId":141,"answer":"Snowboarding/Skiing","score":6},{"answerId":142,"answer":"Snowboarding/Skiing","score":6},{"answerId":143,"answer":"Tennis","score":3},{"answerId":151,"answer":"Golf","score":5},{"answerId":153,"answer":"Fitness","score":10}]},"3":{"question":{"questionId":3,"name":"Oakley Event Attended","scorePosition":5,"description":"Which Oakley event(s) have you attended if any?"},"answers":[{"answerId":14,"answer":"espnW Summit","score":1},{"answerId":81,"answer":"espnW Summit","score":1},{"answerId":86,"answer":"espnW Summit","score":1},{"answerId":89,"answer":"espnW Summit","score":1},{"answerId":90,"answer":"espnW Summit","score":1},{"answerId":91,"answer":"espnW Summit","score":1},{"answerId":92,"answer":"espnW Summit","score":1},{"answerId":93,"answer":"espnW Summit","score":1},{"answerId":95,"answer":"espnW Summit","score":1},{"answerId":98,"answer":"espnW Summit","score":1},{"answerId":99,"answer":"espnW Summit","score":1},{"answerId":102,"answer":"espnW Summit","score":1},{"answerId":105,"answer":"espnW Summit","score":1},{"answerId":107,"answer":"espnW Summit","score":1},{"answerId":109,"answer":"espnW Summit","score":1},{"answerId":111,"answer":"espnW Summit","score":1},{"answerId":113,"answer":"espnW Summit","score":1},{"answerId":116,"answer":"espnW Summit","score":1},{"answerId":118,"answer":"espnW Summit","score":1},{"answerId":122,"answer":"espnW Summit","score":1},{"answerId":126,"answer":"espnW Summit","score":1},{"answerId":135,"answer":"espnW Summit","score":1},{"answerId":136,"answer":"espnW Summit","score":1},{"answerId":137,"answer":"espnW Summit","score":1},{"answerId":138,"answer":"espnW Summit","score":1},{"answerId":156,"answer":"espnW Summit","score":1},{"answerId":158,"answer":"espnW Summit","score":1}]},"4":{"question":{"questionId":4,"name":"Referred by Oakley Ambassador","scorePosition":6,"description":"Which Oakley ambassador refered you to this community?"},"answers":[{"answerId":15,"answer":"YSC Tour De Pink","score":2},{"answerId":16,"answer":"Tone It Up/LB","score":3},{"answerId":17,"answer":"Tone It Up/LB","score":1},{"answerId":18,"answer":"Rachel Nelson","score":1},{"answerId":19,"answer":"Tricia Byrnes","score":2},{"answerId":20,"answer":"Suzanne Graham","score":3},{"answerId":21,"answer":"Kimball Theoret","score":4},{"answerId":22,"answer":"Morag","score":5},{"answerId":23,"answer":"Lehuna (Lei) Wise","score":6},{"answerId":24,"answer":"Maxine Bahns","score":7},{"answerId":25,"answer":"Jenny Kalmbach","score":8},{"answerId":26,"answer":"Noelle Kozak","score":9},{"answerId":27,"answer":"Michelle Lovitt","score":10},{"answerId":28,"answer":"Devin Alexander","score":11},{"answerId":29,"answer":"Maria Romaine","score":12},{"answerId":30,"answer":"Charlotte Neitzel","score":13},{"answerId":31,"answer":"Carly Swanson","score":14},{"answerId":32,"answer":"Andria (AJ) Govoni","score":15},{"answerId":33,"answer":"Natalia Maldonado","score":16},{"answerId":34,"answer":"Cari Shoemate","score":17},{"answerId":35,"answer":"Page Williams","score":18},{"answerId":36,"answer":"Christine Donaldson","score":19},{"answerId":37,"answer":"EmilySukiennik","score":20},{"answerId":38,"answer":"Fitz Koehler","score":21},{"answerId":39,"answer":"Amanda Brooks","score":22},{"answerId":40,"answer":"KimberlyDoll","score":23},{"answerId":41,"answer":"Katie Morse","score":24},{"answerId":42,"answer":"Caitlin Pruden","score":25},{"answerId":43,"answer":"Marni Sumbol","score":26},{"answerId":44,"answer":"Lacey Calvert","score":27},{"answerId":45,"answer":"Brittany Costa","score":28},{"answerId":46,"answer":"DeAnn Teixeira","score":29},{"answerId":47,"answer":"Francesca Lollini","score":30},{"answerId":48,"answer":"Tone It Up/LB","score":1},{"answerId":49,"answer":"Rachel Nelson","score":1},{"answerId":50,"answer":"Tricia Byrnes","score":2},{"answerId":51,"answer":"Suzanne Graham","score":3},{"answerId":52,"answer":"Kimball Theoret","score":4},{"answerId":53,"answer":"Morag","score":5},{"answerId":54,"answer":"Lehuna (Lei) Wise","score":6},{"answerId":55,"answer":"Maxine Bahns","score":7},{"answerId":56,"answer":"Jenny Kalmbach","score":8},{"answerId":57,"answer":"Noelle Kozak","score":9},{"answerId":58,"answer":"Michelle Lovitt","score":10},{"answerId":59,"answer":"Devin Alexander","score":11},{"answerId":60,"answer":"Maria Romaine","score":12},{"answerId":61,"answer":"Charlotte Neitzel","score":13},{"answerId":62,"answer":"Carly Swanson","score":14},{"answerId":63,"answer":"Andria (AJ) Govoni","score":15},{"answerId":64,"answer":"Natalia Maldonado","score":16},{"answerId":65,"answer":"Cari Shoemate","score":17},{"answerId":66,"answer":"Page Williams","score":18},{"answerId":67,"answer":"Christine Donaldson","score":19},{"answerId":68,"answer":"Emily Sukiennik","score":20},{"answerId":69,"answer":"Fitz Koehler","score":21},{"answerId":70,"answer":"Amanda Brooks","score":22},{"answerId":71,"answer":"Kimberly Doll","score":23},{"answerId":72,"answer":"Katie Morse","score":24},{"answerId":73,"answer":"Caitlin Pruden","score":25},{"answerId":74,"answer":"Marni Sumbol","score":26},{"answerId":75,"answer":"Lacey Calvert","score":27},{"answerId":76,"answer":"Brittany Costa","score":28},{"answerId":77,"answer":"DeAnn Teixeira","score":29},{"answerId":78,"answer":"Francesca Lollini","score":30},{"answerId":82,"answer":"Charlotte Neitzel","score":13},{"answerId":96,"answer":"Devin Alexander","score":11},{"answerId":100,"answer":"Devin Alexander","score":11},{"answerId":106,"answer":"Carly Swanson","score":14},{"answerId":115,"answer":"Page Williams","score":18},{"answerId":119,"answer":"Carly Swanson","score":14},{"answerId":120,"answer":"Devin Alexander","score":11},{"answerId":124,"answer":"Devin Alexander","score":11}]}}}'},affiliationResponse:{name:"affiliationResponse",summary:"An affiliation definition",fields:[{type:"affiliationQuestionResponse",name:"question",summary:"The topic of the affiliation",nativeType:"AffiliationQuestionResponse"},{type:"affiliationAnswerResponse",name:"answers",summary:"The possible answers of the affiliation question",isArray:!0,nativeType:"List<AffiliationAnswerResponse>"}]},organizationalHierarchyResponse:{name:"organizationalHierarchyResponse",summary:"Information related to the organizational hierarchy configuration",fields:[{type:"long",name:"managerId",summary:"The user ID of the organizational manager",nativeType:"long"},{type:"organizationalSearchTypeEnum",name:"searchType",summary:"The type of search performed for organizational recipients for the given manager",nativeType:"OrganizationalSearchTypeEnum"}]},recipientsRequestResponse:{name:"recipientsRequestResponse",summary:"Information related to intended recipients",fields:[{type:"long",name:"userIds",summary:"The recipient user IDs",isArray:!0,nativeType:"List<long>"},{type:"long",name:"groupIds",summary:"The recipient group IDs",isArray:!0,nativeType:"List<long>"},{type:"long",name:"divisionIds",summary:"The recipient division IDs",isArray:!0,nativeType:"List<long>"},{type:"long",name:"tagIds",summary:"The recipient user tags",isArray:!0,nativeType:"List<long>"},{type:"organizationalHierarchyResponse",name:"organizationalHierarchyRecipients",summary:"Information used to send via organizational hierarchy",notes:"This feature is only available on communities with organizational hierarchy enabled. For more information, contact your community manager.",nativeType:"OrganizationalHierarchyResponse"}]},continuableUserOverviewResponse:{name:"continuableUserOverviewResponse",summary:"A continuable list of users.",notes:"This response utilizes the continuable list responses.  Normally the Before and After cursors are straightforward for these responses but they can look odd when viewed out of context.  This oddity is caused by the process is which users are ordered when returned.",fields:[{type:"userOverviewResponse",name:"users",isArray:!0,nativeType:"IEnumerable<UserOverviewResponse>"},{type:"cursorsResponse",name:"cursors",summary:"Current location in the respective timeline.  For more information, please read the Cursors documentation.",nativeType:"CursorsResponse"},{type:"string",name:"nextUrl",summary:"Convenience URL that will return the next page of objects based on your current request.",notes:"If not included, this is the last page.",nativeType:"string"},{type:"string",name:"prevUrl",summary:"Convenience URL that will return the previous page of objects based on your current request.",notes:"If not included, this is the first page.",nativeType:"string"}]},continuableListResponse:{name:"continuableListResponse",fields:[{type:"cursorsResponse",name:"cursors",summary:"Current location in the respective timeline.  For more information, please read the Cursors documentation.",nativeType:"CursorsResponse"},{type:"string",name:"nextUrl",summary:"Convenience URL that will return the next page of objects based on your current request.",notes:"If not included, this is the last page.",nativeType:"string"},{type:"string",name:"prevUrl",summary:"Convenience URL that will return the previous page of objects based on your current request.",notes:"If not included, this is the first page.",nativeType:"string"}]},cursorsResponse:{name:"cursorsResponse",summary:"Generic response indicating the current location in the overall data set.",notes:"In practice, present values can be used to request additional data after/before the respective property.  If no value exists, then no additional data exists past that bound.",fields:[{type:"long",name:"afterId",summary:"The ID to use for loading the next page of results.  If not specified, this is the final page of results.",nativeType:"long?"},{type:"long",name:"beforeId",summary:"The ID to use for loading the previous page of results.  If not specified, this is the first page of results.",nativeType:"long?"}]},successResponse:{name:"successResponse",summary:"A simple response indicating the action was carried out successfully",fields:[{type:"string",name:"code",summary:'A value of "success" indicates a successful operation',nativeType:"string"}]},timeSensitiveResponse:{name:"timeSensitiveResponse",fields:[{type:"dateTime",name:"currentTime",summary:"The current time on the server.",notes:"Useful for determining time durations against other returned times.",nativeType:"DateTime"}]},postOverviewResponse:{name:"postOverviewResponse",summary:"Summary information about a post",fields:[{type:"guid",name:"postId",summary:"The post ID",nativeType:"Guid"},{type:"string",name:"title",summary:"The title of the post",nativeType:"string"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the post",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"bool",name:"sharable",summary:"Whether the post is sharable",nativeType:"bool"},{type:"string",name:"description",summary:"The post's description",nativeType:"string"}]},userTooltipResponse:{name:"userTooltipResponse",summary:"Summary information about a user",fields:[{type:"string",name:"users",summary:"List of users",isArray:!0,nativeType:"List<string>"},{type:"long",name:"total",summary:"Total number of users",notes:"If you are implementing a 'user1, user2 and x others' logic, be sure to subtract the size of the Users property from this value.",nativeType:"long"}]},userOverviewResponse:{name:"userOverviewResponse",summary:"Summary information about a user",fields:[{type:"long",name:"userId",summary:"ID of the user",nativeType:"long?"},{type:"string",name:"displayName",summary:"Display name of the user",nativeType:"string"},{type:"imageInfoResponse",name:"profilePictureImages",summary:"Profile picture images for the user",isCollection:!0,nativeType:"Dictionary<CdnAssetImageSizeEnum, ImageInfoResponse>"},{type:"bool",name:"isActive",summary:"Whether the user is still an active member of the community",nativeType:"bool?"}]},communityInfoResponse:{name:"communityInfoResponse",summary:"Community settings",fields:[{type:"string",name:"communityName",summary:"Display name of the community",nativeType:"string"},{type:"string",name:"primaryColor",summary:"Color associated with the community",nativeType:"string"},{type:"string",name:"logoUrl",summary:"URL of the community logo",nativeType:"string"},{type:"imageInfoResponse",name:"mobileStyledLogoImage",summary:"URL of the mobile styled logo",isCollection:!0,nativeType:"Dictionary<CdnAssetImageSizeEnum, ImageInfoResponse>"},{type:"string",name:"primaryStreamReferenceName",summary:"Reference name of the default stream used in the community news feed",nativeType:"string"},{type:"dateTime",name:"currentTime",summary:"Current time on the community server",nativeType:"DateTime"},{type:"string",name:"timeZoneOffset",summary:'Community time zone represented as the difference between local time and UTC in ISO 8601 time zone designator format. Example: "-08:00".',nativeType:"string"},{type:"string",name:"timeZoneIanaName",summary:'Community time zone represented as a tz database time zone name as set by IANA. Example: "America/Los_Angeles".',nativeType:"string"},{type:"string",name:"postGuidelineText",summary:"Customizable guideline text for submitting a post",nativeType:"string"},{type:"allowOrRequireEnum",name:"allowUsersToCategorizePosts",summary:"Whether users are allowed to set categories on submitted content",nativeType:"AllowOrRequireEnum"},{type:"allowOrRequireEnum",name:"allowUsersToTagPosts",summary:"Whether users are allowed to tag their own content",nativeType:"AllowOrRequireEnum"},{type:"bool",name:"enableShareByEmail",summary:"Whether users are allowed to share posts via email",nativeType:"bool"},{type:"bool",name:"enableNativeMobileSharing",summary:"Whether users are allowed to share posts via the native sharing dialog on mobile devices",nativeType:"bool"},{type:"passwordComplexityResponse",name:"passwordComplexity",summary:"The minimum password complexity requirements for the community",nativeType:"PasswordComplexityResponse"},{type:"bool",name:"enableDivisons",summary:"Whether divisions are enabled for the community",nativeType:"bool"},{type:"bool",name:"enableMessaging",summary:"Whether the messaging system is enabled for the community",nativeType:"bool"},{type:"bool",name:"enableMemberMessaging",summary:"Whether members can send messages using the community messaging system",nativeType:"bool"},{type:"bool",name:"enableNewMemberInvitations",summary:"Whether members can send messages to non-members, consequently inviting them to the community",nativeType:"bool"},{type:"bool",name:"showShareButtonOnSocialPosts",summary:"Whether the share button is shown for social posts",nativeType:"bool"},{type:"string",name:"translatedCommunityName",summary:"Display name of the community in the current user's language (if a translation is available)",nativeType:"string"},{type:"bool",name:"enableSuggestedShareText",summary:"Whether sharing disclosures and suggested sharing messages are allowed",nativeType:"bool"},{type:"bool",name:"enableSuggestedShareTextForFacebook",summary:"Whether sharing disclosures and suggested sharing messages are allowed for Facebook",nativeType:"bool"},{type:"string",name:"postSubmissionConfirmation",summary:"Customizable submission confirmation text after submitting a post",nativeType:"string"}]},languageResponse:{name:"languageResponse",summary:"A language",fields:[{type:"string",name:"isoCode",summary:"An ISO-639-1 code representing the language.  For the meaning of these language codes see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",nativeType:"string"},{type:"string",name:"nativeName",summary:"The name of the language in that language",nativeType:"string"},{type:"string",name:"englishName",summary:"The name of the language in English",nativeType:"string"},{type:"bool",name:"interfaceSupport",summary:"The interface supports this language.",notes:"If false, only content is supported.  If true, the user interface can be translated to this language.",nativeType:"bool"}]},conversationsResponse:{name:"conversationsResponse",summary:"A collection of conversations",fields:[{type:"conversationSummaryResponse",name:"conversations",summary:"A list of conversations",isArray:!0,nativeType:"IEnumerable<ConversationSummaryResponse>"},{type:"int",name:"total",summary:"The total number of conversations",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of conversations.  Returns -1 if past the end of the list.",nativeType:"int"}]},conversationMessagePreviewResponse:{name:"conversationMessagePreviewResponse",summary:"A preview of a message in a conversation",fields:[{type:"guid",name:"conversationMessageId",summary:"The conversation message ID",nativeType:"Guid"},{type:"dateTime",name:"createdDate",summary:"The date the message was posted",nativeType:"DateTime"},{type:"string",name:"messageTextPreview",summary:"Summary of the message text",nativeType:"string"},{type:"guid",name:"postId",summary:"The attached post ID",nativeType:"Guid?"},{type:"long",name:"userId",summary:"The ID of the user who posted the message",nativeType:"long"},{type:"string",name:"userDisplayName",summary:"The display name of the user",nativeType:"string"},{type:"string",name:"userProfilePictureSquare40Url",summary:"URL to user's profile picture at 40x40 pixels",nativeType:"string"},{type:"dateTime",name:"currentTime",summary:"The current time on the server.",notes:"Useful for determining time durations against other returned times.",nativeType:"DateTime"}]},conversationSummaryResponse:{name:"conversationSummaryResponse",fields:[{type:"guid",name:"conversationId",summary:"The conversation ID",nativeType:"Guid"},{type:"conversationTypeEnum",name:"conversationType",summary:"The conversation type",nativeType:"ConversationTypeEnum"},{type:"int",name:"messageCount",summary:"Number of messages in the conversation",nativeType:"int"},{type:"int",name:"unreadMessageCount",summary:"Number of unread messages in the conversation",nativeType:"int"},{type:"bool",name:"isNew",summary:"Has this user viewed the last message in this conversation?",nativeType:"bool"},{type:"bool",name:"isReply",summary:"Is the last message from this user?",nativeType:"bool"},{type:"conversationMessagePreviewResponse",name:"lastMessage",summary:"The last message preview",nativeType:"ConversationMessagePreviewResponse"},{type:"conversationParticipantResponse",name:"participants",summary:"The participants in the conversation, ordered by last posting time",isArray:!0,nativeType:"List<ConversationParticipantResponse>"}]},conversationsCountResponse:{name:"conversationsCountResponse",summary:"A conversation count",fields:[{type:"int",name:"total",summary:"The total number of conversations",nativeType:"int"}]},conversationResponse:{name:"conversationResponse",fields:[{type:"guid",name:"conversationId",summary:"The conversation ID",nativeType:"Guid"},{type:"conversationTypeEnum",name:"conversationType",summary:"The conversation type",nativeType:"ConversationTypeEnum"},{type:"dateTime",name:"lastMessageDate",summary:"The date of the last message",nativeType:"DateTime"},{type:"long",name:"lastPostingUserId",summary:"The ID of the user who wrote the last message",nativeType:"long"},{type:"conversationMessageResponse",name:"messages",summary:"The messages in the conversation",isArray:!0,nativeType:"List<ConversationMessageResponse>"},{type:"conversationParticipantResponse",name:"participants",summary:"The users participating in the conversation",isArray:!0,nativeType:"List<ConversationParticipantResponse>"},{type:"int",name:"total",summary:"Total number of messages in the conversation",nativeType:"int"},{type:"int",name:"next",summary:"Index of the next message.  Returns -1 if past the end of the message list.",nativeType:"int"},{type:"int",name:"unreadMessageCount",summary:"Number of unread messages in the conversation",nativeType:"int"},{type:"dateTime",name:"currentTime",summary:"The current time on the server.",notes:"Useful for determining time durations against other returned times.",nativeType:"DateTime"}]},conversationParticipantResponse:{name:"conversationParticipantResponse",fields:[{type:"long",name:"userId",summary:"User's ID",nativeType:"long"},{type:"string",name:"fullName",summary:"User's full name",nativeType:"string"},{type:"string",name:"firstName",summary:"User's first name",nativeType:"string"},{type:"bool",name:"isActive",summary:"Whether the user is active",nativeType:"bool"},{type:"string",name:"userProfilePictureSquare40Url",summary:"URL to user's profile picture at 40x40 pixels",nativeType:"string"}]},conversationMessageResponse:{name:"conversationMessageResponse",fields:[{type:"guid",name:"conversationMessageId",summary:"The conversation message ID",nativeType:"Guid"},{type:"guid",name:"conversationId",summary:"The conversation ID",nativeType:"Guid"},{type:"long",name:"userId",summary:"The ID of the user who posted the message",nativeType:"long"},{type:"string",name:"userDisplayName",summary:"The display name of the user",nativeType:"string"},{type:"string",name:"userProfilePictureSquare40Url",summary:"URL to user's profile picture at 40x40 pixels",nativeType:"string"},{type:"string",name:"messageText",summary:"The message text",nativeType:"string"},{type:"postResponse",name:"post",summary:"The attached post",nativeType:"PostResponse"},{type:"guid",name:"postId",summary:"The attached post ID",nativeType:"Guid?"},{type:"dateTime",name:"createdDate",summary:"The date the message was posted",nativeType:"DateTime"},{type:"dateTime",name:"currentTime",summary:"The current time on the server.",notes:"Useful for determining time durations against other returned times.",nativeType:"DateTime"}]},discussionCommentResponse:{name:"discussionCommentResponse",summary:"A single internal comment",fields:[{type:"long",name:"commentId",summary:"The comment ID",nativeType:"long"},{type:"guid",name:"postId",summary:"The post ID on which this comment was made",nativeType:"Guid"},{type:"dateTime",name:"createdDate",summary:"The comment's timestamp",nativeType:"DateTime"},{type:"long",name:"numberOfLikes",summary:"Number of likes this comment has received",nativeType:"long"},{type:"long",name:"numberOfReplies",summary:"Number of replies this comment has received",nativeType:"long"},{type:"string",name:"commentText",summary:"Text of the comment",nativeType:"string"},{type:"long",name:"parentCommentId",summary:"ID of the parent comment if this is a reply",nativeType:"long?"},{type:"userOverviewResponse",name:"creatorInfo",summary:"Information about the commenter",nativeType:"UserOverviewResponse"},{type:"bool",name:"isLikedByUser",summary:"Whether the comment has been liked by the current user",notes:"Comment likes are registered using the Discussions API.",nativeType:"bool?"},{type:"commentVisibilityStatus",name:"visibilityStatus",
summary:"The visibility of the comment",nativeType:"CommentVisibilityStatus"},{type:"dateTime",name:"currentTime",summary:"The current time on the server.",notes:"Useful for determining time durations against other returned times.",nativeType:"DateTime"}]},discussionCommentsResponse:{name:"discussionCommentsResponse",summary:"A collection of comments for a post or replies to a parent comment",fields:[{type:"discussionCommentResponse",name:"comments",summary:"The list of comments",isArray:!0,nativeType:"IEnumerable<DiscussionCommentResponse>"},{type:"cursorsResponse",name:"cursors",summary:"Current location in this post's comment timeline.  For more information, please read the Cursors documentation.",nativeType:"CursorsResponse"},{type:"string",name:"nextUrl",summary:"Convenience URL that will return the next page of comments based on your current request.",notes:"If not included, this is the last page of comments.",nativeType:"string"},{type:"string",name:"prevUrl",summary:"Convenience URL that will return the previous page of comments based on your current request.",notes:"If not included, this is the first page of comments.",nativeType:"string"}],example:'{\r\n  "comments": [\r\n    {\r\n      "commentId": 3,\r\n      "postId": "1fe5dbfd-d925-4d61-8616-d94c73adad67",\r\n      "createdDate": "2016-05-23T23:54:55.856032Z",\r\n      "numberOfLikes": 10,\r\n      "numberOfReplies": 0,\r\n      "commentText": "I think this is hilarious!",\r\n      "creatorInfo": {\r\n        "userId": 900,\r\n        "displayName": "Han Solo",\r\n        "profilePictureImages": {\r\n\t\t\t// [imageInfoResponse Collection]\r\n        },\r\n        "isActive": true,\r\n        "createdDate": "2015-09-16T17:45:30.730466Z"\r\n      },\r\n      "isLikedByUser": false,\r\n    },\r\n    {\r\n      "commentId": 2,\r\n      "postId": "3fcf7bf4-87ac-4dda-b693-da9ae335e6fd",\r\n      "createdDate": "2016-05-23T23:54:53.651787Z",\r\n      "numberOfLikes": 3,\r\n      "numberOfReplies": 0,\r\n      "commentText": "The rebels will never will this argument.",\r\n      "creatorInfo": {\r\n        "userId": 800,\r\n        "displayName": "Boba Fett",\r\n        "profilePictureImages": {\r\n\t\t\t// [imageInfoResponse Collection]\r\n        },\r\n        "isActive": true,\r\n        "createdDate": "2015-09-16T17:45:30.730466Z"\r\n      },\r\n      "isLikedByUser": true,\r\n    },\r\n    {\r\n      "commentId": 1,\r\n      "postId": "01300a72-7af7-4469-9800-96430585931e",\r\n      "createdDate": "2016-05-23T23:54:52.007015Z",\r\n      "numberOfLikes": 45,\r\n      "numberOfReplies": 2,\r\n      "commentText": "I can\'t believe what I\'m reading!",\r\n      "creatorInfo": {\r\n        "userId": 600,\r\n        "displayName": "Darth Vader",\r\n        "profilePictureImages": {\r\n\t\t\t// [imageInfoResponse Collection]\r\n        },\r\n        "isActive": true,\r\n        "createdDate": "2015-09-16T17:45:30.730466Z"\r\n      },\r\n      "isLikedByUser": false,\r\n    }\r\n  ],\r\n  "cursors": {\r\n\t// See CursorsResponse\r\n  }\r\n}'},divisionsResponse:{name:"divisionsResponse",summary:"The divisions defined in the system",fields:[{type:"divisionResponse",name:"divisions",summary:"The collection of divisions",isArray:!0,nativeType:"List<DivisionResponse>"},{type:"string",name:"prompt",summary:"The label to prompt members to select a division",nativeType:"string"},{type:"bool",name:"showUserDivisionSelection",summary:"Whether members should select their own division",nativeType:"bool?"},{type:"bool",name:"requireUserDivisionSelection",summary:"Whether members must select their own division.",notes:"This flag is set only if ShowUserDivisionSelection is set.",nativeType:"bool?"},{type:"bool",name:"allowMultipleDivisions",summary:"Whether members are allowed to select multiple or only one division",nativeType:"bool?"}]},divisionResponse:{name:"divisionResponse",summary:"A division definition",fields:[{type:"long",name:"divisionId",summary:"The division ID",nativeType:"long"},{type:"string",name:"name",summary:"The division name",nativeType:"string"},{type:"long",name:"parentDivisionId",summary:"The ID of this division's parent",nativeType:"long?"}]},documentResponse:{name:"documentResponse",summary:"Document download information",fields:[{type:"string",name:"url",summary:"A signed download URL for the document",nativeType:"string"},{type:"dateTime",name:"expirationDate",summary:"The time in which the signed URL expires",nativeType:"DateTime"}]},documentInfoResponse:{name:"documentInfoResponse",summary:"Information relevant to an attached document",fields:[{type:"guid",name:"id",summary:"The document's ID",nativeType:"Guid"},{type:"string",name:"fileName",summary:"The document's filename (with extension)",nativeType:"string"},{type:"string",name:"extension",summary:"The document's file extension",nativeType:"string"},{type:"string",name:"mimeType",summary:"The document's MIME type",nativeType:"string"}]},documentListResponse:{name:"documentListResponse",summary:"A collection of documents",fields:[{type:"documentInfoResponse",name:"documents",summary:"A list of documents",isArray:!0,nativeType:"IEnumerable<DocumentInfoResponse>"}]},supportedDocumentTypesResponse:{name:"supportedDocumentTypesResponse",summary:"A collection of supported document types",fields:[{type:"string",name:"mimeTypes",summary:"A list of supported file MIME types",isArray:!0,nativeType:"List<string>"},{type:"string",name:"fileExtensions",summary:"A list of supported file extensions",isArray:!0,nativeType:"List<string>"}]},whitelistResponse:{name:"whitelistResponse",summary:"The whitelist emails defined in the system",fields:[{type:"string",name:"emails",summary:"The list of whitelist emails",isArray:!0,nativeType:"List<string>"},{type:"int",name:"total",summary:"The total number of whitelist emails",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of whitelist emails",nativeType:"int?"}]},leaderboardListResponse:{name:"leaderboardListResponse",summary:"The collection of leaderboards",fields:[{type:"leaderboardResponse",name:"leaderboards",summary:"The dictionary of leaderboards",isCollection:!0,nativeType:"Dictionary<long, LeaderboardResponse>"}]},leaderboardRankingResponse:{name:"leaderboardRankingResponse",summary:"The leaderboard user rankings",fields:[{type:"leaderboardUserResponse",name:"rankings",summary:"The list of user rankings",isArray:!0,nativeType:"IEnumerable<LeaderboardUserResponse>"},{type:"int",name:"total",summary:"The total number of rankings",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of rankings",nativeType:"int?"}]},leaderboardResponse:{name:"leaderboardResponse",summary:"A leaderboard definition",fields:[{type:"long",name:"leaderboardId",summary:"The leaderboard ID",nativeType:"long"},{type:"string",name:"description",summary:"The description of the leaderboard",nativeType:"string"},{type:"string",name:"title",summary:"The leaderboard title",nativeType:"string"},{type:"int",name:"rankingThreshold",summary:"The maximum number of ranked users",nativeType:"int?"},{type:"leaderboardPrivacySettingEnum",name:"privacySetting",summary:"Determines who can see the leaderboard",nativeType:"LeaderboardPrivacySettingEnum"},{type:"leaderboardRankingThresholdTypeEnum",name:"rankingThresholdType",summary:"Determines which set of ranked users are visible",nativeType:"LeaderboardRankingThresholdTypeEnum"},{type:"dateTime",name:"modifiedDate",nativeType:"DateTime"},{type:"dateTime",name:"createdDate",nativeType:"DateTime"},{type:"bool",name:"published",summary:"Indicates if the leaderboard is published",nativeType:"bool"},{type:"dateTime",name:"userRanksLastUpdateDate",summary:"The date when the user rankings were last updated",nativeType:"DateTime?"},{type:"dateTime",name:"startDate",summary:"The start date of the ranking",nativeType:"DateTime?"},{type:"durationEnum",name:"duration",summary:"The time period of the ranking",nativeType:"DurationEnum"}]},leaderboardUserResponse:{name:"leaderboardUserResponse",summary:"A user who is a member of a leaderboard",fields:[{type:"long",name:"leaderboardId",summary:"The leaderboard ID",nativeType:"long"},{type:"string",name:"title",summary:"The leaderboard title",nativeType:"string"},{type:"userRequestResponse",name:"user",summary:"The user",nativeType:"UserRequestResponse"},{type:"long",name:"rank",summary:"The user's rank.",notes:"This is the ordinal ranking.  Tied users will have the same rank.",nativeType:"long"},{type:"long",name:"points",summary:"The user's number of points",nativeType:"long"}]},userLeaderboardMemberResponse:{name:"userLeaderboardMemberResponse",summary:"Represents the membership of a user in a given leaderboard",fields:[{type:"long",name:"leaderboardId",summary:"The leaderboard ID",nativeType:"long"},{type:"string",name:"title",summary:"The leaderboard title",nativeType:"string"},{type:"long",name:"rank",summary:"The rank held by the user.",notes:"This is the ordinal ranking.  Tied users will have the same rank.",nativeType:"long"},{type:"long",name:"points",summary:"The number of points the user has.",nativeType:"long"}]},userLeaderboardsResponse:{name:"userLeaderboardsResponse",summary:"A list of all leaderboards that a user is a member of",fields:[{type:"userLeaderboardMemberResponse",name:"leaderboards",summary:"The leaderboards that the user belongs to",isArray:!0,nativeType:"IEnumerable<UserLeaderboardMemberResponse>"}]},loginResponse:{name:"loginResponse",fields:[{type:"userRequestResponse",name:"user",summary:"The current user",nativeType:"UserRequestResponse"},{type:"string",name:"token",summary:"The login token",nativeType:"string"},{type:"dateTime",name:"expiration",summary:"The login token's expiration date",nativeType:"DateTime?"},{type:"string",name:"shortLivedToken",summary:"The short-lived token",nativeType:"string"},{type:"dateTime",name:"shortLivedTokenExpiration",summary:"The short-lived token's expiration date",nativeType:"DateTime?"}]},userShortTokenResponse:{name:"userShortTokenResponse",summary:"Short-lived token with expiration date",fields:[{type:"string",name:"token",summary:"The short-lived token",nativeType:"string"},{type:"dateTime",name:"expiration",summary:"The short-lived token's expiration date",nativeType:"DateTime?"}]},registrationIdentifiersRequestResponse:{name:"registrationIdentifiersRequestResponse",summary:"A whitelist identifier set",fields:[{type:"string",name:"identifiers",summary:"A set of whitelist identifier values",notes:"An entry is unique for the entire record (e.g. if there are 3 definitions enabled, a record will be unique for the combination of the 3.",isArray:!0,nativeType:"IEnumerable<string>"}]},uploadImageResponse:{name:"uploadImageResponse",fields:[{type:"string",name:"imageIdentifier",summary:"The identifier to the uploaded image",notes:"Use this identifier when including the image in the post content to include inline images. The format for the identifiers is <pre>$[ImageIdentifier]</pre>Example: 'This is a post with an inline $[abcd_1234] image!'.",nativeType:"string"}]},oAuth2TokenResponse:{name:"oAuth2TokenResponse",summary:"The OAuth2 token response.",notes:"This response returns the OAuth2 token used for the server-to-server REST APIs.",fields:[{type:"string",name:"token_type",summary:"The OAuth2 token type.",notes:'Currently the only supported type is "bearer".',nativeType:"string"},{type:"string",name:"access_token",summary:"The access token",notes:"Place this token in the HTTP Authorization header in the format: Authorization: Bearer access_token",nativeType:"string"}],example:'{"token_type":"bearer","access_token":"[BEARER_TOKEN]"}'},passwordComplexityResponse:{name:"passwordComplexityResponse",fields:[{type:"int",name:"minLength",nativeType:"int"},{type:"int",name:"minLower",nativeType:"int"},{type:"int",name:"minNumber",nativeType:"int"},{type:"int",name:"minSpecial",nativeType:"int"},{type:"int",name:"minUpper",nativeType:"int"},{type:"string",name:"errorResx",nativeType:"string"}]},providersResponse:{name:"providersResponse",summary:"A collection of social providers",fields:[{type:"providerResponse",name:"providers",summary:"The dictionary of social providers",isCollection:!0,nativeType:"Dictionary<string, ProviderResponse>"},{type:"string",name:"displayLanguage",nativeType:"string"}]},providerReactionResponse:{name:"providerReactionResponse",fields:[{type:"providerReactionTypeEnum",name:"reactionType",summary:"The type of social reaction",nativeType:"ProviderReactionTypeEnum"},{type:"string",name:"displayText",summary:"What the provider calls this type of reaction.  For example, the Share reaction is called Retweet by Twitter.",nativeType:"string"},{type:"int",name:"maxCharacterLimit",summary:"The maximum number of characters allowed in a comment for this reaction",nativeType:"int"},{type:"int",name:"displayOrder",summary:"The preferred display order for this reaction",nativeType:"int"}]},providerResponse:{name:"providerResponse",summary:"Information about a social provider",fields:[{type:"string",name:"canonicalName",summary:"The provider's internal name",nativeType:"string"},{type:"string",name:"displayName",summary:"The provider's display name",nativeType:"string"},{type:"string",name:"itemName",summary:"The name of the provider's post type",nativeType:"string"},{type:"string",name:"audience",summary:"The name of the provider's audience",nativeType:"string"},{type:"string",name:"engagement",summary:"The name of the provider's engagement action",nativeType:"string"},{type:"string",name:"corporateName",summary:"The name of the provider's company",nativeType:"string"},{type:"int",name:"shareMaxCharacterLimit",summary:"(Deprecated) The maximum number of characters allowed in a share minus provider-specific disclosure text.",notes:'Use "ShareMaxCharacterProviderLimit" instead, and subtract the length of the disclosure text actually used by the post being shared to determine the maximum length of the user\'s comment.',nativeType:"int?"},{type:"int",name:"shareMaxCharacterProviderLimit",summary:"The maximum number of characters allowed in a share",nativeType:"int?"},{type:"int",name:"shareImageUrlLength",summary:"The number of characters in an image URL",nativeType:"int?"},{type:"string",name:"shareDisclosureText",summary:"(Deprecated) The disclosure text appended to each share.",notes:'This default disclosure text can be overridden by individual posts.  Use a post\'s "ShareDisclosures" field to view the actual disclosure text used by that post.',nativeType:"string"},{type:"string",name:"backgroundColor",summary:"The preferred background color",nativeType:"string"},{type:"string",name:"textColor",summary:"The preferred text color",nativeType:"string"},{type:"bool",name:"canShare",summary:"Whether the provider supports sharing.",notes:"If false, the provider is read-only.  If true, then shares can be sent via the provider.",nativeType:"bool"},{type:"bool",name:"isBlog",summary:"Whether the provider is a blogging platform",nativeType:"bool"},{type:"providerReactionResponse",name:"reactions",summary:"The supported reactions for the provider",isArray:!0,nativeType:"List<ProviderReactionResponse>"},{type:"imageInfoResponse",name:"customProviderIcons",summary:"The custom provider icons",isCollection:!0,nativeType:"Dictionary<CdnAssetImageSizeEnum, ImageInfoResponse>"},{type:"bool",name:"useCustomProviderIcon",summary:"Whether the custom provider icons should be displayed",nativeType:"bool"}]},groupListResponse:{name:"groupListResponse",fields:[{type:"groupResponse",name:"groups",summary:"The groups",isArray:!0,nativeType:"List<GroupResponse>"}]},groupResponse:{name:"groupResponse",summary:"A group is a dynamic list of users.  It may include specific users, groups, or rules about what users will be included.",fields:[{type:"long",name:"id",summary:"The group ID",nativeType:"long"},{type:"string",name:"name",summary:"The group name",nativeType:"string"},{type:"string",name:"description",summary:"The group description",nativeType:"string"}]},validateInvitationTokenResponse:{name:"validateInvitationTokenResponse",fields:[{type:"string",name:"email",summary:"The email address corresponding to the email token",nativeType:"string"}]},whitelistIdentifierDefinitionResponse:{name:"whitelistIdentifierDefinitionResponse",summary:"A definition for a whitelist identifier",fields:[{type:"long",name:"id",summary:"The definition ID",nativeType:"long"},{type:"string",name:"name",summary:"The definition name",nativeType:"string"},{type:"string",name:"prompt",summary:"Optional prompt to display when requesting the identifier value from a user",nativeType:"string"},{type:"string",name:"helpText",summary:"Optional help text to display to a user",nativeType:"string"},{type:"bool",name:"enabled",summary:"Whether the definition is currently enabled",nativeType:"bool"}]},whitelistIdentifierDefinitionsResponse:{name:"whitelistIdentifierDefinitionsResponse",summary:"Information related to whitelist identifier definitions for the community",fields:[{type:"whitelistIdentifierDefinitionResponse",name:"identifiers",summary:"A collection of definitions",isArray:!0,nativeType:"IEnumerable<WhitelistIdentifierDefinitionResponse>"}]},whitelistIdentifiersResponse:{name:"whitelistIdentifiersResponse",fields:[{type:"long",name:"id",summary:"The whitelist definition ID",required:!0,nativeType:"long"},{type:"string",name:"value",summary:"The user's response for the given whitelist definition",required:!0,nativeType:"string"}]},relayAuthResponse:{name:"relayAuthResponse",fields:[{type:"string",name:"token",nativeType:"string"},{type:"string",name:"url",nativeType:"string"}]},searchResponse:{name:"searchResponse",summary:"The results of a search",fields:[{type:"searchRequestResponse",name:"results",summary:"The list of search results",isArray:!0,nativeType:"List<SearchRequestResponse>"}]},postLinkResponse:{name:"postLinkResponse",fields:[{type:"long",name:"userChannelIds",isArray:!0,nativeType:"List<long>"}]},shortenUrlResponse:{name:"shortenUrlResponse",summary:"One or more shortened URLs",fields:[{type:"string",name:"shortUrl",summary:"The shortened URL",nativeType:"string"},{type:"string",name:"emailUrl",summary:"A mailto URL for emailing the shortened URL.",notes:"Only returned if shortening a post for use with email.",nativeType:"string"},{type:"string",name:"shortUrls",summary:"The shortened URLs for each user channel ID",isCollection:!0,nativeType:"Dictionary<long, string>"}]},scheduledSharesResponse:{name:"scheduledSharesResponse",summary:"A list of pending scheduled shares",fields:[{type:"scheduledShareResponse",name:"shares",summary:"The list of scheduled shares",isArray:!0,nativeType:"IEnumerable<ScheduledShareResponse>"}]},scheduledShareResponse:{name:"scheduledShareResponse",summary:"A pending scheduled share",fields:[{type:"long",name:"id",summary:"The scheduled share ID",nativeType:"long"},{type:"string",name:"comment",summary:"The share comment",nativeType:"string"},{type:"guid",name:"postId",summary:"The ID of the post that is being shared",nativeType:"Guid?"},{type:"long",name:"userId",summary:"The ID of the user who is sharing",nativeType:"long"},{type:"feedCommentVisibilityStatusEnum",name:"visibility",summary:"Determines the visibility of the resulting comment",nativeType:"FeedCommentVisibilityStatusEnum"},{type:"dateTime",name:"nextShareDate",summary:"The next scheduled share date.",notes:"For auto-scheduled shares, this time may change due to optimization.",nativeType:"DateTime?"},{type:"int",name:"sharesRequested",summary:"The number of shares requested",nativeType:"int"},{type:"int",name:"sharesCompleted",summary:"The number of shares completed",nativeType:"int"},{type:"long",name:"lastPostCommentId",summary:"The post comment associated with the last successful share",nativeType:"long?"},{type:"int",name:"priority",summary:"The share priority.",notes:"A higher number means a higher priority.",nativeType:"int"},{type:"int",name:"sharesAttempted",summary:"The number of share attempts",nativeType:"int"},{type:"scheduleTypeEnum",name:"scheduleType",summary:"The share's schedule type.",notes:'Use "Auto" for smart sharing.  Use "Manual" to provide a list of specific times.',nativeType:"ScheduleTypeEnum"},{type:"long",name:"userChannelIds",summary:"The user channel IDs to share on",isArray:!0,nativeType:"List<long>"},{type:"dateTime",name:"shareDates",summary:"The scheduled share dates.",notes:"For auto-scheduled shares, this represents the hour that was chosen for the share.  For manual-scheduled shares, these times are exact.",isArray:!0,nativeType:"List<DateTime>"},{type:"long",name:"postCommentIds",summary:"The list of successful post comments",isArray:!0,nativeType:"List<long>"}]},postStreamResponse:{name:"postStreamResponse",summary:"A collection of posts contained in a stream",fields:[{type:"postResponse",name:"posts",summary:"The list of posts",isArray:!0,nativeType:"IEnumerable<PostResponse>"},{type:"int",name:"total",summary:"The total number of posts in the stream",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of posts",nativeType:"int?"}],example:'{"posts":[{"postId":"adb2be84c483442bba71e02aca9d787e","postSourceId":117,"title":"Disney Dreams! Photography Tips","description":" Disney Dreams! is Disneyland Paris&#8217; newest nighttime spectacular, and although it is absolutely gorgeous, it&#8217;s a beast to photograph. The show simultaneously has fire, fireworks, projections, lasers, and fountains&#8211;all of which call for different shutter speeds and exposures for an even or technically perfect photo, making it literally impossible to capture photos of some scenes [&#8230;]  This is a post in the  Disney Tourist Blog  RSS feed. For tips on Disney vacation...","permaLink":"http://www.disneytouristblog.com/disney-dreams-photography-tips/","cleanPermaLink":"http://www.disneytouristblog.com/disney-dreams-photography-tips/","postType":"Text","postSourceType":"Brand","postBylineType":"Source","provider":"SyndicatedUrl","approvalState":"Published","displayMode":"OpenExternally","status":"Active","userEditable":false,"sharable":true,"broadcasted":false,"pinned":false,"publishDate":"2013-08-12T13:00:35.0000000Z","modifiedDate":"2013-08-12T13:22:18.3193330Z","createdDate":"2013-08-12T13:22:18.3193330Z","startDate":"2013-08-12T04:00:00.0000000Z","endDate":"2100-12-31T00:00:00.0000000Z","receivedPublishPoints":false,"sharePoints":10,"clickPoints":0,"providerPostId":"http://www.disneytouristblog.com/?p=9344","urlSlug":"disney-dreams-photography-tips","statistics":{"totalInAppShareCount":0,"shareCount":0,"reactionCount":0,"impressionCount":0,"clickCount":0},"author":{"author":"Disney Tourist Blog"},"links":[],"attributes":[{"name":"Buzz","urlSafeName":"Buzz"},{"name":"Local for Orlando","urlSafeName":"Local for Orlando"},{"name":"Showcase","urlSafeName":"Showcase"},{"name":"Ambassador Pick","urlSafeName":"Ambassador-Pick"},{"name":"Top 10","urlSafeName":"Top-10"}],"media":[]}],"total":341,"next":25}'},postStreamsResponse:{name:"postStreamsResponse",summary:"A collection of post stream responses",fields:[{type:"postStreamResponse",name:"streams",summary:"The dictionary of posts in streams",isCollection:!0,nativeType:"Dictionary<string, PostStreamResponse>"}]},postStreamIdsResponse:{name:"postStreamIdsResponse",summary:"A collection of post IDs contained in a stream",fields:[{type:"guid",name:"postIds",summary:"The list of post IDs",isArray:!0,nativeType:"IEnumerable<Guid>"},{type:"int",name:"total",summary:"The total number of posts in the stream",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of posts",nativeType:"int?"}]},postStreamsIdsResponse:{name:"postStreamsIdsResponse",summary:"A collection of post stream ID responses",fields:[{type:"postStreamIdsResponse",name:"streams",summary:"The dictionary of post IDs in streams",isCollection:!0,nativeType:"Dictionary<string, PostStreamIdsResponse>"}]},postStreamDefinitionsResponse:{name:"postStreamDefinitionsResponse",summary:"A collection of stream definitions",fields:[{type:"postStreamDefinitionResponse",name:"streams",summary:"The dictionary of stream definitions",isCollection:!0,nativeType:"Dictionary<string, PostStreamDefinitionResponse>"}]},postStreamDefinitionResponse:{name:"postStreamDefinitionResponse",summary:"A stream definition.",notes:"The stream definition specifies the rules that control the inclusion of posts in a stream.",fields:[{type:"string",name:"referenceName",summary:"The canonical name of the stream",nativeType:"string"},{type:"string",name:"friendlyName",summary:"The friendly (user visible) name of the stream",nativeType:"string"},{type:"string",name:"description",summary:"The description of the stream",nativeType:"string"},{type:"string",name:"url",summary:"The URL of the stream",nativeType:"string"},{type:"statusEnum",name:"status",summary:"The stream's status",nativeType:"StatusEnum"},{type:"approvalStateEnum",name:"defaultApprovalMode",summary:"The default approval mode",nativeType:"ApprovalStateEnum"},{type:"bool",name:"autoRefresh",summary:"Whether the stream auto-refreshes",nativeType:"bool"},{type:"dateTime",name:"createdDate",nativeType:"DateTime"},{type:"dateTime",name:"modifiedDate",nativeType:"DateTime"},{type:"int",name:"maxHistoryDays",summary:"The maximum number of days, based on the PublishDate of the posts, that are kept in the stream",nativeType:"int"},{type:"articleStreamSortOrderEnum",name:"sortOrder",summary:"The rule that governs the sort order of the stream",nativeType:"ArticleStreamSortOrderEnum"},{type:"string",name:"providers",summary:"The providers that are included in the stream",isArray:!0,nativeType:"IEnumerable<string>"},{type:"bool",name:"mobileEnabled",summary:"Whether the stream is suitable for mobile app display",nativeType:"bool"}]},userTagsResponse:{name:"userTagsResponse",summary:"The user tags defined in the system",fields:[{type:"userTagRequestResponse",name:"tags",summary:"The dictionary of user tags",isCollection:!0,nativeType:"Dictionary<string, UserTagRequestResponse>"}]},userTagRequestResponse:{name:"userTagRequestResponse",fields:[{type:"string",name:"name",summary:"The tag or attribute name",required:!0,nativeType:"string"},{type:"string",name:"value",summary:"The optional value",notes:"This will only be set for attributes.",nativeType:"string"}]},userBadgeRequestResponse:{name:"userBadgeRequestResponse",fields:[{type:"string",name:"name",nativeType:"string"},{type:"string",name:"description",nativeType:"string"},{type:"string",name:"value",nativeType:"string"},{type:"string",name:"url",summary:"The associated image URL of the user's badge",nativeType:"string"}]},postTagsResponse:{name:"postTagsResponse",summary:"The post tags defined in the system",fields:[{type:"postTagRequestResponse",name:"tags",summary:"The dictionary of post tags",isCollection:!0,nativeType:"Dictionary<string, PostTagRequestResponse>"}]},surveyInfoResponse:{name:"surveyInfoResponse",summary:"Summary information related to a survey",fields:[{type:"long",name:"id",summary:"The survey ID",nativeType:"long"},{type:"string",name:"title",summary:"The survey title",nativeType:"string"},{type:"string",name:"description",summary:"The survey description",nativeType:"string"},{type:"surveyStatusEnum",name:"status",summary:"The current status of the survey",notes:"Only surveys in the <i>Created</i> state can be modified.",nativeType:"SurveyStatusEnum"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the survey",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"int",name:"questionCount",summary:"The total number of questions in the survey",nativeType:"int"},{type:"surveySettingsResponse",name:"settings",summary:"Settings that control the behavior of a survey",nativeType:"SurveySettingsResponse"},{type:"dateTime",name:"userStartDate",summary:"The date the user started the survey",nativeType:"DateTime?"},{type:"dateTime",name:"userCompleteDate",summary:"The date the user completed the survey",nativeType:"DateTime?"},{type:"surveyType",name:"type",summary:"The type of survey",notes:"Currently, only Standard and QuickPoll survey types are supported.",nativeType:"SurveyType"}]},surveysResponse:{name:"surveysResponse",summary:"Information about multiple surveys",fields:[{type:"surveyInfoResponse",name:"surveys",summary:"A list of survey information",isArray:!0,nativeType:"IEnumerable<SurveyInfoResponse>"}]},surveyResponse:{name:"surveyResponse",summary:"Detailed survey information with questions attached",fields:[{type:"long",name:"id",summary:"The survey ID",nativeType:"long"},{type:"string",name:"title",summary:"The survey title",nativeType:"string"},{type:"string",name:"description",summary:"The survey description",nativeType:"string"},{type:"surveyStatusEnum",name:"status",summary:"The current status of the survey",notes:"Only surveys in the <i>Created</i> state can be modified.",nativeType:"SurveyStatusEnum"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the survey",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"int",name:"questionCount",summary:"The total number of questions in the survey",nativeType:"int"},{type:"surveySettingsResponse",name:"settings",summary:"Settings that control the behavior of a survey",nativeType:"SurveySettingsResponse"},{type:"dateTime",name:"userStartDate",summary:"The date the user started the survey",nativeType:"DateTime?"},{type:"dateTime",name:"userCompleteDate",summary:"The date the user completed the survey",nativeType:"DateTime?"},{type:"surveyType",name:"type",summary:"The type of survey",notes:"Currently, only Standard and QuickPoll survey types are supported.",nativeType:"SurveyType"},{type:"questionWithOptionsResponse",name:"questions",summary:"A list of questions that belong to the survey",isArray:!0,nativeType:"List<QuestionWithOptionsResponse>"}]},surveyWithAnswersResponse:{name:"surveyWithAnswersResponse",summary:"Detailed survey information with question and the user's responses attached",fields:[{type:"long",name:"id",summary:"The survey ID",nativeType:"long"},{type:"string",name:"title",summary:"The survey title",nativeType:"string"},{type:"string",name:"description",summary:"The survey description",nativeType:"string"},{type:"surveyStatusEnum",name:"status",summary:"The current status of the survey",notes:"Only surveys in the <i>Created</i> state can be modified.",nativeType:"SurveyStatusEnum"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the survey",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"int",name:"questionCount",summary:"The total number of questions in the survey",nativeType:"int"},{type:"surveySettingsResponse",name:"settings",summary:"Settings that control the behavior of a survey",nativeType:"SurveySettingsResponse"},{type:"dateTime",name:"userStartDate",summary:"The date the user started the survey",nativeType:"DateTime?"},{type:"dateTime",name:"userCompleteDate",summary:"The date the user completed the survey",nativeType:"DateTime?"},{type:"surveyType",name:"type",summary:"The type of survey",notes:"Currently, only Standard and QuickPoll survey types are supported.",nativeType:"SurveyType"},{type:"questionWithOptionsResponse",name:"questions",summary:"A list of questions that belong to the survey",isArray:!0,nativeType:"List<QuestionWithOptionsResponse>"},{type:"answerResponse",name:"answers",summary:"Answers submitted by the user",isArray:!0,nativeType:"IEnumerable<AnswerResponse>"}]},questionResponse:{name:"questionResponse",summary:"Detailed question information",fields:[{type:"long",name:"id",summary:"The question ID",nativeType:"long"},{type:"surveyQuestionTypeEnum",name:"type",summary:"The type of question",notes:"Question type determines the acceptable answers that can be submitted.",
nativeType:"SurveyQuestionTypeEnum"},{type:"string",name:"text",summary:"The text of question",nativeType:"string"},{type:"long",name:"displayOrder",summary:"The order in which to display the question in reference to other questions",nativeType:"long"},{type:"bool",name:"isOptional",summary:"Whether the question is optional for the user",nativeType:"bool"}]},questionWithOptionsResponse:{name:"questionWithOptionsResponse",summary:"Detailed question information with valid answer options attached",fields:[{type:"long",name:"id",summary:"The question ID",nativeType:"long"},{type:"surveyQuestionTypeEnum",name:"type",summary:"The type of question",notes:"Question type determines the acceptable answers that can be submitted.",nativeType:"SurveyQuestionTypeEnum"},{type:"string",name:"text",summary:"The text of question",nativeType:"string"},{type:"long",name:"displayOrder",summary:"The order in which to display the question in reference to other questions",nativeType:"long"},{type:"bool",name:"isOptional",summary:"Whether the question is optional for the user",nativeType:"bool"},{type:"optionResponse",name:"options",summary:"A list of valid options for a given question",isArray:!0,nativeType:"IEnumerable<OptionResponse>"}]},optionResponse:{name:"optionResponse",summary:"A potential answer for a survey question",notes:"This is provided in order to demonstrate the possible answers available for a specific question.",fields:[{type:"long",name:"optionId",summary:"The option ID",nativeType:"long"},{type:"string",name:"text",summary:"The text of the option",notes:"Free form answers will not have a value for this property.",nativeType:"string"},{type:"string",name:"description",summary:"Optional label that describes the option or provides context for a location on the scale of options",nativeType:"string"},{type:"long",name:"displayOrder",summary:"The order in which to display the option in reference to other options for a given question",nativeType:"long"},{type:"bool",name:"isFreeForm",summary:"Whether the option is a free form text answer",notes:"This is especially useful for 'Other' answers in MultiSelect and MultipleChoice questions",nativeType:"bool"},{type:"imageInfoResponse",name:"images",summary:"A list of images accompanying the option",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"}]},answersResponse:{name:"answersResponse",fields:[{type:"answerResponse",name:"answers",summary:"A list of answers submitted by the user",isArray:!0,nativeType:"IEnumerable<AnswerResponse>"}]},answerResponse:{name:"answerResponse",fields:[{type:"long",name:"questionId",summary:"The ID of the associated question",nativeType:"long"},{type:"long",name:"optionId",summary:"The option ID for the submitted answer",nativeType:"long"},{type:"string",name:"text",summary:"The answer text",nativeType:"string"},{type:"bool",name:"isFreeForm",summary:"Whether the text property is a free form text answer",nativeType:"bool"},{type:"long",name:"displayOrder",summary:"The order in which the answer was recorded",notes:"The primary use for this value is for Rating question types.",nativeType:"long?"}]},surveySettingsResponse:{name:"surveySettingsResponse",summary:"Settings that control the behavior of a survey",fields:[{type:"bool",name:"isAnonymous",summary:"Whether the responses for a survey will be recorded anonymously",nativeType:"bool"},{type:"bool",name:"isEditableAfterComplete",summary:"Whether a user can edit their answers after they have previously marked the survey as complete",nativeType:"bool"},{type:"int",name:"pointsAwarded",summary:"The point value awarded to a user for completing the survey",nativeType:"int?"},{type:"dateTime",name:"surveyStartDate",summary:"The date in which the survey will be available to users",nativeType:"DateTime?"},{type:"dateTime",name:"surveyEndDate",summary:"The date in which the survey will be finished",notes:"After this date, users will no longer be able to submit their responses.",nativeType:"DateTime?"}]},submittedAnswerRequestResponse:{name:"submittedAnswerRequestResponse",fields:[{type:"long",name:"optionId",summary:"The option ID for the submitted answer",required:!0,nativeType:"long"},{type:"string",name:"freeFormText",summary:"The free form text for the submitted answer",notes:"This is only used when the question allows for free form text answers.",nativeType:"string"}]},postLinkRequestResponse:{name:"postLinkRequestResponse",fields:[{type:"string",name:"url",summary:"The post's URL",nativeType:"string"},{type:"string",name:"expandedUrl",summary:"The expanded URL (if it exists)",nativeType:"string"},{type:"string",name:"title",summary:"The post's title",nativeType:"string"},{type:"string",name:"domain",summary:"The link's domain",nativeType:"string"},{type:"string",name:"faviconUrl",summary:"The favicon URL of the link",nativeType:"string"},{type:"string",name:"name",summary:"The name of the link assigned by the social provider",nativeType:"string"},{type:"string",name:"caption",summary:"The short caption of the link (i.e., the text under the link)",nativeType:"string"},{type:"string",name:"description",summary:"The description of the link (i.e., the longer text under the caption)",nativeType:"string"},{type:"dateTime",name:"modifiedDate",nativeType:"DateTime"},{type:"dateTime",name:"createdDate",nativeType:"DateTime"}],sdkName:"PostLinkInfo"},postMediaRequestResponse:{name:"postMediaRequestResponse",fields:[{type:"string",name:"name",summary:"The name of the media object",nativeType:"string"},{type:"int",name:"width",summary:"The width of the media object in pixels",nativeType:"int?"},{type:"int",name:"height",summary:"The height of the media object in pixels",nativeType:"int?"},{type:"string",name:"mimeType",summary:"The MIME type of the media object",nativeType:"string"},{type:"string",name:"html",summary:"HTML that can be used to render the media object",nativeType:"string"},{type:"string",name:"url",summary:"The URL to the media object",nativeType:"string"},{type:"string",name:"origin",summary:"If available, specifies the original location of the media object",nativeType:"string"},{type:"string",name:"provider",summary:"The social provider name",nativeType:"string"},{type:"string",name:"role",summary:"The type of media (if determined)",nativeType:"string"},{type:"long",name:"duration",summary:"The video duration in milliseconds",nativeType:"long?"},{type:"string",name:"description",summary:"The video format description",nativeType:"string"},{type:"bool",name:"hasVideoUrl",summary:'Indicates that this media has a video URL that must be signed by using the "WatchVideo" include',nativeType:"bool"}]},postTagRequestResponse:{name:"postTagRequestResponse",fields:[{type:"string",name:"name",summary:"The tag name",nativeType:"string"},{type:"string",name:"urlSafeName",summary:"The name of the tag that is safe for use with URLs",nativeType:"string"}]},postCandidateImageResponse:{name:"postCandidateImageResponse",fields:[{type:"string",name:"url",summary:"The image's URL",nativeType:"string"},{type:"int",name:"width",summary:"The image's width",nativeType:"int?"},{type:"int",name:"height",summary:"The image's height",nativeType:"int?"},{type:"string",name:"mimeType",summary:"The image's MIME type",nativeType:"string"},{type:"string",name:"sslUrl",summary:"The image's secure URL",nativeType:"string"}]},imageInfoResponse:{name:"imageInfoResponse",summary:"Detailed image information",fields:[{type:"string",name:"size",summary:"Size of the image",nativeType:"string"},{type:"string",name:"url",summary:"URL of the image",nativeType:"string"},{type:"int",name:"width",summary:"Width of the image",nativeType:"int?"},{type:"int",name:"height",summary:"Height of the image",nativeType:"int?"},{type:"string",name:"mimeType",summary:"MIME Type of the image",nativeType:"string"}]},postUserShareInfoResponse:{name:"postUserShareInfoResponse",fields:[{type:"int",name:"pointsEarned",summary:"The number of points earned by the user for sharing",nativeType:"int"},{type:"int",name:"shareCount",summary:"The number of times the user shared",nativeType:"int"},{type:"dateTime",name:"mostRecentShareDate",summary:"Date of the user's most recent share of this post",nativeType:"DateTime"}]},postStatisticsResponse:{name:"postStatisticsResponse",fields:[{type:"int",name:"totalInAppShareCount",summary:"Synonym for ShareCount",nativeType:"int?"},{type:"string",name:"trackingId",nativeType:"string"},{type:"long",name:"shareCount",summary:"The count of shares initiated in the app that have been verified as successfully shared",nativeType:"long?"},{type:"long",name:"reactionCount",summary:"The count of reactions (likes, retweets, etc.) to shares",nativeType:"long?"},{type:"long",name:"impressionCount",summary:"The potential views of a post by sharer's friends and followers",nativeType:"long?"},{type:"long",name:"viewedCount",summary:"The number of times the post has been visited by logged-in users",nativeType:"long?"},{type:"long",name:"clickCount",summary:"The count of clicks to the post's link from shares",nativeType:"long?"},{type:"long",name:"likeCount",summary:"The count of internal likes on the post",nativeType:"long"},{type:"long",name:"commentCount",summary:"The count of internal comments on the post",nativeType:"long"},{type:"long",name:"commentLikeCount",summary:"The sum of all likes across all internal comments on the post",nativeType:"long"}]},postShareStatisticsResponse:{name:"postShareStatisticsResponse",fields:[{type:"int",name:"totalInAppShareCount",summary:"Synonym for ShareCount",nativeType:"int?"},{type:"string",name:"trackingId",nativeType:"string"},{type:"long",name:"shareCount",summary:"The count of shares initiated in the app that have been verified as successfully shared",nativeType:"long?"},{type:"long",name:"reactionCount",summary:"The count of reactions (likes, retweets, etc.) to shares",nativeType:"long?"},{type:"long",name:"impressionCount",summary:"The potential views of a post by sharer's friends and followers",nativeType:"long?"},{type:"long",name:"viewedCount",summary:"The number of times the post has been visited by logged-in users",nativeType:"long?"},{type:"long",name:"clickCount",summary:"The count of clicks to the post's link from shares",nativeType:"long?"},{type:"long",name:"likeCount",summary:"The count of internal likes on the post",nativeType:"long"},{type:"long",name:"commentCount",summary:"The count of internal comments on the post",nativeType:"long"},{type:"long",name:"commentLikeCount",summary:"The sum of all likes across all internal comments on the post",nativeType:"long"},{type:"long",name:"forwardCount",summary:"The count of forwards of the share",nativeType:"long?"},{type:"long",name:"replyCount",summary:"The count of replies to the share",nativeType:"long?"}]},postShareDisclosureResponse:{name:"postShareDisclosureResponse",fields:[{type:"channelTypeEnum",name:"provider",summary:"The provider type",nativeType:"ChannelTypeEnum"},{type:"string",name:"providerDisplayName",summary:"The provider's display name",nativeType:"string"},{type:"string",name:"shareDisclosureText",summary:"The disclosure text appended to each share",nativeType:"string"}]},postShareCommentRulesResponse:{name:"postShareCommentRulesResponse",fields:[{type:"channelTypeEnum",name:"provider",summary:"The provider type",nativeType:"ChannelTypeEnum"},{type:"int",name:"shareMaxCharacterLimit",summary:"The maximum length of a user's comment in a share on this provider.",notes:"This number takes into account the space for the comment's link and the post's disclosure text.",nativeType:"int"}]},postAuthorRequestResponse:{name:"postAuthorRequestResponse",fields:[{type:"string",name:"author",summary:"The stored text to display as the author.",notes:'Use when the post\'s postBylineType is "Author".',nativeType:"string"},{type:"string",name:"profileImageUrl",summary:"The author's profile picture on the social network",nativeType:"string"},{type:"string",name:"providerUserId",summary:"The author's ID on the social network",nativeType:"string"},{type:"string",name:"providerUserName",summary:"The author's name on the social network",nativeType:"string"},{type:"string",name:"profileUrl",summary:"The author's profile URL on the social network",nativeType:"string"},{type:"string",name:"postSourceName",summary:"The name of the source of the post.",nativeType:"string"},{type:"string",name:"postSourceSite",summary:"The website in which the post originated",nativeType:"string"}]},postResponse:{name:"postResponse",summary:"A post",fields:[{type:"guid",name:"postId",summary:"The post ID",nativeType:"Guid"},{type:"long",name:"postSourceId",summary:"The source ID",nativeType:"long"},{type:"string",name:"title",summary:"The title of the post",nativeType:"string"},{type:"string",name:"description",summary:"The short description of the post",nativeType:"string"},{type:"string",name:"tagLine",summary:"The tag line of the post",notes:"This field usually is displayed below the title",nativeType:"string"},{type:"string",name:"content",summary:"The body of the post",nativeType:"string"},{type:"string",name:"rawContent",summary:"The body of the post including all HTML (when both Content and RawContent are included)",nativeType:"string"},{type:"string",name:"creatorComments",summary:"A message associated with the post",nativeType:"string"},{type:"userOverviewResponse",name:"creatorInfo",summary:"Detailed information about the post creator",notes:"The creator is the internal user that submitted the post to the community.",nativeType:"UserOverviewResponse"},{type:"string",name:"location",summary:"Geographic location related to the post",nativeType:"string"},{type:"string",name:"properties",summary:"Miscellaneous properties of the post.  Not available with all post types",isCollection:!0,nativeType:"Dictionary<string, string>"},{type:"string",name:"permaLink",summary:"The external URL referenced by the post",nativeType:"string"},{type:"string",name:"cleanPermaLink",summary:"The permalink (excluding problematic spaces and newlines)",nativeType:"string"},{type:"articleTypeEnum",name:"postType",summary:"The basic type of the post",nativeType:"ArticleTypeEnum"},{type:"articleSourceTypeEnum",name:"postSourceType",summary:"The type of the post's source",nativeType:"ArticleSourceTypeEnum"},{type:"articleBylineTypeEnum",name:"postBylineType",summary:"A hint for the UI indicating the desired way the post's source or author should appear in the byline.",notes:"This is a hint to the UI.  The implementer of UI may choose to ignore or implement the hint.",nativeType:"ArticleBylineTypeEnum"},{type:"string",name:"provider",summary:"The social provider from which the post originated (e.g., Facebook, Twitter).",notes:'This specifies where the post was originally found.  Use "InApp" for unique posts or user-submitted original content.',nativeType:"string"},{type:"approvalStateEnum",name:"approvalState",summary:"The approval state of the post.",notes:"Can be published, pending, or excluded.",nativeType:"ApprovalStateEnum"},{type:"displayModeEnum",name:"displayMode",summary:"Indicates redirection of a post to an internal or external location.",notes:"This is an optional hint to the UI; this hint can be disregarded.",nativeType:"DisplayModeEnum"},{type:"statusEnum",name:"status",nativeType:"StatusEnum"},{type:"bool",name:"userEditable",nativeType:"bool"},{type:"bool",name:"userShareable",summary:"Indicates whether the current user is able to share the post.  If no current user, defaults to true.",nativeType:"bool"},{type:"bool",name:"userCommentable",summary:"Indicates whether the current user is able to participate in dicussions on the post.  If no current user, defaults to false.",nativeType:"bool"},{type:"bool",name:"sharable",summary:"Whether the VoiceStorm platform and widgets will allow for the post to be shared",nativeType:"bool"},{type:"bool",name:"broadcasted",summary:"Whether the post has been broadcast to users for sharing",nativeType:"bool"},{type:"bool",name:"pinned",summary:"Whether the post has been set for priority display in streams",nativeType:"bool"},{type:"dateTime",name:"publishDate",summary:"For user-submitted content, the date of post submission; for content imported from an external source, the publication date according to the source",nativeType:"DateTime"},{type:"dateTime",name:"startDate",summary:"The date after which the post is available for viewing",nativeType:"DateTime?"},{type:"dateTime",name:"endDate",summary:"The date the after which the post will no longer be available for viewing",nativeType:"DateTime?"},{type:"dateTime",name:"eventStartDate",summary:"The date the event begins (for event-type posts)",nativeType:"DateTime?"},{type:"dateTime",name:"eventEndDate",summary:"The date the event ends (for event-type posts)",nativeType:"DateTime?"},{type:"dateTime",name:"providerTimeStamp",summary:"The date of the post from the provider's perspective, i.e., when it was originally posted on the social provider",nativeType:"DateTime?"},{type:"bool",name:"receivedPublishPoints",summary:"Whether the user who submitted the post received points when the post was published",nativeType:"bool"},{type:"string",name:"suggestedShareText",summary:"The suggested share text for the post",nativeType:"string"},{type:"string",name:"shortSuggestedShareText",summary:"The suggested share text for the post for short message providers",nativeType:"string"},{type:"string",name:"suggestedShareTextList",summary:"The possible suggested share texts for the post",isArray:!0,nativeType:"List<string>"},{type:"string",name:"shortSuggestedShareTextList",summary:"The possible suggested share texts for the post for short message providers",isArray:!0,nativeType:"List<string>"},{type:"int",name:"sharePoints",summary:"The number of points awarded when a user shares the post",nativeType:"int?"},{type:"int",name:"clickPoints",summary:"The number of points awarded when someone clicks on a shared link to the post",nativeType:"int"},{type:"string",name:"providerPostId",summary:"The original ID of the post on the provider's network",nativeType:"string"},{type:"string",name:"urlSlug",summary:"The SEO text to put in public links to the post",nativeType:"string"},{type:"string",name:"classification",summary:"The type of post on the provider's network.",notes:"This field (which is not always available) usually indicates if the post is a photo, video, text, etc.",nativeType:"string"},{type:"bool",name:"shareWithImages",summary:"Controls if posts shared to short message services (like Twitter) have images shared",nativeType:"bool?"},{type:"bool",name:"shareImagesOnly",summary:"Controls if posts shared to certain services are treated as image/photo only updates",nativeType:"bool"},{type:"string",name:"actions",summary:"A JSON blob containing a list of action items for the post and URLs",nativeType:"string"},{type:"string",name:"mentions",summary:"The mentions (users, hash tags, etc.) stored as a JSON blob.",notes:'These are the mentions in the post itself (not external mentions of the post).  Example:  For the tweet "@BobSmith hello I like #candy", the mentions would be "@BobSmith" and "#candy".',nativeType:"string"},{type:"postStatisticsResponse",name:"statistics",summary:"Performance statistics for the post",nativeType:"PostStatisticsResponse"},{type:"postUserShareInfoResponse",name:"userShareInfo",summary:"Sharing statistics for the post by the current user",nativeType:"PostUserShareInfoResponse"},{type:"postAuthorRequestResponse",name:"author",summary:"Detailed information about the author of the post's content",notes:"Depending on the post, the author and creator can sometimes be the same",nativeType:"PostAuthorRequestResponse"},{type:"postLinkRequestResponse",name:"links",summary:"A list of links mentioned in the post",isArray:!0,nativeType:"IEnumerable<PostLinkRequestResponse>"},{type:"postTagRequestResponse",name:"tags",summary:"A list of tags that have been set on the post",isArray:!0,nativeType:"IEnumerable<PostTagRequestResponse>"},{type:"postMediaRequestResponse",name:"media",summary:"A list of additional media (images, videos) accompanying the content",isArray:!0,nativeType:"IEnumerable<PostMediaRequestResponse>"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the post",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"postCandidateImageResponse",name:"candidateImages",summary:"A list of candidate images in the pending post",isArray:!0,nativeType:"IEnumerable<PostCandidateImageResponse>"},{type:"bool",name:"visible",summary:"Whether the post is currently visible",nativeType:"bool"},{type:"postShareDisclosureResponse",name:"shareDisclosures",summary:"The disclosure text appended to the user's comment when the post is shared.",notes:"Depending on the post's settings, this is either the custom disclosure text for this post or the system default disclosure text.",isArray:!0,nativeType:"IEnumerable<PostShareDisclosureResponse>"},{type:"postShareCommentRulesResponse",name:"shareCommentRules",summary:"The maximum length of the user's comment when the post is shared.",notes:"Only includes providers that have short comment lengths that users need to be made aware of when entering their comment.",isArray:!0,nativeType:"IEnumerable<PostShareCommentRulesResponse>"},{type:"string",name:"language",summary:"The language of the post content",nativeType:"string"},{type:"bool",name:"userHidden",summary:"Whether the user has hidden the post from one or more streams",nativeType:"bool"},{type:"bool",name:"isViewedByUser",summary:"Whether the post has been viewed by the current user.",notes:"Depends on calls to /event/postview.  If you do not see views being registered, you may need to manually regsiter them.",nativeType:"bool"},{type:"bool",name:"isDiscussionViewedByUser",summary:"Whether the post's discussion thread has been viewed by the current user",nativeType:"bool"},{type:"bool",name:"isLikedByUser",summary:"Whether the post has been internally liked by the current user.",notes:"Internal likes are registered using the Discussions API.",nativeType:"bool"},{type:"bool",name:"isCommentedByUser",summary:"Whether the post has been commented on by the current user.",notes:"Internal comments are registered using the Discussions API.",nativeType:"bool"},{type:"bool",name:"isSharedByUser",summary:"Whether the post has been previously shared by the current user",nativeType:"bool"},{type:"dateTime",name:"currentTime",summary:"The current time on the server.",notes:"Useful for determining time durations against other returned times.",nativeType:"DateTime"}],example:"Response Example"},postsResponse:{name:"postsResponse",summary:"A collection of posts",fields:[{type:"postResponse",name:"posts",summary:"The list of posts",isArray:!0,nativeType:"IEnumerable<PostResponse>"}]},postCommentsResponse:{name:"postCommentsResponse",summary:"A collection of post comments",fields:[{type:"postCommentResponse",name:"comments",summary:"A list of comments",isArray:!0,nativeType:"IEnumerable<PostCommentResponse>"},{type:"int",name:"total",summary:"The total number of comments",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of comments",nativeType:"int?"}]},postCommentResponse:{name:"postCommentResponse",summary:"A comment on a post.",notes:"Post comments are generated by users.  They also include social provider shares.",fields:[{type:"long",name:"id",summary:"The ID of the comment",nativeType:"long"},{type:"long",name:"postUserId",summary:"The ID of the user who created the comment",nativeType:"long"},{type:"guid",name:"postId",summary:"The ID of the post on which the user commented",nativeType:"Guid"},{type:"long",name:"sourceId",summary:"The source ID of the post",nativeType:"long?"},{type:"statusEnum",name:"status",summary:"The comment status",nativeType:"StatusEnum"},{type:"bool",name:"isBlocked",summary:"Whether the comment has been blocked by a manager",nativeType:"bool"},{type:"string",name:"comment",summary:"The comment text",nativeType:"string"},{type:"int",name:"totalPoints",summary:"The number of points earned by the comment",nativeType:"int"},{type:"userRequestResponse",name:"postUser",summary:"The user who created the comment",nativeType:"UserRequestResponse"},{type:"bool",name:"scheduled",summary:"Was the comment scheduled for future delivery.",nativeType:"bool"},{type:"dateTime",name:"createdDate",nativeType:"DateTime"},{type:"dateTime",name:"modifiedDate",nativeType:"DateTime"},{type:"postStatisticsResponse",name:"statistics",summary:"Performance statistics for the comment",nativeType:"PostStatisticsResponse"},{type:"postCommentChannelResponse",name:"channels",summary:"Sharing details for the comment",isArray:!0,nativeType:"List<PostCommentChannelResponse>"},{type:"dateTime",name:"shareDate",summary:"The date and times of share",isArray:!0,nativeType:"List<DateTime>"},{type:"long",name:"scheduledShareId",summary:"The scheduled share ID",nativeType:"long?"}]},postSourceResponse:{name:"postSourceResponse",summary:"A collection of posts from a source",fields:[{type:"postAuthorRequestResponse",name:"source",summary:"The source",nativeType:"PostAuthorRequestResponse"},{type:"postResponse",name:"posts",summary:"The list of posts",isArray:!0,nativeType:"IEnumerable<PostResponse>"},{type:"int",name:"total",summary:"The total number of posts in the stream",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of posts",nativeType:"int?"}]},startUploadPostVideoResponse:{name:"startUploadPostVideoResponse",summary:"Information about where to upload a large video file",fields:[{type:"string",name:"url",summary:"The URL that the video file should be uploaded to",nativeType:"string"},{type:"guid",name:"ticket",summary:"The ticket that represents the video.",notes:"Use the ticket when calling /post/id/completevideo.",nativeType:"Guid"}]},testResponse:{name:"testResponse",fields:[{type:"string",name:"status",nativeType:"string"}]},userNotificationResponse:{name:"userNotificationResponse",summary:"Information related to a user's displayable notification",fields:[{type:"long",name:"notificationIds",summary:"One or more notification IDs that have been aggregated into this single user notification",isArray:!0,nativeType:"IEnumerable<long>"},{type:"notificationEventType",name:"notificationType",summary:"The type of notification",nativeType:"NotificationEventType"},{type:"dateTime",name:"groupedCreatedDate",summary:"Date of notification creation",nativeType:"DateTime?"},{type:"dateTime",name:"groupedAcknowledgementDate",summary:"Date of notification acknowledgement",nativeType:"DateTime?"},{type:"dateTime",name:"groupedReadDate",summary:"Date the notification was read by the user",nativeType:"DateTime?"},{type:"dateTime",name:"groupedHiddenDate",summary:"Date the notification was hidden by the user",nativeType:"DateTime?"},{type:"bool",name:"readConfirmationRequested",summary:"Whether the notification is requesting read confirmation",nativeType:"bool"},{type:"dateTime",name:"readConfirmationDate",summary:"The date that the viewer confirmed receipt of the notification",nativeType:"DateTime?"},{type:"userNotificationPriorityEnum",name:"priority",summary:"The notification priority",nativeType:"UserNotificationPriorityEnum"},{type:"notificationBroadcastResponse",name:"broadcast",summary:"Notification information for a broadcast that has been sent out to a user",nativeType:"NotificationBroadcastResponse"},{type:"notificationLikeOnCommentResponse",name:"likeOnComment",summary:"Notification information for when someone likes a user's comment",nativeType:"NotificationLikeOnCommentResponse"},{type:"notificationReplyToCommentResponse",name:"replyToComment",summary:"Notification information for when someone replies to a user's comment",nativeType:"NotificationReplyToCommentResponse"},{type:"notificationPostApprovedResponse",name:"postApproved",summary:"Notification information for when a post that the user submitted was approved",nativeType:"NotificationPostApprovedResponse"},{type:"notificationUserMentionedResponse",name:"mention",summary:"Notification information for when someone mentions this user in a discussion",nativeType:"NotificationUserMentionedResponse"}]},userNotificationsResponse:{name:"userNotificationsResponse",summary:"A list of user notifications.",notes:'This response utilizes the continuable list responses.  Normally the Before and After cursors are straightforward for these responses but they can look odd when viewed out of context.  This oddity is caused by the aggregation process for individual notifications.  Non-sequential notifications can be returned causing the Before and After IDs to appear "inside" the returned results.',fields:[{type:"userNotificationResponse",name:"notifications",isArray:!0,nativeType:"IEnumerable<UserNotificationResponse>"},{type:"cursorsResponse",name:"cursors",summary:"Current location in the respective timeline.  For more information, please read the Cursors documentation.",nativeType:"CursorsResponse"},{type:"string",name:"nextUrl",summary:"Convenience URL that will return the next page of objects based on your current request.",notes:"If not included, this is the last page.",nativeType:"string"},{type:"string",name:"prevUrl",summary:"Convenience URL that will return the previous page of objects based on your current request.",notes:"If not included, this is the first page.",nativeType:"string"}]},userNotificationsSummaryResponse:{name:"userNotificationsSummaryResponse",summary:"A summary of a user's notifications",fields:[{type:"userNotificationsPrioritySummaryResponse",name:"notifications",summary:"A collection of notification IDs by priority",isArray:!0,nativeType:"IEnumerable<UserNotificationsPrioritySummaryResponse>"}]},userNotificationsPrioritySummaryResponse:{name:"userNotificationsPrioritySummaryResponse",summary:"A grouping of notification IDs by notification priority",fields:[{type:"userNotificationPriorityEnum",name:"priority",summary:"The notification priority",nativeType:"UserNotificationPriorityEnum"},{type:"long",name:"ids",summary:"A list of user notification IDs that are set to this priority",isArray:!0,nativeType:"IEnumerable<long>"}]},userNotificationsCountResponse:{name:"userNotificationsCountResponse",summary:"A count of notifications",fields:[{type:"int",name:"totals",summary:"The total number of notifications for the requested state",isCollection:!0,nativeType:"Dictionary<UserNotificationState, int>"}]},notificationPostBaseResponse:{name:"notificationPostBaseResponse",fields:[{type:"guid",name:"postId",summary:"The ID of the post",nativeType:"Guid"},{type:"string",name:"title",summary:"The post's title",nativeType:"string"},{type:"bool",name:"userShareable",summary:"Indicates whether the current user is able to share the post",nativeType:"bool"},{type:"bool",name:"isSocialPost",summary:"Whether the post is from a social media source",notes:'This is used to help identify posts affected by "social post" community settings.',nativeType:"bool"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the post",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"string",name:"description",summary:"The post's description",nativeType:"string"}]},notificationSurveyResponse:{name:"notificationSurveyResponse",fields:[{type:"long",name:"surveyId",summary:"The ID of the survey",nativeType:"long"},{type:"string",name:"title",summary:"The survey's title",nativeType:"string"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the survey",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"surveyType",name:"type",summary:"The survey's type",nativeType:"SurveyType"}]},notificationBroadcastResponse:{name:"notificationBroadcastResponse",summary:"Notification information for a broadcast that has been sent out to a user",
fields:[{type:"userOverviewResponse",name:"senderInfo",summary:"Overview information for the user that sent out the broadcast",nativeType:"UserOverviewResponse"},{type:"string",name:"customMessage",summary:"Information about the broadcast added by the sender",nativeType:"string"},{type:"string",name:"headline",summary:"The broadcast headline added by the sender",nativeType:"string"},{type:"string",name:"subject",summary:"The broadcast subject added by the sender",nativeType:"string"},{type:"long",name:"applicationNotificationId",summary:"The application notification ID associated with the broadcast",notes:"Use this when getting additional information for a given broadcast.",nativeType:"long?"},{type:"long",name:"broadcastId",summary:"The broadcast ID",notes:"Use this when registering view events for a broadcast.",nativeType:"long?"},{type:"notificationPostBaseResponse",name:"post",summary:"The post associated with the broadcast",nativeType:"NotificationPostBaseResponse"},{type:"imageInfoResponse",name:"images",summary:"The image associated with the broadcast",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"documentInfoResponse",name:"documents",summary:"The documents  attached to the broadcast",isArray:!0,nativeType:"IEnumerable<DocumentInfoResponse>"},{type:"notificationSurveyResponse",name:"survey",summary:"The survey attached to the broadcast",nativeType:"NotificationSurveyResponse"}]},notificationLikeOnCommentResponse:{name:"notificationLikeOnCommentResponse",summary:"Notification information for when someone likes a user's comment",fields:[{type:"discussionCommentResponse",name:"originalComment",summary:"The user's original comment that was liked",nativeType:"DiscussionCommentResponse"},{type:"userOverviewResponse",name:"likes",summary:"Overview information for all of the users that recently liked the comment",isArray:!0,nativeType:"IEnumerable<UserOverviewResponse>"},{type:"guid",name:"postId",summary:"The ID of the post",nativeType:"Guid"},{type:"string",name:"title",summary:"The post's title",nativeType:"string"},{type:"bool",name:"userShareable",summary:"Indicates whether the current user is able to share the post",nativeType:"bool"},{type:"bool",name:"isSocialPost",summary:"Whether the post is from a social media source",notes:'This is used to help identify posts affected by "social post" community settings.',nativeType:"bool"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the post",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"string",name:"description",summary:"The post's description",nativeType:"string"}]},notificationReplyToCommentResponse:{name:"notificationReplyToCommentResponse",summary:"Notification information for when someone replies to a user's comment",fields:[{type:"discussionCommentResponse",name:"originalComment",summary:"The user's original comment that was replied to",nativeType:"DiscussionCommentResponse"},{type:"discussionCommentResponse",name:"replies",summary:"The relevant replies that are a part of the notification",isArray:!0,nativeType:"IEnumerable<DiscussionCommentResponse>"},{type:"guid",name:"postId",summary:"The ID of the post",nativeType:"Guid"},{type:"string",name:"title",summary:"The post's title",nativeType:"string"},{type:"bool",name:"userShareable",summary:"Indicates whether the current user is able to share the post",nativeType:"bool"},{type:"bool",name:"isSocialPost",summary:"Whether the post is from a social media source",notes:'This is used to help identify posts affected by "social post" community settings.',nativeType:"bool"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the post",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"string",name:"description",summary:"The post's description",nativeType:"string"}]},notificationPostApprovedResponse:{name:"notificationPostApprovedResponse",summary:"Notification information for when a post that the user submitted was approved",fields:[{type:"guid",name:"postId",summary:"The ID of the post",nativeType:"Guid"},{type:"string",name:"title",summary:"The post's title",nativeType:"string"},{type:"bool",name:"userShareable",summary:"Indicates whether the current user is able to share the post",nativeType:"bool"},{type:"bool",name:"isSocialPost",summary:"Whether the post is from a social media source",notes:'This is used to help identify posts affected by "social post" community settings.',nativeType:"bool"},{type:"imageInfoResponse",name:"images",summary:"A list of various-sized images for the post",isCollection:!0,nativeType:"Dictionary<CdnArticleImageSizeEnum, ImageInfoResponse>"},{type:"string",name:"description",summary:"The post's description",nativeType:"string"}]},notificationUserMentionedResponse:{name:"notificationUserMentionedResponse",summary:"Notification information for when someone mentions this user in a discussion",fields:[{type:"discussionCommentResponse",name:"originalComment",summary:"The comment in which the recipient was mentioned",nativeType:"DiscussionCommentResponse"},{type:"notificationPostBaseResponse",name:"post",summary:"The post the comment was added to",nativeType:"NotificationPostBaseResponse"}]},userRequestResponse:{name:"userRequestResponse",fields:[{type:"long",name:"id",summary:"The user's internal ID",nativeType:"long"},{type:"string",name:"userName",summary:"The user's username for authentication purposes",nativeType:"string"},{type:"string",name:"email",summary:"The user's email address",nativeType:"string"},{type:"string",name:"displayName",summary:"The user's preferred display name",nativeType:"string"},{type:"string",name:"fullName",summary:"The first and last name of the user",nativeType:"string"},{type:"string",name:"firstName",summary:"The user's first name",nativeType:"string"},{type:"string",name:"lastName",summary:"The user's last name",nativeType:"string"},{type:"userDisplayNameEnum",name:"displayNameFormat",summary:"The user's preferred display format for their name",nativeType:"UserDisplayNameEnum?"},{type:"userStatusEnum",name:"status",nativeType:"UserStatusEnum?"},{type:"bool",name:"profileCompleted",summary:"Whether the user's profile was completed during onboarding",nativeType:"bool"},{type:"dateTime",name:"lastActivityDate",summary:"The last time the user interacted with the system.",notes:"This includes logging into the system, sharing posts, interacting with the feed, making API calls, among other things.",nativeType:"DateTime?"},{type:"string",name:"location",summary:"The user's self-described location (may not be an actual geographic location)",nativeType:"string"},{type:"string",name:"externalApiUserId",summary:"The user's ID on the external system managed by the caller of this API",nativeType:"string"},{type:"long",name:"managerUserId",summary:"The ID of the user's manager",nativeType:"long?"},{type:"string",name:"timeZone",summary:'User time zone represented as a tz database time zone name as set by IANA. Example: "America/Los_Angeles".',nativeType:"string"},{type:"string",name:"selectedTimeZone",summary:'The user\'s selected time zone represented as a tz database time zone name as set by IANA. Example: "America/Los_Angeles".',nativeType:"string"},{type:"long",name:"pointBalance",summary:"The total points earned to date",nativeType:"long?"},{type:"long",name:"unredeemedPoints",summary:"The points currently available for redemption",nativeType:"long?"},{type:"long",name:"redeemedPoints",summary:"The number of points redeemed over the user's lifetime",nativeType:"long?"},{type:"string",name:"apiInfo",summary:"API-specific property bag",nativeType:"string"},{type:"bool",name:"hasPassword",summary:"Whether the user has a password associated with the account.",notes:"A user who registers and logs in using a social network account will not necessarily have a password.",nativeType:"bool?"},{type:"bool",name:"mustChangePassword",summary:"Whether the user must change their password based on community settings",nativeType:"bool?"},{type:"bool",name:"isAccountVerified",summary:"Indicates if the user has verified their email address",nativeType:"bool?"},{type:"postStatisticsResponse",name:"statistics",summary:"The user's statistics",nativeType:"PostStatisticsResponse"},{type:"userTagRequestResponse",name:"tags",summary:"The user's tags",isCollection:!0,nativeType:"Dictionary<string, UserTagRequestResponse>"},{type:"userBadgeRequestResponse",name:"badges",summary:"(Deprecated) The user's badges",isCollection:!0,nativeType:"Dictionary<string, UserBadgeRequestResponse>"},{type:"userAffiliationResponse",name:"affiliations",summary:"The user's affiliations",isArray:!0,nativeType:"List<UserAffiliationResponse>"},{type:"divisionResponse",name:"divisions",summary:"The user's divisions",isArray:!0,nativeType:"List<DivisionResponse>"},{type:"userChannelResponse",name:"channels",summary:"The user's channels",isArray:!0,nativeType:"List<UserChannelResponse>"},{type:"imageInfoResponse",name:"profilePictureImages",summary:"The user's profile picture images",isCollection:!0,nativeType:"Dictionary<CdnAssetImageSizeEnum, ImageInfoResponse>"},{type:"string",name:"languages",summary:"The user's languages",isArray:!0,nativeType:"List<string>"},{type:"string",name:"primaryLanguage",summary:"The user's primary interface language",nativeType:"string"},{type:"userScheduleSettingsResponse",name:"scheduleSettings",summary:"The user's preferred auto schedule share settings",nativeType:"UserScheduleSettingsResponse"},{type:"bool",name:"postsRequireApproval",summary:"Whether the user's submitted posts require approval before being published",nativeType:"bool?"},{type:"bool",name:"isSso",summary:"Whether the user is setup to authenticate using SSO",nativeType:"bool?"},{type:"userPermissionsResponse",name:"permissions",summary:"A collection of a user's permissions",nativeType:"UserPermissionsResponse"},{type:"userPrivilegesResponse",name:"privileges",summary:"A collection of a user's privileges",nativeType:"UserPrivilegesResponse"},{type:"whitelistIdentifiersResponse",name:"identifiers",summary:"A list of identifiers that the user entered during registration",notes:"This property is read-only.",isArray:!0,nativeType:"IEnumerable<WhitelistIdentifiersResponse>"}]},userPointsAwardResponse:{name:"userPointsAwardResponse",summary:"Verification of awarded points",fields:[{type:"long",name:"userPointId",summary:"Confirmation that points were awarded",nativeType:"long"}]},userNotificationPreferenceResponse:{name:"userNotificationPreferenceResponse",summary:"A notification preference",fields:[{type:"string",name:"id",summary:"The preference ID",nativeType:"string"},{type:"string",name:"displayName",summary:"The preference's display name",nativeType:"string"},{type:"string",name:"description",summary:"The preference's description",nativeType:"string"},{type:"string",name:"category",summary:'The preference\'s category ("Email" or "Mobile")',nativeType:"string"},{type:"bool",name:"enabled",summary:"Is the preference enabled?",nativeType:"bool"}]},userNotificationPreferencesResponse:{name:"userNotificationPreferencesResponse",summary:"The user's notification preferences",fields:[{type:"long",name:"id",summary:"The user ID",nativeType:"long"},{type:"userNotificationPreferenceResponse",name:"preferences",summary:"The user's notification preferences",isArray:!0,nativeType:"List<UserNotificationPreferenceResponse>"},{type:"bool",name:"subscribeToSms",summary:"Is the user subscribed to SMS text notifications?",notes:"SMS support requires a Twilio account.  Please contact your account manager for details on this feature.",nativeType:"bool?"},{type:"string",name:"smsPhoneNumber",summary:"The phone number that SMS messages will be sent to",nativeType:"string"},{type:"bool",name:"smsVerified",summary:"Has the SMS phone number been verified?",nativeType:"bool?"},{type:"bool",name:"subscribeToEmails",summary:"(Deprecated.  Use the Preferences field.)  Is the user subscribed to email?",nativeType:"bool?"},{type:"bool",name:"subscribeToDigests",summary:"(Deprecated.  Use the Preferences field.)  Is the user subscribed to regular digests?",nativeType:"bool?"},{type:"bool",name:"subscribeToShareFollowup",summary:"(Deprecated.  Use the Preferences field.)  Is the user subscribed to share followups?",nativeType:"bool?"}]},usersResponse:{name:"usersResponse",summary:"A collection of users",fields:[{type:"userRequestResponse",name:"users",summary:"The list of users",isArray:!0,nativeType:"IEnumerable<UserRequestResponse>"},{type:"int",name:"total",summary:"The total number of users in the group",nativeType:"int"},{type:"int",name:"next",summary:"The starting index of the next page of users",notes:"This value can be used as the 'Skip' property in the next request.",nativeType:"int?"}]},userScheduleSettingsResponse:{name:"userScheduleSettingsResponse",summary:"A user's scheduled sharing preferences",fields:[{type:"dayOfWeek",name:"days",summary:"The preferred days to share on",isArray:!0,nativeType:"IEnumerable<DayOfWeek>"},{type:"string",name:"times",summary:"The preferred times to share on",isArray:!0,nativeType:"IEnumerable<string>"}]},userAffiliationsRequestResponse:{name:"userAffiliationsRequestResponse",summary:"A user's affiliations",fields:[{type:"userAffiliationResponse",name:"affiliations",summary:"The list of the user's affiliations",isArray:!0,nativeType:"IEnumerable<UserAffiliationResponse>"}]},userAffiliationResponse:{name:"userAffiliationResponse",summary:"A user affiliation",fields:[{type:"affiliationQuestionResponse",name:"question",summary:"The question that the user answered",nativeType:"AffiliationQuestionResponse"},{type:"affiliationAnswerResponse",name:"answer",summary:"The user's answer to the question",nativeType:"AffiliationAnswerResponse"}]},affiliationAnswerResponse:{name:"affiliationAnswerResponse",summary:"An affiliation answer",fields:[{type:"long",name:"answerId",summary:"The answer ID",nativeType:"long"},{type:"string",name:"answer",summary:"The answer",nativeType:"string"},{type:"double",name:"score",summary:"The score, if provided",nativeType:"double?"},{type:"string",name:"freeText",summary:"Text for questions with FreeText question type",nativeType:"string"},{type:"bool",name:"declineToAnswer",summary:"If set, this is the answer signifying that a user declined to answer the question.",notes:"Use this answer only when the user sees the question but decides not to answer.",nativeType:"bool?"},{type:"long",name:"position",summary:"The answer's sorting position",nativeType:"long"}]},affiliationQuestionResponse:{name:"affiliationQuestionResponse",summary:"An affiliation question",fields:[{type:"long",name:"questionId",summary:"The question ID",nativeType:"long"},{type:"string",name:"name",summary:"The question",nativeType:"string"},{type:"int",name:"scorePosition",summary:"The question's sorting position",nativeType:"int"},{type:"string",name:"description",summary:"The question's description",nativeType:"string"},{type:"profileQuestionTypeEnum",name:"questionType",summary:"The question's type",nativeType:"ProfileQuestionTypeEnum"},{type:"bool",name:"required",summary:"Whether the question has to be answered to register",nativeType:"bool"},{type:"bool",name:"isPubliclyVisible",nativeType:"bool"}]},userChannelsResponse:{name:"userChannelsResponse",summary:"A list of a user's channels",fields:[{type:"userChannelResponse",name:"channels",summary:"The user's channels",isArray:!0,nativeType:"List<UserChannelResponse>"}]},userChannelResponse:{name:"userChannelResponse",summary:"A user channel.",notes:"Represents a connection to a social provider.",fields:[{type:"long",name:"userChannelId",summary:"The internal user channel ID",nativeType:"long"},{type:"long",name:"userId",summary:"The internal user ID",nativeType:"long"},{type:"channelTypeEnum",name:"provider",summary:"The provider type",nativeType:"ChannelTypeEnum"},{type:"string",name:"name",summary:"The user's name on the social provider",nativeType:"string"},{type:"string",name:"displayName",summary:"The user's display name on the social provider",nativeType:"string"},{type:"string",name:"providerUserId",summary:"The provider's user ID",nativeType:"string"},{type:"userChannelStatusEnum",name:"status",summary:"The channel's status",nativeType:"UserChannelStatusEnum"},{type:"string",name:"url",summary:"The URL for the channel",nativeType:"string"},{type:"int",name:"friends",summary:"The number of friends the user has on the channel",nativeType:"int"},{type:"int",name:"followers",summary:"The number of followers the user has on the channel",nativeType:"int"},{type:"int",name:"following",summary:"The number of people the user is following on the channel",nativeType:"int"},{type:"int",name:"posts",summary:"The number of posts the user has made on the channel.",notes:"Includes all posts, not just those made through VoiceStorm.",nativeType:"int"},{type:"int",name:"views",summary:"The number of views the user has on the channel",nativeType:"int"},{type:"long",name:"pointBalance",summary:"The point balance of the user on the channel",nativeType:"long"},{type:"string",name:"sourceDisplayName",summary:"The display name of the user channel when used as a content source",nativeType:"string"},{type:"int",name:"reach",summary:"The user's reach on the channel",nativeType:"int"},{type:"bool",name:"sharable",summary:"Whether the channel supports sharing",nativeType:"bool"},{type:"bool",name:"sharingDefault",summary:"Whether the channel is preselected for sharing",nativeType:"bool"},{type:"bool",name:"authRequired",summary:"Whether the channel's credentials need to be renewed",nativeType:"bool"},{type:"postStatisticsResponse",name:"statistics",summary:"Aggregate share statistics for the chanel",nativeType:"PostStatisticsResponse"},{type:"imageInfoResponse",name:"profilePictureImages",summary:"The profile picture images for the channel",isCollection:!0,nativeType:"Dictionary<CdnAssetImageSizeEnum, ImageInfoResponse>"}]},userPointResponse:{name:"userPointResponse",summary:"A user point record",fields:[{type:"long",name:"userPointId",summary:"The ID of this point record",nativeType:"long"},{type:"long",name:"userId",summary:"The user ID",nativeType:"long"},{type:"long",name:"userChannelId",summary:"The ID of the user channel that earned the points",nativeType:"long?"},{type:"string",name:"objectId",summary:"The ID of the object that earned the points.",notes:"Usually the share.",nativeType:"string"},{type:"string",name:"pointSourceObjectId",summary:"The ID of the object that was the source of the points.",notes:"Usually the post or activity.",nativeType:"string"},{type:"transactionTypeEnum",name:"transactionType",summary:"The transaction type, which indicates the type of point award, redemption, or deduction",nativeType:"TransactionTypeEnum"},{type:"bool",name:"isRedemption",summary:"Indicates if this point record is for a redemption (rather than an award or deduction)",nativeType:"bool?"},{type:"decimal",name:"pointValue",summary:"The value of the points",nativeType:"Decimal"},{type:"string",name:"description",summary:"A user-visible description of the points",nativeType:"string"},{type:"dateTime",name:"modifiedDate",summary:"Indicates when the points were earned or redeemed",nativeType:"DateTime"},{type:"string",name:"apiPointType",summary:"A type specified by the API caller who awarded the points",nativeType:"string"},{type:"string",name:"apiPointInfo",summary:"A JSON blob specified by the API caller.",notes:"The system treats this opaquely.",nativeType:"string"}]},userPointsResponse:{name:"userPointsResponse",summary:"A collection of point records for a user",fields:[{type:"userPointResponse",name:"points",summary:"The list of point records",isArray:!0,nativeType:"IEnumerable<UserPointResponse>"},{type:"int",name:"total",summary:"The total number of point records",nativeType:"int"},{type:"int",name:"next",summary:"The start index of the next page of point records",nativeType:"int?"}]},userSuggestedShareTimeResponse:{name:"userSuggestedShareTimeResponse",fields:[{type:"string",name:"suggestedTime",summary:"Suggested share time that would be optimal based on the current times",nativeType:"string"}]},userPermissionsResponse:{name:"userPermissionsResponse",summary:"A manager's permissions",notes:"Permissions are currently only assigned to managers. If divisions are enabled for the community, a manager's permissions are restricted to a specific set of divisions defined by the community manager.",fields:[{type:"bool",name:"viewBroadcast",summary:"Allows the manager to view broadcasts",nativeType:"bool"},{type:"bool",name:"listBroadcast",summary:"Allows the manager to view lists of broadcasts",nativeType:"bool"},{type:"bool",name:"editBroadcast",summary:"Allows the manager to create and edit broadcasts",nativeType:"bool"},{type:"bool",name:"viewBroadcastStats",summary:"Allows the manager to view broadcast stats",nativeType:"bool"},{type:"bool",name:"viewPost",summary:"Allows the manager to view posts",nativeType:"bool"},{type:"bool",name:"listPost",summary:"Allows the manager to view lists of posts",nativeType:"bool"},{type:"bool",name:"editPost",summary:"Allows the manager to create and edit posts",nativeType:"bool"},{type:"bool",name:"viewPostStats",summary:"Allows the manager to view post stats",nativeType:"bool"},{type:"bool",name:"viewSurvey",summary:"Allows the manager to view surveys",nativeType:"bool"},{type:"bool",name:"listSurvey",summary:"Allows the manager to view lists of surveys",nativeType:"bool"},{type:"bool",name:"editSurvey",summary:"Allows the manager to create and edit surveys",nativeType:"bool"},{type:"bool",name:"communitySettings",summary:"Allows the manager to view and edit community settings",nativeType:"bool"}]},userPrivilegesResponse:{name:"userPrivilegesResponse",summary:"A user's privileges",notes:"Privileges define what a user can and cannot do within the community.",fields:[{type:"bool",name:"canSubmitPosts",summary:"Indicates if the user has the ability to submit posts, based on their privileges and the community settings",nativeType:"bool"},{type:"bool",name:"canSharePosts",summary:"Indicates if the user has the ability to share posts, based on their privileges and the community settings",nativeType:"bool"},{type:"bool",name:"canCommentPosts",summary:"Indicates if the user has the ability to comment and like posts, based on their privileges and the community settings",nativeType:"bool"},{type:"bool",name:"canManageCommunity",summary:"Indicates if the user is a manager within community, based on their privileges and the community settings",nativeType:"bool"},{type:"bool",name:"canManageOrganization",summary:"Indicates if the user has the ability to communicate with direct and indirect reports within the community, based on their privileges and the community settings",nativeType:"bool"}]},typeAheadResponse:{name:"typeAheadResponse",summary:"The results of a typeahead search",fields:[{type:"typeAheadItemResponse",name:"results",summary:"The list of typeahead results",isArray:!0,nativeType:"List<TypeAheadItemResponse>"}]},typeAheadItemResponse:{name:"typeAheadItemResponse",summary:"A typeahead result",fields:[{type:"string",name:"id",summary:"The ID of the result",nativeType:"string"},{type:"string",name:"name",summary:"The name (fragment) of the result",nativeType:"string"},{type:"string",name:"email",summary:"The email of the result",nativeType:"string"},{type:"searchRequestResponseType",name:"type",summary:"The type of result",nativeType:"SearchRequestResponseType"},{type:"imageInfoResponse",name:"images",summary:"The user's profile picture images",isCollection:!0,nativeType:"Dictionary<CdnAssetImageSizeEnum, ImageInfoResponse>"},{type:"bool",name:"isWhitelisted",summary:"Indicates if the provided email address can be used.",notes:'For "Email" types, if the domain is not on a whitelist, the email will be blocked, and cannot be messaged.',nativeType:"bool?"},{type:"string",name:"provider",summary:"The social provider from which the post originated (e.g., Facebook, Twitter).",notes:'This specifies where the post was originally found.  Use "InApp" for unique posts or user-submitted original content.',nativeType:"string"}],sdkName:"TypeAheadResult"},updateUserPrivilegesResponse:{name:"updateUserPrivilegesResponse",summary:"A detailed review of updates, by privilege, for the update request",fields:[{type:"bool",name:"successfulChanges",summary:"A list of each successfully changed privilege and its new state",isCollection:!0,nativeType:"Dictionary<string, bool>"},{type:"string",name:"failedChanges",summary:"A list of each failed privilege and a message detailing the error",isCollection:!0,nativeType:"Dictionary<string, string>"},{type:"string",name:"updateStatus",summary:"Overall status of the update request",nativeType:"string"}]},searchRequestResponse:{name:"searchRequestResponse",summary:"A search result",fields:[{type:"searchRequestResponseType",name:"type",summary:"The type of result",nativeType:"SearchRequestResponseType"},{type:"string",name:"match",summary:"The text that matched the search term",nativeType:"string"},{type:"postResponse",name:"post",summary:"The post matching the search term",nativeType:"PostResponse"},{type:"userRequestResponse",name:"user",summary:"The user matching the search term",nativeType:"UserRequestResponse"}],sdkName:"SearchResult"}},enums:{organizationalSearchTypeEnum:{name:"organizationalSearchTypeEnum",summary:"",fields:{DirectReports:{name:"DirectReports",summary:"Direct reports only."},ExtendedReports:{name:"ExtendedReports",summary:"Direct reports and any members that directly report to them."},FullOrganization:{name:"FullOrganization",summary:"All members below the selected manager."}}},allowOrRequireEnum:{name:"allowOrRequireEnum",summary:"",fields:{Disabled:{name:"Disabled",summary:"User selection is disabled and all values will be ignored."},Optional:{name:"Optional",summary:"User selection is optional."},Required:{name:"Required",summary:"User selection is required. Missing values will result in an error."}}},conversationTypeEnum:{name:"conversationTypeEnum",summary:"",fields:{ManagerToMember:{name:"ManagerToMember",summary:"Used when a member is communicating with the community managers."},MemberToMember:{name:"MemberToMember",summary:"Used when a member is messaging another member directly."}}},commentVisibilityStatus:{name:"commentVisibilityStatus",summary:"",fields:{Visible:{name:"Visible",summary:"The comment is visible to all depending on community settings."},MemberDeleted:{name:"MemberDeleted",summary:"The comment was deleted by the commenting member."},BlockedByManager:{name:"BlockedByManager",summary:"The comment was blocked by a manager and is no longer visible to the community."}}},userActivitySourceEnum:{name:"userActivitySourceEnum",summary:"",fields:{Unknown:{name:"Unknown",summary:""},Web:{name:"Web",summary:""},DesktopWeb:{name:"DesktopWeb",summary:""},MobileWeb:{name:"MobileWeb",summary:""},IOS:{name:"IOS",summary:""},Android:{name:"Android",summary:""},ManagerApp:{name:"ManagerApp",summary:""},Internal:{name:"Internal",summary:""},SelfService:{name:"SelfService",summary:""},Api:{name:"Api",summary:""},PublicApi:{name:"PublicApi",summary:""},SMS:{name:"SMS",summary:""},Salesforce:{name:"Salesforce",summary:""},Jive:{name:"Jive",summary:""},Migrated:{name:"Migrated",summary:""},SapJam:{name:"SapJam",summary:""},FacebookMessenger:{name:"FacebookMessenger",summary:""},All:{name:"All",summary:""}}},userActivityReasonEnum:{name:"userActivityReasonEnum",summary:"",fields:{Unknown:{name:"Unknown",summary:""},Broadcast:{name:"Broadcast",summary:""},Notification:{name:"Notification",summary:""},SMS:{name:"SMS",summary:""},Organic:{name:"Organic",summary:""},Digest:{name:"Digest",summary:""},ShareFollowup:{name:"ShareFollowup",summary:""},PostApproval:{name:"PostApproval",summary:""},InactiveMemberRetention:{name:"InactiveMemberRetention",summary:""},MessageAlert:{name:"MessageAlert",summary:""},UserMention:{name:"UserMention",summary:""},Recommendation:{name:"Recommendation",summary:""}}},mediaViewEventTypeEnum:{name:"mediaViewEventTypeEnum",summary:"",fields:{None:{name:"None",summary:""},PlaybackStarted:{name:"PlaybackStarted",summary:""},PlaybackPaused:{name:"PlaybackPaused",summary:""},PlaybackEnded:{name:"PlaybackEnded",summary:""},PlaybackStopped:{name:"PlaybackStopped",summary:""},PlaybackTwentyFivePercent:{name:"PlaybackTwentyFivePercent",summary:""},PlaybackFiftyPercent:{name:"PlaybackFiftyPercent",summary:""},PlaybackSeventyFivePercent:{name:"PlaybackSeventyFivePercent",summary:""},PlaybackSeekedForward:{name:"PlaybackSeekedForward",summary:""},PlaybackSeekedBackward:{name:"PlaybackSeekedBackward",summary:""}}},leaderboardSortModeEnum:{name:"leaderboardSortModeEnum",summary:"",fields:{Rank:{name:"Rank",summary:"Sorts the leaderboard by user rank"},JoinDateDescending:{name:"JoinDateDescending",summary:"Sorts the leaderboard by user join date; newest users first."},AlphabeticalByUserName:{name:"AlphabeticalByUserName",summary:"Sorts the leaderboard alphabetically by username."}}},leaderboardPrivacySettingEnum:{name:"leaderboardPrivacySettingEnum",summary:"",fields:{Public:{name:"Public",summary:"Everyone may view the leaderboard."},AllMembers:{name:"AllMembers",summary:"All members of the community may view this leaderboard."},ParticipantsOnly:{name:"ParticipantsOnly",summary:"Only members participating in the leaderboard may view it."}}},leaderboardRankingThresholdTypeEnum:{name:"leaderboardRankingThresholdTypeEnum",summary:"",fields:{None:{name:"None",summary:""},Top:{name:"Top",summary:""},Bottom:{name:"Bottom",summary:""}}},durationEnum:{name:"durationEnum",summary:"",fields:{None:{name:"None",summary:""},AllTime:{name:"AllTime",summary:""},Daily:{name:"Daily",summary:""},Weekly:{name:"Weekly",summary:""},Monthly:{name:"Monthly",summary:""},Quarterly:{name:"Quarterly",summary:""},Yearly:{name:"Yearly",summary:""},Reset:{name:"Reset",summary:""}}},providerListTypeEnum:{name:"providerListTypeEnum",summary:"",fields:{AddChannel:{name:"AddChannel",summary:"Users are able to add this type of provider as a channel."},LoginRegistration:{name:"LoginRegistration",summary:"Users are able to sign in with this type of provider."}}},providerReactionTypeEnum:{name:"providerReactionTypeEnum",summary:"",fields:{Comment:{name:"Comment",summary:""},Share:{name:"Share",summary:""},Like:{name:"Like",summary:""}}},searchRequestType:{name:"searchRequestType",summary:"",fields:{Post:{name:"Post",summary:""},User:{name:"User",summary:""},Group:{name:"Group",summary:""},Tag:{name:"Tag",summary:""},Email:{name:"Email",summary:""},All:{name:"All",summary:""}}},feedCommentVisibilityStatusEnum:{name:"feedCommentVisibilityStatusEnum",summary:"",fields:{Everywhere:{name:"Everywhere",summary:""},HideOnArticleDetails:{name:"HideOnArticleDetails",summary:""},Archived:{name:"Archived",summary:""},BlockedByManager:{name:"BlockedByManager",summary:""}}},scheduleTypeEnum:{name:"scheduleTypeEnum",summary:"",fields:{Now:{name:"Now",summary:""},Manual:{name:"Manual",summary:""},Auto:{name:"Auto",summary:""}}},statusEnum:{name:"statusEnum",summary:"",fields:{Active:{name:"Active",summary:"The post is active and available to the community."},Archived:{name:"Archived",summary:"The post has been archived and is not available to the community."}}},approvalStateEnum:{name:"approvalStateEnum",summary:"Summary of Approval State",notes:"Notes about Approval State",fields:{Pending:{name:"Pending",summary:"The post is pending approval",notes:"The post is pending approval"},Published:{name:"Published",summary:"The post is approved and published",notes:"The post is approved and published"},Excluded:{name:"Excluded",summary:"The post is excluded",notes:"The post is excluded"}}},articleStreamSortOrderEnum:{name:"articleStreamSortOrderEnum",
summary:"",fields:{PubDateDesc:{name:"PubDateDesc",summary:""},Title:{name:"Title",summary:""},Popularity:{name:"Popularity",summary:""}}},surveyStatusEnum:{name:"surveyStatusEnum",summary:"",fields:{Created:{name:"Created",summary:"The survey has been created. The recipients of the survey have not been resolved at this time."},Active:{name:"Active",summary:"The survey is currently active. The recipients have been resolved and users are able to submit their responses."},Finished:{name:"Finished",summary:"The survey has ended and users are no longer able to submit responses."},Archived:{name:"Archived",summary:"The survey has been archived."}}},surveyType:{name:"surveyType",summary:"",fields:{Standard:{name:"Standard",summary:"Standard survey type that consists of one or more questions."},QuickPoll:{name:"QuickPoll",summary:"A special type of survey that is restricted to a single multiple choice question."}}},surveyQuestionTypeEnum:{name:"surveyQuestionTypeEnum",summary:"",fields:{FreeForm:{name:"FreeForm",summary:"Free form text answers are allowed. Only one answer can be submitted for this question type."},MultipleChoice:{name:"MultipleChoice",summary:"Only one answer can be submitted for multiple choice questions. This question type is typically displayed with radio buttons."},MultiSelect:{name:"MultiSelect",summary:"Multiple answers can be submitted for multi-select questions. This question type is typically displayed with check boxes."},Ranking:{name:"Ranking",summary:"Only one answer can be submitted for rating questions."},Rating:{name:"Rating",summary:"Rating questions require all answers to be submitted in the order in which the user rates them."},NetPromoterScore:{name:"NetPromoterScore",summary:"Net promoter score questions require a single answer to be submitted."}}},channelTypeEnum:{name:"channelTypeEnum",summary:"",fields:{None:{name:"None",summary:""},Twitter:{name:"Twitter",summary:""},Blog:{name:"Blog",summary:"Custom blog channel, not one of the known providers."},Facebook:{name:"Facebook",summary:""},Yelp:{name:"Yelp",summary:""},Flickr:{name:"Flickr",summary:""},Foursquare:{name:"Foursquare",summary:""},SMS:{name:"SMS",summary:""},WordPress:{name:"WordPress",summary:""},TypePad:{name:"TypePad",summary:""},LiveJournal:{name:"LiveJournal",summary:""},Blogger:{name:"Blogger",summary:""},FacebookPage:{name:"FacebookPage",summary:""},GenericUrl:{name:"GenericUrl",summary:""},YouTube:{name:"YouTube",summary:""},SyndicatedUrl:{name:"SyndicatedUrl",summary:""},Email:{name:"Email",summary:""},Tumblr:{name:"Tumblr",summary:""},GooglePlus:{name:"GooglePlus",summary:""},SquareSpace:{name:"SquareSpace",summary:""},LinkedIn:{name:"LinkedIn",summary:""},Posterous:{name:"Posterous",summary:""},Joomla:{name:"Joomla",summary:""},Drupal:{name:"Drupal",summary:""},MovableType:{name:"MovableType",summary:""},Reddit:{name:"Reddit",summary:""},VK:{name:"VK",summary:""},Picasa:{name:"Picasa",summary:""},Vimeo:{name:"Vimeo",summary:""},Instagram:{name:"Instagram",summary:""},Sonico:{name:"Sonico",summary:""},Odnoklassniki:{name:"Odnoklassniki",summary:""},GetGlue:{name:"GetGlue",summary:""},LastFM:{name:"LastFM",summary:""},BazaarVoice:{name:"BazaarVoice",summary:""},LinkedInGroup:{name:"LinkedInGroup",summary:""},Chatter:{name:"Chatter",summary:""},Weibo:{name:"Weibo",summary:""},Tencent:{name:"Tencent",summary:""},Pinterest:{name:"Pinterest",summary:""},LinkedInPage:{name:"LinkedInPage",summary:""},CutAndPaste:{name:"CutAndPaste",summary:""},Bitly:{name:"Bitly",summary:""},Jive:{name:"Jive",summary:""},GoogleContact:{name:"GoogleContact",summary:""},Office365:{name:"Office365",summary:""},JivePlace:{name:"JivePlace",summary:""},Xing:{name:"Xing",summary:""},SapJam:{name:"SapJam",summary:""},SalesforceSocialStudio:{name:"SalesforceSocialStudio",summary:""},Slack:{name:"Slack",summary:""},Yammer:{name:"Yammer",summary:""},SmartContent:{name:"SmartContent",summary:""}}},articleTypeEnum:{name:"articleTypeEnum",summary:"",fields:{Text:{name:"Text",summary:"The post primarily consists of text content."},Video:{name:"Video",summary:"The post is focused on video content."}}},articleSourceTypeEnum:{name:"articleSourceTypeEnum",summary:"",fields:{Unknown:{name:"Unknown",summary:""},Member:{name:"Member",summary:""},Manager:{name:"Manager",summary:""},Brand:{name:"Brand",summary:""},ThirdParty:{name:"ThirdParty",summary:""}}},articleBylineTypeEnum:{name:"articleBylineTypeEnum",summary:"",fields:{Author:{name:"Author",summary:"The post byline should contain the author of the post content."},Source:{name:"Source",summary:"The post byline should contain the name of content source."},Hidden:{name:"Hidden",summary:"The author of the post content should not be displayed."}}},displayModeEnum:{name:"displayModeEnum",summary:"",fields:{DisplayInApp:{name:"DisplayInApp",summary:"The post should be rendered internally using a widget or custom formatting."},OpenExternally:{name:"OpenExternally",summary:"The post should be rendered by navigating to the original source of the post content. "}}},notificationEventType:{name:"notificationEventType",summary:"",fields:{Unknown:{name:"Unknown",summary:""},ArticleBroadcast:{name:"ArticleBroadcast",summary:""},NewManager:{name:"NewManager",summary:""},InvitationFromMember:{name:"InvitationFromMember",summary:""},MemberDigest:{name:"MemberDigest",summary:""},MemberWelcome:{name:"MemberWelcome",summary:""},MessageAlert:{name:"MessageAlert",summary:""},ResetPassword:{name:"ResetPassword",summary:""},SubmitByEmailError:{name:"SubmitByEmailError",summary:""},SubmitByEmailSuccess:{name:"SubmitByEmailSuccess",summary:""},VerifyAccount:{name:"VerifyAccount",summary:""},ShareFollowup:{name:"ShareFollowup",summary:""},GlobalLayout:{name:"GlobalLayout",summary:""},LoginGrantRequest:{name:"LoginGrantRequest",summary:""},UpdateMessage:{name:"UpdateMessage",summary:""},CompleteRegistrationReminder:{name:"CompleteRegistrationReminder",summary:""},InvitationReminder:{name:"InvitationReminder",summary:""},ShareByEmail:{name:"ShareByEmail",summary:""},CommunityStatisticsSummary:{name:"CommunityStatisticsSummary",summary:""},PostApproval:{name:"PostApproval",summary:""},PostSubmit:{name:"PostSubmit",summary:""},InactiveMemberRetention:{name:"InactiveMemberRetention",summary:""},UserCreationComplete:{name:"UserCreationComplete",summary:""},ChatPush:{name:"ChatPush",summary:""},ArticleCommentLike:{name:"ArticleCommentLike",summary:""},ArticleCommentReply:{name:"ArticleCommentReply",summary:""},UserMention:{name:"UserMention",summary:""},MentionPush:{name:"MentionPush",summary:""},SmsVerification:{name:"SmsVerification",summary:""},FacebookMessengerOptOut:{name:"FacebookMessengerOptOut",summary:""},NewComments:{name:"NewComments",summary:""},ManualApproval:{name:"ManualApproval"}}},userNotificationPriorityEnum:{name:"userNotificationPriorityEnum",summary:"",fields:{Low:{name:"Low",summary:""},Normal:{name:"Normal",summary:""},High:{name:"High",summary:""},Urgent:{name:"Urgent",summary:""}}},userNotificationState:{name:"userNotificationState",summary:"",fields:{New:{name:"New",summary:""},Acknowledged:{name:"Acknowledged",summary:""},Read:{name:"Read",summary:""},Hidden:{name:"Hidden",summary:""}}},notificationActionSource:{name:"notificationActionSource",summary:"",fields:{Default:{name:"Default",summary:"Use this for all instances except for mobile push notifications."},NotificationBar:{name:"NotificationBar",summary:"Use this whenever a user reads a notification after clicking on a mobile push notification."}}},userDisplayNameEnum:{name:"userDisplayNameEnum",summary:"",fields:{Full:{name:"Full",summary:""},Short:{name:"Short",summary:""}}},userStatusEnum:{name:"userStatusEnum",summary:"",fields:{New:{name:"New",summary:"New user who has not yet completed the onboarding process."},Active:{name:"Active",summary:"Active user."},Archived:{name:"Archived",summary:"User has been deleted."},Suspended:{name:"Suspended",summary:"User has been suspended by a manager."},Preregistered:{name:"Preregistered",summary:"User has been invited/imported but has not yet claimed the account."},PendingApproval:{name:"PendingApproval",summary:"User who failed to enter valid Identifier values, and is awaiting manager approval"},Rejected:{name:"Rejected",summary:"User whose registration was rejected by a community manager"}}},dayOfWeek:{name:"dayOfWeek",summary:"",fields:{Sunday:{name:"Sunday",summary:"String representation for Monday."},Monday:{name:"Monday",summary:"String representation for Sunday."},Tuesday:{name:"Tuesday",summary:"String representation for Tuesday."},Wednesday:{name:"Wednesday",summary:"String representation for Wednesday."},Thursday:{name:"Thursday",summary:"String representation for Thursday."},Friday:{name:"Friday",summary:"String representation for Friday."},Saturday:{name:"Saturday",summary:"String representation for Saturday."}}},profileQuestionTypeEnum:{name:"profileQuestionTypeEnum",summary:"",fields:{SingleAnswer:{name:"SingleAnswer",summary:"Multiple choice question with only one answer allowed per user."},MultipleAnswer:{name:"MultipleAnswer",summary:"Multiple choice question with one or more answer allowed per user."},FreeText:{name:"FreeText",summary:"Open ended question with a text input for an aswer."}}},userChannelStatusEnum:{name:"userChannelStatusEnum",summary:"",fields:{Active:{name:"Active",summary:""},Archived:{name:"Archived",summary:""},AuthRequired:{name:"AuthRequired",summary:"The channel requires re-authentication."}}},transactionTypeEnum:{name:"transactionTypeEnum",summary:"",fields:{RewardEarnedForSharing:{name:"RewardEarnedForSharing",summary:"Awarded for sharing an item."},ManualAward:{name:"ManualAward",summary:"Manually awarded by a manager."},ApiAward:{name:"ApiAward",summary:"Awarded by the API."},ManualRedemption:{name:"ManualRedemption",summary:""},ManualDeduction:{name:"ManualDeduction",summary:""},FulfilledActivity:{name:"FulfilledActivity",summary:"Awarded when fulfilled."},RewardEarnedForArticleSubmit:{name:"RewardEarnedForArticleSubmit",summary:"Awarded for submitting an article."},RewardEarnedForArticlePublish:{name:"RewardEarnedForArticlePublish",summary:"Awarded for an article being published."},RewardEarnedForArticleClick:{name:"RewardEarnedForArticleClick",summary:"Awarded for clicking on an article."},RewardEarnedForSocialReaction:{name:"RewardEarnedForSocialReaction",summary:'Awarded for completing a social reaction, such as clicking "like."'},RewardEarnedForShareReaction:{name:"RewardEarnedForShareReaction",summary:"Awarded for recations recieved on a share."},RewardEarnedForRegistration:{name:"RewardEarnedForRegistration",summary:"Awarded for registration."},RewardEarnedForSurvey:{name:"RewardEarnedForSurvey",summary:"Awarded for completing a survey."},RewardEarnedForCuratedPost:{name:"RewardEarnedForCuratedPost",summary:""},RewardEarnedForSurveyV2:{name:"RewardEarnedForSurveyV2",summary:"Awarded for completing a survey."}}},searchRequestResponseType:{name:"searchRequestResponseType",summary:"",fields:{Post:{name:"Post",summary:""},User:{name:"User",summary:""},Group:{name:"Group",summary:""},Tag:{name:"Tag",summary:""},Email:{name:"Email",summary:""}}},userDefaultNotificationEnum:{name:"userDefaultNotificationEnum",summary:"",fields:{Immediately:{name:"Immediately",summary:"User will receive email notifications immediately."},AfterFirstLogin:{name:"AfterFirstLogin",summary:"User will receive email notifications after their first login."}}}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.widgetdocs={categories:{Broadcast:{name:"Broadcast",summary:"The Broadcast widgets display broadcasts."},Post:{name:"Post",summary:"The Post widgets display posts and allow signed-in users to share them using the VoiceStorm sharing dialog."},Profile:{name:"Profile",summary:"The Profile widgets allow a user to view and change aspects of his or her VoiceStorm profile. In VoiceStorm, your profile contains information about you, both public and private, your social channels, your photo, your notification preferences, and the ability to change your email login password. Many of these widgets are interactive and provide events you can listen to to update your view on the page. "},User:{name:"User",summary:"The User widgets display details about one or more users and their activity in VoiceStorm."}},widgets:{Broadcast:{name:"Broadcast",summary:"The Broadcast widget renders a single broadcast.",category:"Broadcast",hasImage:!1,obsolete:!1,options:{broadcastId:{name:"broadcastId",type:"long",summary:"ID of the broadcast you want to display.",default:"0",required:!0,localizable:!1},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},dateFormat:{name:"dateFormat",type:"string",summary:"Format string used to build the date of the broadcast was sent. See [Date and Time Format Strings|#date-time-formatting] for details.",default:"'ll'",required:!1,localizable:!1},datetimeRenderer:{name:"datetimeRenderer",type:"function",summary:"A function called for each date displayed by the widget. This function provides an alternative to using the timezoneOffset option, allowing you to fine tune how dates and times are represented by the widget. See [Date and Time Callback|#date-time-callback] for details.",default:"null",required:!1,localizable:!1},priorityDisplayLow:{name:"priorityDisplayLow",type:"string",summary:"Label to indicate a low priority broadcast.",default:"'Low'",required:!1,localizable:!0},priorityDisplayNormal:{name:"priorityDisplayNormal",type:"string",summary:"Label to indicate a normal priority broadcast.",default:"'Normal'",required:!1,localizable:!0},priorityDisplayHigh:{name:"priorityDisplayHigh",type:"string",summary:"Label to indicate a high priority broadcast.",default:"'High'",required:!1,localizable:!0},priorityDisplayUrgent:{name:"priorityDisplayUrgent",type:"string",summary:"Label to indicate an urgent priority broadcast.",default:"'Urgent'",required:!1,localizable:!0},imgSize:{name:"imgSize",type:"string",summary:"Size of attached broadcast image to include with the broadcast, if available. See [Post Image Sizes|#post-image-sizes] for details.",default:"'Box320'",required:!1,localizable:!1},buttonView:{name:"buttonView",type:"string",summary:"Label on the button to view a post attached to the broadcast.",default:"'View'",required:!1,localizable:!0},shareButtonText:{name:"shareButtonText",type:"string",summary:"Label on the button to share a post attached to the broadcast.",default:"'Share'",required:!1,localizable:!0},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating whether share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},includeDocument:{name:"includeDocument",type:"bool",summary:"A flag indicating whether documents attached to the broadcast should be shown if the broadcast has documents.",default:"true",required:!1,localizable:!1},imageAltText:{name:"imageAltText",type:"string",summary:"Alternative text describing the broadcast image attachment.",default:"'Image attachment'",required:!1,localizable:!0},buttonRead:{name:"buttonRead",type:"string",summary:"Label on the button to acknowledge the broadcast has been read.",default:"'Acknowledge'",required:!1,localizable:!0},labelRead:{name:"labelRead",type:"string",summary:"Label to indicate when the broadcast was acknowledged as read. See [Date and Time Format Strings|#date-time-formatting] for details.",default:"'[Acknowledgement sent on ]LL LT'",required:!1,localizable:!0},errorNotFound:{name:"errorNotFound",type:"string",summary:"Error shown when the broadcast does not exist or the logged in user does not have permission to view it.",default:"'Sorry, you are not the intended recipient of this broadcast.'",required:!1,localizable:!0},labelHome:{name:"labelHome",type:"string",summary:"Label on the link to return to the home page. This link is shown when there is an error.",default:"'Return to Community'",required:!1,localizable:!0},documentsTitleText:{name:"documentsTitleText",type:"string",summary:"Title for documents section.",default:'"Documents"',required:!1,localizable:!0},labelStartSurvey:{name:"labelStartSurvey",type:"string",summary:"Label on the link that takes a user to the broadcasted survey.",default:'"Complete Survey"',required:!1,localizable:!0}},events:{"acknowledge.voicestorm.broadcast":{name:"acknowledge.voicestorm.broadcast",summary:"This event fires before a read confirmation is sent, indicating the user has read the broadcast.",hasResponse:!1,isPreventable:!0,helper:""},"acknowledged.voicestorm.broadcast":{name:"acknowledged.voicestorm.broadcast",summary:"This event fires after a read confirmation has been recorded.",hasResponse:!0,isPreventable:!1,helper:"broadcastAcknowledgedResponse"},"render.voicestorm.broadcast":{name:"render.voicestorm.broadcast",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.broadcast":{name:"rendered.voicestorm.broadcast",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"viewPost.voicestorm.broadcast":{name:"viewPost.voicestorm.broadcast",summary:"This event fires when the user clicks on the view link of broadcast post.",hasResponse:!1,isPreventable:!1,helper:""}}},Discussions:{name:"Discussions",summary:"The Discussions widget displays internal comments & likes on a post when internal discussion is enabled for the post. The widget allows users who are logged in and allowed to comment on posts to add comments to a post. The widget allows users who are logged in and allowed to comment on posts to like and reply to comments on a post.",category:"Post",hasImage:!1,obsolete:!1,options:{postId:{name:"postId",type:"guid",summary:"ID of the post whose internal comments you want to display.",default:"0",required:!0,localizable:!1},commentId:{name:"commentId",type:"long",summary:"Optional ID of a specific comment you want to target. If it is a reply to another comment, the parent comment will also be returned.",default:"0",required:!1,localizable:!1},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},dateFormat:{name:"dateFormat",type:"string",summary:"Format string used to build the date of each comment. See [Date and Time Format Strings|#date-time-formatting] for details.",default:"'l[,] LT'",required:!1,localizable:!1},datetimeRenderer:{name:"datetimeRenderer",type:"function",summary:"A function called for each date displayed by the widget. This function provides an alternative to using the timezoneOffset option, allowing you to fine tune how dates and times are represented by the widget. See [Date and Time Callback|#date-time-callback] for details.",default:"null",required:!1,localizable:!1},buttonLike:{name:"buttonLike",type:"string",summary:"Label on the button to like a comment.",default:"'Like'",required:!1,localizable:!0},buttonUnlike:{name:"buttonUnlike",type:"string",summary:"Label on the button to remove like from a comment.",default:"'Unlike'",required:!1,localizable:!0},buttonReply:{name:"buttonReply",type:"string",summary:"Label on the button to reply to a comment.",default:"'Reply'",required:!1,localizable:!0},buttonSubmit:{name:"buttonSubmit",type:"string",summary:"Label on the button to submit a comment or reply.",default:"'Submit'",required:!1,localizable:!0},buttonCancel:{name:"buttonCancel",type:"string",summary:"Label on the button to cancel a reply.",default:"'Cancel'",required:!1,localizable:!0},labelShowReply:{name:"labelShowReply",type:"string",summary:"Label on the link to show when there is only a single reply to a comment.",default:"'Show 1 Reply'",required:!1,localizable:!0},labelShowReplies:{name:"labelShowReplies",type:"string",summary:"Label on the link to show replies to a comment. Include {0} to show number of replies available.",default:"'Show {0} Replies'",required:!1,localizable:!0},labelShowComments:{name:"labelShowComments",type:"string",summary:"Label on the link to show more comments.",default:"'Show Earlier Comments'",required:!1,localizable:!0},labelShowOtherComments:{name:"labelShowOtherComments",type:"string",summary:"Label on the link to display the rest of the comments when a specific comment has been targeted.",default:"'Show Other Comments'",required:!1,localizable:!0},labelErrorReplies:{name:"labelErrorReplies",type:"string",summary:"Error to show when replies to a comment cannot be loaded.",default:"'Unable to load replies'",required:!1,localizable:!0},labelNoComments:{name:"labelNoComments",type:"string",summary:"Message to show when a post has no comments.",default:"'There are no comments on this post.'",required:!1,localizable:!0},labelUserMention:{name:"labelUserMention",type:"string",summary:"Character or label preceding username mentions. E.g. @John Doe.",default:"'@'",required:!1,localizable:!0},labelAddCommentPlaceholder:{name:"labelAddCommentPlaceholder",type:"string",summary:"Placeholder label inside the new comment input before the user has typed anything.",default:"'Add a Comment...'",required:!1,localizable:!0},labelCommentError:{name:"labelCommentError",type:"string",summary:"Error label to display when a targeted comment does not exist or cannot be loaded.",default:"'This comment cannot be loaded.'",required:!1,localizable:!0},labelCommentManagerRemoved:{name:"labelCommentManagerRemoved",type:"string",summary:"Label to display when attempting to view a comment that a manager has removed.",default:"'This comment has been removed by the community manager.'",required:!1,localizable:!0},labelCommentUserDeleted:{name:"labelCommentUserDeleted",type:"string",summary:"Label to display when attempting to view a comment that has been deleted by the comment's author.",default:"'This comment has been deleted.'",required:!1,localizable:!0}},events:{"render.voicestorm.discussions":{name:"render.voicestorm.discussions",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.discussions":{name:"rendered.voicestorm.discussions",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},PostComments:{name:"PostComments",summary:"The PostComments widget is replaced by the Discussions widget.",category:"Post",hasImage:!1,obsolete:!0,replacedBy:"Discussions",options:{},events:{}},RenderPost:{name:"RenderPost",summary:"The RenderPost widget generates a standard representation of a post with default styling you can customize. If you set the postId option, the widget will fetch the post to render. If you set the post option, the widget will render the value of that option.",category:"Post",hasImage:!0,obsolete:!1,options:{postId:{name:"postId",type:"guid",summary:"ID of the post to display. Note: Either post or postId must be set.",default:"null",required:!1,localizable:!1},post:{name:"post",type:"object",summary:"Post JavaScript object to display, such as a post returned from the [GET /v1/post|api#GET_v1_post] or [GET /v1/stream|api#GET_v1_stream] API methods. See [postResponse|api#postResponse_response] for details. Note: Either post or postId must be set.",default:"null",required:!1,localizable:!1},datetimeRenderer:{name:"datetimeRenderer",type:"function",summary:"A function called for each date displayed by the widget. This function provides an alternative to using the timezoneOffset option, allowing you to fine tune how dates and times are represented by the widget. See [Date and Time Callback|#date-time-callback] for details.",default:"null",required:!1,localizable:!1},imgSize:{name:"imgSize",type:"string",summary:"Size of post image to include with the post, if available. See [Post Image Sizes|#post-image-sizes] for details.",default:"'Box320'",required:!1,localizable:!1},imgMaxWidth:{name:"imgMaxWidth",type:"int",summary:"Maximum number of pixels wide a post image can be when displayed. If the actual image is wider then this maximum, the image is scaled down to fit this width (preserving aspect ratio). If null, post image width and height are used.",default:"null",required:!1,localizable:!1},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},includeShareButton:{name:"includeShareButton",type:"bool",summary:"A flag indicating whether a share button and/or reaction links should be shown if the post is sharable and the viewing user has permission to share posts.",default:"false",required:!1,localizable:!1},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating if share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},includeSummary:{name:"includeSummary",type:"bool",summary:"A flag indicating whether the widget should display the post description.",default:"true",required:!1,localizable:!1},includeContent:{name:"includeContent",type:"bool",summary:"A flag indicating whether the widget should display the post body.",default:"false",required:!1,localizable:!1},youtubeVideoWidth:{name:"youtubeVideoWidth",type:"int",summary:"Width, in pixels, of the video displayed when the post provider is YouTube.",default:"640",required:!1,localizable:!1},youtubeVideoHeight:{name:"youtubeVideoHeight",type:"int",summary:"Height, in pixels, of the video displayed when the post provider is YouTube.",default:"480",required:!1,localizable:!1},youtubeDisableFullScreen:{name:"youtubeDisableFullScreen",type:"bool",summary:"A flag indicating whether to disable the fullscreen option in an embedded Youtube video.",default:"false",required:!1,localizable:!1},youtubeEmbedFormat:{name:"youtubeEmbedFormat",type:"string",summary:"Format string used to render the video embed code when the post provider is YouTube. The string may contain simple HTML.",default:'\'<iframe width="$width" height="$height" src="//www.youtube.com/embed/$id?rel=0;wmode=transparent" frameborder="0" allowfullscreen></iframe>\'',required:!1,localizable:!1,helper:"youTubeEmbedOptions"},postLinkFormat:{name:"postLinkFormat",type:"string",summary:"Format string used to construct URLs that link to the full view of the post. If null or empty, the community default post URL format string will be used.",default:"''",required:!1,localizable:!1,helper:"postLinkFormatOptions"},conversationLinkFormat:{name:"conversationLinkFormat",type:"string",summary:"Format string used to construct a URL that links to the interface for messaging members. The URL will be the target of the messageLinkLabel item in the overflow menu, if the user is allowed to message other members.",default:"'/inbox?postId=$id'",required:!1,localizable:!1,helper:"conversationLinkFormatOptions"},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},includePostEmailLink:{name:"includePostEmailLink",type:"bool",summary:"A flag indicating whether the widget should provide an option to share this post via email, if this post is shareable.",default:"false",required:!1,localizable:!1},includePostShareLink:{name:"includePostShareLink",type:"bool",summary:"A flag indicating whether the widget should provide an option to share this post via a link, if this post is shareable.",default:"false",required:!1,localizable:!1},includePostMessageLink:{name:"includePostMessageLink",type:"bool",summary:"A flag indicating whether the widget should provide an option to share this post via a message, if messaging is enabled.",default:"true",required:!1,localizable:!1},showOverflowMenu:{name:"showOverflowMenu",type:"bool",summary:"A flag indicating whether the widget should show the overflow menu of additional options.",default:"true",required:!1,localizable:!1},showViewPost:{name:"showViewPost",type:"bool",summary:"A flag indicating whether the widget should include a view post link in the overflow menu.",default:"true",required:!1,localizable:!1},showDiscussionsLink:{name:"showDiscussionsLink",type:"bool",summary:"A flag indicating whether the widget should include a view discussions link in the overflow menu.",default:"false",required:!1,localizable:!1},loadingText:{name:"loadingText",type:"string",summary:"Message shown before a delayed action is displayed.",default:"'Loading...'",required:!1,localizable:!0},noteToMembersText:{name:"noteToMembersText",type:"string",summary:"Note to Members label.",default:"'Note to Members'",required:!1,localizable:!0},shareButtonText:{name:"shareButtonText",type:"string",summary:"Share button label.",default:"'Share'",required:!1,localizable:!0},earnPointsTextSingular:{name:"earnPointsTextSingular",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is 1.",default:"'Earn 1 point'",required:!1,localizable:!0},earnPointsTextPlural:{name:"earnPointsTextPlural",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is greater than 1. {0} is replaced by the number of points.",default:"'Earn {0} points'",required:!1,localizable:!0},totalSharesTextSingular:{name:"totalSharesTextSingular",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is 1.",default:"'1 total share'",required:!1,localizable:!0},totalSharesTextPlural:{name:"totalSharesTextPlural",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is greater than 1. {0} is replaced by the number of shares.",default:"'{0} total shares'",required:!1,localizable:!0},bylineText:{name:"bylineText",type:"string",summary:"Label preceeding the content byline.",default:"'by {0}'",required:!1,localizable:!0},alreadySharedText:{name:"alreadySharedText",type:"string",summary:"Label indicating the user has previously shared this post.",default:"'You have already shared this post.'",required:!1,localizable:!0},shareLimitText:{name:"shareLimitText",type:"string",summary:"Label indicating the user has reached the daily sharing limit.",default:"'You have reached your sharing limit for today.'",required:!1,localizable:!0},genericErrorText:{name:"genericErrorText",type:"string",summary:"Message shown when the post cannot be displayed.",default:"'Something went wrong.'",required:!1,localizable:!0},postedDateLabel:{name:"postedDateLabel",type:"string",summary:"Label displaying the date this post was posted. {0} is replaced by the formatted post startDate.",default:"'Posted {0}'",required:!1,localizable:!0},viewPostLabel:{name:"viewPostLabel",type:"string",summary:"Label on the overflow menu option to view this post.",default:"'View Post'",required:!1,localizable:!0},viewDiscussionsLabel:{name:"viewDiscussionsLabel",type:"string",summary:"Label on the overflow menu option to view the comments on this post.",default:"'View Discussions'",required:!1,localizable:!0},copyLinkLabel:{name:"copyLinkLabel",type:"string",summary:"Label on the overflow menu option to share this post via a link.",
default:"'Copy Link'",required:!1,localizable:!0},emailPostLabel:{name:"emailPostLabel",type:"string",summary:"Label on the overflow menu option to share this post via email.",default:"'Email Post'",required:!1,localizable:!0},messageLinkLabel:{name:"messageLinkLabel",type:"string",summary:"Label on the overflow menu option to share this post via a message.",default:"'Forward to Community Member'",required:!1,localizable:!0},includeDocument:{name:"includeDocument",type:"bool",summary:"A flag indicating whether documents attached to the post should be shown if the post has documents.",default:"true",required:!1,localizable:!1},documentsTitleText:{name:"documentsTitleText",type:"string",summary:"Title for documents section.",default:'"Documents"',required:!1,localizable:!0}},events:{"render.voicestorm.renderpost":{name:"render.voicestorm.renderpost",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.renderpost":{name:"rendered.voicestorm.renderpost",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},SelectList:{name:"SelectList",summary:"The SelectList widget generates an easy-to-use interface with default styling you can customize for choosing multiple selections. You attach the widget to an existing multiple-selection select element. After the SelectList is rendered, it hides the original select element, but keeps changes to the widget in-sync. Changes made to SelectList selections are immediately reflected in the original select element. Changes made to SelectList selections trigger the \"change\" event on the original select element. Any event listeners you've attached to that element continue to work. The genereated SelectList elements have no name, so their values will not participate in form posts, but since your original select element is kept in-sync with changes to the SelectList, it's values will be posted just as they were before rendering this widget.",category:"Post",hasImage:!0,obsolete:!1,options:{includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},prompt:{name:"prompt",type:"string",summary:"Label on the dropdown to prompt selection of an option to add.",default:"'Select an Item'",required:!1,localizable:!0}},events:{"render.voicestorm.selectlist":{name:"render.voicestorm.selectlist",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.selectlist":{name:"rendered.voicestorm.selectlist",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},ShareButton:{name:"ShareButton",summary:"The ShareButton widget displays a share button or reaction links for a post. By default, a share button is rendered for user-submitted posts and reaction links are rendered for social posts read from a social provider feed, if that social provider supports reactions. The ShareButton widget can also show sharing statistics along with the button.",category:"Post",hasImage:!0,obsolete:!1,options:{postId:{name:"postId",type:"guid",summary:"ID of the post to share. Note: Either post or postId must be set.",default:"null",required:!1,localizable:!1},post:{name:"post",type:"object",summary:"Post JavaScript object for the post to share, such as a post returned from the [GET /v1/post|api#GET_v1_post] or [GET /v1/stream|api#GET_v1_stream] API methods. See [postResponse|api#postResponse_response] for details. Note: Either post or postId must be set.",default:"null",required:!1,localizable:!1},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating whether share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},forceShareButton:{name:"forceShareButton",type:"bool",summary:"A flag indicating whether a share button should be rendered, even on social posts that support reactions. Set this flag to true to always render a share button instead of reactions.",default:"false",required:!1,localizable:!1},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},shareButtonText:{name:"shareButtonText",type:"string",summary:"Share button label.",default:"'Share'",required:!1,localizable:!0},earnPointsTextSingular:{name:"earnPointsTextSingular",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is 1.",default:"'Earn 1 point'",required:!1,localizable:!0},earnPointsTextPlural:{name:"earnPointsTextPlural",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is greater than 1. {0} is replaced by the number of points.",default:"'Earn {0} points'",required:!1,localizable:!0},totalSharesTextSingular:{name:"totalSharesTextSingular",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is 1.",default:"'1 total share'",required:!1,localizable:!0},totalSharesTextPlural:{name:"totalSharesTextPlural",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is greater than 1. {0} is replaced by the number of shares.",default:"'{0} total shares'",required:!1,localizable:!0}},events:{"render.voicestorm.sharebutton":{name:"render.voicestorm.sharebutton",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.sharebutton":{name:"rendered.voicestorm.sharebutton",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},Stream:{name:"Stream",summary:"The Stream widget renders an unstyled list of posts in a stream. Each post includes its image, title, description, and a share button.",category:"Post",hasImage:!1,obsolete:!1,options:{name:{name:"name",type:"string",summary:"Name of the stream to display.",default:"null",required:!0,localizable:!1},take:{name:"take",type:"int",summary:"The maximum number of items to return.",default:"10",required:!1,localizable:!1},skip:{name:"skip",type:"int",summary:"The starting index in the list.",default:"0",required:!1,localizable:!1},include:{name:"include",type:"string",summary:"Comma-delimited list of stream options. Set to 'images' to include post images in the stream. Set to null to omit images.",default:"'images'",required:!1,localizable:!1},datetimeRenderer:{name:"datetimeRenderer",type:"function",summary:"A function called for each date displayed by the widget. This function provides an alternative to using the timezoneOffset option, allowing you to fine tune how dates and times are represented by the widget. See [Date and Time Callback|#date-time-callback] for details.",default:"null",required:!1,localizable:!1},imgSize:{name:"imgSize",type:"string",summary:"Size of post image to include with the post, if available. See [Post Image Sizes|#post-image-sizes] for details.",default:"'Box320'",required:!1,localizable:!1},postLinkFormat:{name:"postLinkFormat",type:"string",summary:"Format string used to construct URLs that link to the full view of the post. If null or empty, the community default post URL format string will be used.",default:"''",required:!1,localizable:!1,helper:"postLinkFormatOptions"},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},shareButtonText:{name:"shareButtonText",type:"string",summary:"Share button label.",default:"'Share'",required:!1,localizable:!0},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating if share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},bylineFormat:{name:"bylineFormat",type:"string",summary:"Format string used to build the byline of each post. Set to null to omit the byline.",default:"null",required:!1,localizable:!1,helper:"bylineFormatOptions"},readMoreText:{name:"readMoreText",type:"string",summary:"Label on link to detailed view of a post.",default:"'Read more...'",required:!1,localizable:!0},earnPointsTextSingular:{name:"earnPointsTextSingular",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is 1.",default:"'Earn 1 point'",required:!1,localizable:!0},earnPointsTextPlural:{name:"earnPointsTextPlural",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is greater than 1. {0} is replaced by the number of points.",default:"'Earn {0} points'",required:!1,localizable:!0},totalSharesTextSingular:{name:"totalSharesTextSingular",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is 1.",default:"'1 total share'",required:!1,localizable:!0},totalSharesTextPlural:{name:"totalSharesTextPlural",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is greater than 1. {0} is replaced by the number of shares.",default:"'{0} total shares'",required:!1,localizable:!0}},events:{"render.voicestorm.stream":{name:"render.voicestorm.stream",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.stream":{name:"rendered.voicestorm.stream",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},SubmitImage:{name:"SubmitImage",summary:"The SubmitImage widget provides an easy way for members to submit an image-only post to the community. There are no functional options available with this widget, but all text presented to the member can be customized. The top instructions are from the community post comment guidelines. See the postGuidelineText property returned by [GET /v1/community/info|api#GET_v1_community_info] for more information.",category:"Post",hasImage:!0,obsolete:!1,options:{noteToSharersLabel:{name:"noteToSharersLabel",type:"string",summary:"Label for creatorComments field.",default:"'Add a Note:'",required:!1,localizable:!0},previewLabel:{name:"previewLabel",type:"string",summary:"Label for the post preview.",default:"'Post Preview:'",required:!1,localizable:!0},urlPlaceholder:{name:"urlPlaceholder",type:"string",summary:"Placeholder text for the link field.",default:"'Type or Paste Link Here'",required:!1,localizable:!0},notePlaceholder:{name:"notePlaceholder",type:"string",summary:"Placeholder text for the creatorComments field.",default:'"Let others know why this post is important"',required:!1,localizable:!0},titlePlaceholder:{name:"titlePlaceholder",type:"string",summary:"Placeholder text for the title field.",default:"'Add a Title (required)'",required:!1,localizable:!0},descriptionPlaceholder:{name:"descriptionPlaceholder",type:"string",summary:"Placeholder text for the description field.",default:"'Add some description, if you like.'",required:!1,localizable:!0},tagsLabel:{name:"tagsLabel",type:"string",summary:"Label for the tags field.",default:"'Tags:'",required:!1,localizable:!0},tagPrompt:{name:"tagPrompt",type:"string",summary:"Prompt text for the tag selector.",default:"'Select a Tag'",required:!1,localizable:!0},categoriesLabel:{name:"categoriesLabel",type:"string",summary:"Label for the category field.",default:"'Categories:'",required:!1,localizable:!0},categoryPrompt:{name:"categoryPrompt",type:"string",summary:"Prompt text for the category selector.",default:"'Select a Category'",required:!1,localizable:!0},uploadLabel:{name:"uploadLabel",type:"string",summary:"Label for the image upload field.",default:"'Upload Image'",required:!1,localizable:!0},removeImageText:{name:"removeImageText",type:"string",summary:"Label on the link used to remove an uploaded image.",default:"'Remove Image'",required:!1,localizable:!0},imageRequirementsLine1:{name:"imageRequirementsLine1",type:"string",summary:"Help text describing the uploaded image types and size requirement.",default:"'Add a png, gif, or jpg image file (5 MB or less).'",required:!1,localizable:!0},imageRequirementsLine2:{name:"imageRequirementsLine2",type:"string",summary:"Help text describing the uploaded image size recommendation.",default:"'The recommended image dimensions are 640x420 or greater.'",required:!1,localizable:!0},uploadNotSupportedText:{name:"uploadNotSupportedText",type:"string",summary:"Warning shown when user's browser does not support cross-site image uploading (IE < 10).",default:"'Image upload not supported on this browser.'",required:!1,localizable:!0},considerUpgradingText:{name:"considerUpgradingText",type:"string",summary:"Label on link to site displaying up-to-date browser download options.",default:"'Please consider upgrading!'",required:!1,localizable:!0},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label on the button to submit the post to the community.",default:"'Submit'",required:!1,localizable:!0},submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},errorTooLarge:{name:"errorTooLarge",type:"string",summary:"Error shown when the file size of the image selected is too large.",default:"'Uploaded images cannot be larger than 5MB. Please select a smaller image.'",required:!1,localizable:!0},errorWrongFormat:{name:"errorWrongFormat",type:"string",summary:"Error shown when the image selected is not one of the supported image types.",default:"'Only png, gif or jpg files are allowed.'",required:!1,localizable:!0},errorInvalidUrl:{name:"errorInvalidUrl",type:"string",summary:"Error shown when the link URL selected does not point to a web page containing an article.",default:"'The URL you entered is invalid.'",required:!1,localizable:!0},errorTitleRequired:{name:"errorTitleRequired",type:"string",summary:"Error shown when a post is submitted without a title.",default:"'Title is required.'",required:!1,localizable:!0},errorTagRequired:{name:"errorTagRequired",type:"string",summary:"Error shown when no tag has been selected and at least one tag is required by the community on new posts.",default:"'You need to select at least one tag for your post.'",required:!1,localizable:!0},errorCategoryRequired:{name:"errorCategoryRequired",type:"string",summary:"Error shown when no category has been selected and at least one category is required by the community on new posts.",default:"'You need to select at least one category for your post.'",required:!1,localizable:!0}},events:{"clear.voicestorm.submitimage":{name:"clear.voicestorm.submitimage",summary:"This event fires after the widget is reset to accept a new link.",hasResponse:!1,isPreventable:!1,helper:""},"render.voicestorm.submitimage":{name:"render.voicestorm.submitimage",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.submitimage":{name:"rendered.voicestorm.submitimage",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.submitimage":{name:"submit.voicestorm.submitimage",summary:"This event fires before the image-only post is submitted to the community.",hasResponse:!1,isPreventable:!1,helper:""},"submitted.voicestorm.submitimage":{name:"submitted.voicestorm.submitimage",summary:"This event fires after the image-only post has been submitted to the community.",hasResponse:!0,isPreventable:!1,helper:"submitLinkSubmitResponse"}}},SubmitLink:{name:"SubmitLink",summary:"The SubmitLink widget provides an easy way for members to submit posts to the community. The member first provides a link to an existing web page. The widget scans the web page and uses the article at that link as the starting point for a new post. The member can then customize details about the post and submit it to the community. There are no functional options available with this widget, but all text presented to the member can be customized. The top instructions are from the community post comment guidelines. See the postGuidelineText property returned by [GET /v1/community/info|api#GET_v1_community_info] for more information.",category:"Post",hasImage:!0,obsolete:!1,options:{previewButtonText:{name:"previewButtonText",type:"string",summary:"Label on button to process link and generate a post preview.",default:"'Preview'",required:!1,localizable:!0},clearButtonText:{name:"clearButtonText",type:"string",summary:"Label on button to reset the widget to enter a new link.",default:"'Clear'",required:!1,localizable:!0},noteToSharersLabel:{name:"noteToSharersLabel",type:"string",summary:"Label for creatorComments field.",default:"'Add a Note:'",required:!1,localizable:!0},previewLabel:{name:"previewLabel",type:"string",summary:"Label for the post preview.",default:"'Post Preview:'",required:!1,localizable:!0},previousImageText:{name:"previousImageText",type:"string",summary:"Label for the link to show the previous image in the list of suggested images found at the link provided.",default:"'Previous'",required:!1,localizable:!0},nextImageText:{name:"nextImageText",type:"string",summary:"Label for the link to show the next image in the list of suggested images found at the link provided.",default:"'Next'",required:!1,localizable:!0},skipImageText:{name:"skipImageText",type:"string",summary:"Label on the checkbox to ignore images found at the link provided.",default:"'Skip imported image'",required:!1,localizable:!0},urlLabel:{name:"urlLabel",type:"string",summary:"Label for the link field.",default:"'Type or Paste Link Here'",required:!1,localizable:!0},urlPlaceholder:{name:"urlPlaceholder",type:"string",summary:"Placeholder text for the link field.",default:"'http://'",required:!1,localizable:!0},notePlaceholder:{name:"notePlaceholder",type:"string",summary:"Placeholder text for the creatorComments field.",default:"'Let others know why this post is important'",required:!1,localizable:!0},titlePlaceholder:{name:"titlePlaceholder",type:"string",summary:"Placeholder text for the title field.",default:"'Add a Title (required)'",required:!1,localizable:!0},descriptionPlaceholder:{name:"descriptionPlaceholder",type:"string",summary:"Placeholder text for the description field.",default:"'Add some description, if you like.'",required:!1,localizable:!0},tagsLabel:{name:"tagsLabel",type:"string",summary:"Label for the tags field.",default:"'Tags:'",required:!1,localizable:!0},tagPrompt:{name:"tagPrompt",type:"string",summary:"Prompt text for the tag selector.",default:"'Select a Tag'",required:!1,localizable:!0},categoriesLabel:{name:"categoriesLabel",type:"string",summary:"Label for the category field.",default:"'Categories:'",required:!1,localizable:!0},categoryPrompt:{name:"categoryPrompt",type:"string",summary:"Prompt text for the category selector.",default:"'Select a Category'",required:!1,localizable:!0},uploadLabel:{name:"uploadLabel",type:"string",summary:"Label for the image upload field.",default:"'Upload Image (Optional)'",required:!1,localizable:!0},removeImageText:{name:"removeImageText",type:"string",summary:"Label on the link used to remove an uploaded image.",default:"'Remove Image'",required:!1,localizable:!0},imagesFoundText:{name:"imagesFoundText",type:"string",summary:"Label for list of images found at the link provided. {0} is replaced with the index of the image displayed (1-based). {1} is replaced with the total number of images found.",default:"'{0} of {1} images found'",required:!1,localizable:!0},imageRequirementsLine1:{name:"imageRequirementsLine1",type:"string",summary:"Help text describing the uploaded image types and size requirement.",default:"'Add a png, gif, or jpg image file (5 MB or less).'",required:!1,localizable:!0},imageRequirementsLine2:{name:"imageRequirementsLine2",type:"string",summary:"Help text describing the uploaded image size recommendation.",default:"'The recommended image dimensions are 640x420 or greater.'",required:!1,localizable:!0},uploadNotSupportedText:{name:"uploadNotSupportedText",type:"string",summary:"Warning shown when user's browser does not support cross-site image uploading (IE < 10).",default:"'Image upload not supported on this browser.'",required:!1,localizable:!0},considerUpgradingText:{name:"considerUpgradingText",type:"string",summary:"Label on link to site displaying up-to-date browser download options.",default:"'Please consider upgrading!'",required:!1,localizable:!0},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label on the button to submit the post to the community.",default:"'Submit'",required:!1,localizable:!0},submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},errorTooLarge:{name:"errorTooLarge",type:"string",summary:"Error shown when the file size of the image selected is too large.",default:"'Uploaded files cannot be larger than 5MB. Please select a smaller file.'",required:!1,localizable:!0},errorWrongFormat:{name:"errorWrongFormat",type:"string",summary:"Error shown when the image selected is not one of the supported image types.",default:"'Only png, gif or jpg files are allowed.'",required:!1,localizable:!0},errorInvalidUrl:{name:"errorInvalidUrl",type:"string",summary:"Error shown when the link URL selected does not point to a web page containing an article.",default:"'The URL you entered is invalid.'",required:!1,localizable:!0},errorRateLimited:{name:"errorRateLimited",type:"string",summary:"Error shown when the website has prevented us from importing this link.",default:"'The website has prevented us from importing this link, so no preview has been generated.'",required:!1,localizable:!0},warningDuplicateUrl:{name:"warningDuplicateUrl",type:"string",summary:"Warning for a manager when a duplicate post is submitted for preview.",default:"'A similar post already exists.'",required:!1,localizable:!0},errorDuplicateUrlLink:{name:"errorDuplicateUrlLink",type:"string",summary:"Error shown when a member submits a URL that matches an article that already exists. This becomes a link to the duplicate post.",default:"'This post already exists in the community.'",required:!1,localizable:!0},errorDuplicateUrlHint:{name:"errorDuplicateUrlHint",type:"string",summary:"Hint shown when a member submits a URL that matches an article that already exists.",default:"'Please submit a different post.'",required:!1,localizable:!0},errorTitleRequired:{name:"errorTitleRequired",type:"string",summary:"Error shown when a post is submitted without a title.",default:"'Title is required.'",required:!1,localizable:!0},errorTagRequired:{name:"errorTagRequired",type:"string",summary:"Error shown when no tag has been selected and at least one tag is required by the community on new posts.",default:"'You need to select at least one tag for your post.'",required:!1,localizable:!0},errorCategoryRequired:{name:"errorCategoryRequired",type:"string",summary:"Error shown when no category has been selected and at least one category is required by the community on new posts.",default:"'You need to select at least one category for your post.'",required:!1,localizable:!0}},events:{"clear.voicestorm.submitlink":{name:"clear.voicestorm.submitlink",summary:"This event fires after the widget is reset to accept a new link.",hasResponse:!1,isPreventable:!1,helper:""},"import.voicestorm.submitlink":{name:"import.voicestorm.submitlink",summary:"This event fires just before a web page is scanned for article content.",hasResponse:!1,isPreventable:!1,helper:""},"imported.voicestorm.submitlink":{name:"imported.voicestorm.submitlink",summary:"This event fires after web page scanning for content is complete.",hasResponse:!0,isPreventable:!1,helper:"submitLinkImportResponse"},"render.voicestorm.submitlink":{name:"render.voicestorm.submitlink",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.submitlink":{name:"rendered.voicestorm.submitlink",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.submitlink":{name:"submit.voicestorm.submitlink",summary:"This event fires before the post is submitted to the community.",hasResponse:!1,isPreventable:!1,helper:""},"submitted.voicestorm.submitlink":{name:"submitted.voicestorm.submitlink",summary:"This event fires after the post has been submitted to the community.",hasResponse:!0,isPreventable:!1,helper:"submitLinkSubmitResponse"}}},Titles:{name:"Titles",summary:"The Titles widget displays posts in a stream as a list of titles with Share buttons. Each title links to the full details of the post.",category:"Post",hasImage:!0,obsolete:!1,options:{name:{name:"name",type:"string",summary:"Name of the stream to get posts from.",default:"null",required:!0,localizable:!1},take:{name:"take",type:"int",summary:"The maximum number of items to return.",default:"10",required:!1,localizable:!1},skip:{name:"skip",type:"int",summary:"The starting index in the list.",default:"0",required:!1,localizable:!1},missingTitleText:{name:"missingTitleText",type:"string",summary:"Title shown when post has no title.",default:"'No title'",required:!1,localizable:!0},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating if share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},shareButtonText:{name:"shareButtonText",type:"string",summary:"Share button label.",default:"'Share'",required:!1,localizable:!0},earnPointsTextSingular:{name:"earnPointsTextSingular",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is 1.",default:"'Earn 1 point'",required:!1,localizable:!0},earnPointsTextPlural:{name:"earnPointsTextPlural",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is greater than 1. {0} is replaced by the number of points.",default:"'Earn {0} points'",required:!1,localizable:!0},totalSharesTextSingular:{name:"totalSharesTextSingular",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is 1.",default:"'1 total share'",required:!1,localizable:!0},totalSharesTextPlural:{name:"totalSharesTextPlural",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is greater than 1. {0} is replaced by the number of shares.",default:"'{0} total shares'",required:!1,localizable:!0}},events:{"render.voicestorm.titles":{name:"render.voicestorm.titles",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.titles":{name:"rendered.voicestorm.titles",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},ProfileAddChannels:{name:"ProfileAddChannels",summary:"The ProfileAddChannels widget displays a list of all the social channels supported by the community. The user viewing the widget can click on a channel name (such as Facebook or Twitter) and connect his or her social channels to his or her VoiceStorm account. If the viewer of this widget is not a logged in VoiceStorm user, he or she will be prompted to log in or join the community (if the community allows open registration) as part of the add channel process.",category:"Profile",hasImage:!1,obsolete:!1,options:{addChannelLinkClass:{name:"addChannelLinkClass",type:"string",summary:"Additional CSS class(es) to add to the Add link.",default:"null",required:!1,localizable:!1}},events:{"render.voicestorm.profileaddchannels":{name:"render.voicestorm.profileaddchannels",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profileaddchannels":{name:"rendered.voicestorm.profileaddchannels",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profileaddchannels":{name:"submit.voicestorm.profileaddchannels",summary:"This event fires just before a new social channel is connected.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profileaddchannels":{name:"submitted.voicestorm.profileaddchannels",summary:"This event fires after a user channel has been connected.",hasResponse:!0,isPreventable:!1,helper:"profileAddChannelsSubmitResponse"}}},ProfileCategorySubscriptions:{name:"ProfileCategorySubscriptions",summary:"The ProfileCategorySubscriptions widget displays and allows the currently logged in user to change his or her content category subscriptions. Content shown on the newsfeed is based on these subscriptions. This widget does not render if category subscriptions have been disabled by a community manager or if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) for the submit button. This is useful to apply library styles, like Bootstrap, that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},labelCategorySubscription:{name:"labelCategorySubscription",type:"string",summary:"Default label explaining the functionality of the widget to the user. This default label will be overridden by the setting saved in the manager application.",default:"'What content would you like to see in your news feed?'",required:!1,localizable:!0},labelNoCategories:{name:"labelNoCategories",type:"string",summary:"Label alerting the user that they do not currently have any content category subscriptions.",default:"'You are not subscribed to any categories yet.'",required:!1,localizable:!0},errorSubscriptionRequired:{name:"errorSubscriptionRequired",type:"string",summary:"Error alerting the user that they must subscribe to at least one category. This error will not be shown if category subscriptions set to required in the manager application.",default:"'Please select at least one content category to subscribe to.'",required:!1,localizable:!0},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",
default:"true",required:!1,localizable:!1}},events:{"render.voicestorm.profilecategorysubscriptions":{name:"render.voicestorm.profilecategorysubscriptions",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilecategorysubscriptions":{name:"rendered.voicestorm.profilecategorysubscriptions",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilecategorysubscriptions":{name:"submit.voicestorm.profilecategorysubscriptions",summary:"This event fires just before new category subscriptions are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilecategorysubscriptions":{name:"submitted.voicestorm.profilecategorysubscriptions",summary:"This event fires after new category subscriptions are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileCategorySubscriptionsResponse"}}},ProfileChangePassword:{name:"ProfileChangePassword",summary:"The ProfileChangePassword widget allows the currently logged in user to change his or her email login password. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label on the button to submit the password change request.",default:"'Submit'",required:!1,localizable:!0},currentPasswordText:{name:"currentPasswordText",type:"string",summary:"Label for the current password field.",default:"'Current Password'",required:!1,localizable:!0},repeatPasswordText:{name:"repeatPasswordText",type:"string",summary:"Label for the repeat new password field.",default:"'Repeat New Password'",required:!1,localizable:!0},currentPasswordMissingText:{name:"currentPasswordMissingText",type:"string",summary:"Error message to display when the current password field is empty.",default:"'Current password field cannot be empty.'",required:!1,localizable:!0},passwordsDoNotMatchText:{name:"passwordsDoNotMatchText",type:"string",summary:"Error message to display when the new password and the repeat new password fields do not match.",default:"'The passwords you entered do not match.'",required:!1,localizable:!0}},events:{"render.voicestorm.profilechangepassword":{name:"render.voicestorm.profilechangepassword",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilechangepassword":{name:"rendered.voicestorm.profilechangepassword",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilechangepassword":{name:"submit.voicestorm.profilechangepassword",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilechangepassword":{name:"submitted.voicestorm.profilechangepassword",summary:"This event fires afternew settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileChangePasswordResponse"}}},ProfileChannels:{name:"ProfileChannels",summary:"The ProfileChannels widget displays the social channels connected by the currently logged in user. The user can remove a connected channel by clicking the Remove link. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{removeText:{name:"removeText",type:"string",summary:"Label for the remove button.",default:"'Remove'",required:!1,localizable:!0},noChannelsText:{name:"noChannelsText",type:"string",summary:"Message shown when the user does not have any connected channels.",default:"'No channels added.'",required:!1,localizable:!0}},events:{"removed.voicestorm.profilechannels":{name:"removed.voicestorm.profilechannels",summary:"This event fires after a user channel has been removed.",hasResponse:!0,isPreventable:!1,helper:"profileChannelsRemoveResponse"},"render.voicestorm.profilechannels":{name:"render.voicestorm.profilechannels",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilechannels":{name:"rendered.voicestorm.profilechannels",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},ProfileContact:{name:"ProfileContact",summary:"The ProfileContact widget displays and allows the currently logged in user to change his or her private contact information. This information is used to communicate with VoiceStorm. Use the ProfilePublic widget to update a user's public information. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) for the submit button. This is useful to apply library styles, like Bootstrap, that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},firstNameText:{name:"firstNameText",type:"string",summary:"Label for first name.",default:"'First Name'",required:!1,localizable:!0},lastNameText:{name:"lastNameText",type:"string",summary:"Label for last name.",default:"'Last Name'",required:!1,localizable:!0},pleaseChooseText:{name:"pleaseChooseText",type:"string",summary:"Label for default option of country dropdown.",default:"'Please Choose...'",required:!1,localizable:!0}},events:{"render.voicestorm.profilecontact":{name:"render.voicestorm.profilecontact",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilecontact":{name:"rendered.voicestorm.profilecontact",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilecontact":{name:"submit.voicestorm.profilecontact",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilecontact":{name:"submitted.voicestorm.profilecontact",summary:"This event fires after new settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileUserResponse"}}},ProfileDivisions:{name:"ProfileDivisions",summary:"The ProfileDivisions widget displays or allows the currently logged in user to change his or her divisions. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) for the submit button. This is useful to apply library styles, like Bootstrap, that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},divisionPromptText:{name:"divisionPromptText",type:"string",summary:"Label for divisions.",default:"'Choose a division'",required:!1,localizable:!0},cannotBeEmptyText:{name:"cannotBeEmptyText",type:"string",summary:"Error text shown when divisions are required and not chosen.",default:"'Divisions cannot be empty'",required:!1,localizable:!0},cannotModifyHelpText:{name:"cannotModifyHelpText",type:"string",summary:"Help text shown when user cannot edit divisions.",default:"'You cannot modify your divisions'",required:!1,localizable:!0},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1}},events:{"render.voicestorm.profiledivisions":{name:"render.voicestorm.profiledivisions",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profiledivisions":{name:"rendered.voicestorm.profiledivisions",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profiledivisions":{name:"submit.voicestorm.profiledivisions",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profiledivisions":{name:"submitted.voicestorm.profiledivisions",summary:"This event fires after new settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileUserResponse"}}},ProfileLocationSettings:{name:"ProfileLocationSettings",summary:"The ProfileLocationSettings widget displays or allows the currently logged in user to change language preferences and timezone preferences. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},selectLanguageText:{name:"selectLanguageText",type:"string",summary:"Default option for content language selection.",default:"'Select a language'",required:!1,localizable:!0},primaryLanguageHelpText:{name:"primaryLanguageHelpText",type:"string",summary:"Help text for display language.",default:"'Select the language you want this community to display in.'",required:!1,localizable:!0},contentLanguageHelpText:{name:"contentLanguageHelpText",type:"string",summary:"Help text describing content language.",default:"'Select the languages of content which you prefer to receive. You can select more than one.'",required:!1,localizable:!0},contentLanguageText:{name:"contentLanguageText",type:"string",summary:"Label for content language.",default:"'Content Language'",required:!1,localizable:!0},primaryLanguageText:{name:"primaryLanguageText",type:"string",summary:"Label for display language.",default:"'Display Language'",required:!1,localizable:!0},timeZoneText:{name:"timeZoneText",type:"string",summary:"Label for timezone.",default:"'Time Zone'",required:!1,localizable:!0},submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1}},events:{"render.voicestorm.profilelocationsettings":{name:"render.voicestorm.profilelocationsettings",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilelocationsettings":{name:"rendered.voicestorm.profilelocationsettings",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilelocationsettings":{name:"submit.voicestorm.profilelocationsettings",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilelocationsettings":{name:"submitted.voicestorm.profilelocationsettings",summary:"This event fires after new settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileUserResponse"}}},ProfileNotification:{name:"ProfileNotification",summary:"The ProfileNotification widget displays and allows the currently logged in user to change his or her notification preferences. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) for the submit button. This is useful to apply library styles, like Bootstrap, that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},mobileText:{name:"mobileText",type:"string",summary:"Header for mobile type notifications.",default:"'Mobile'",required:!1,localizable:!0},emailText:{name:"emailText",type:"string",summary:"Header for email type notifications.",default:"'Email'",required:!1,localizable:!0}},events:{"render.voicestorm.profilenotification":{name:"render.voicestorm.profilenotification",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilenotification":{name:"rendered.voicestorm.profilenotification",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilenotification":{name:"submit.voicestorm.profilenotification",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilenotification":{name:"submitted.voicestorm.profilenotification",summary:"This event fires after new settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileNotificationResponse"}}},ProfileNotificationSms:{name:"ProfileNotificationSms",summary:"The ProfileNotificationSms widget displays and allows the currently logged in enroll in and receive broadcasts via SMS. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{beforeSubmitCallback:{name:"beforeSubmitCallback",type:"function",summary:'Callback function that will be executed before the final submit ("Done") step.',default:"null",required:!1,localizable:!1},submitCallback:{name:"submitCallback",type:"function",summary:'Callback function that will be executed after the final submit ("Done") step.',default:"null",required:!1,localizable:!1},buttonSubmit:{name:"buttonSubmit",type:"string",summary:"Label for the button on the final step of the. This button does not appear by default in the widget, but appears only when the widget is in Edit Mode.",default:"'Done'",required:!1,localizable:!0},labelPhoneNumber:{name:"labelPhoneNumber",type:"string",summary:"Label to display the phone number entered by the user.",default:"'Phone Number'",required:!1,localizable:!0},labelEditNumber:{name:"labelEditNumber",type:"string",summary:"Label to display to edit the phone number previously entered by the user.",default:"'Edit Phone Number'",required:!1,localizable:!0},labelPinCode:{name:"labelPinCode",type:"string",summary:"Label to display where the user can input the PIN sent to verify the phone number.",default:"'Enter PIN'",required:!1,localizable:!0},buttonSendPin:{name:"buttonSendPin",type:"string",summary:"Label to display on the button that will send the user the PIN used for verification.",default:"'Submit'",required:!1,localizable:!0},labelSendPinHint:{name:"labelSendPinHint",type:"string",summary:"Help label describing the PIN verification process.",default:"'We will send a PIN to the number you provide for verification purposes if required by your community manager.'",required:!1,localizable:!0},labelNumberFormat:{name:"labelNumberFormat",type:"string",summary:"Help label alerting the user to enter a number including country code, as international formats are supported.",default:"'Enter your phone number starting with your country code (for instance, +1 for the US):'",required:!1,localizable:!0},errorInvalidNumber:{name:"errorInvalidNumber",type:"string",summary:"Error label when the phone number entered has an invalid format.",default:'"Please enter a valid phone number to continue."',required:!1,localizable:!0},errorNumberGeneric:{name:"errorNumberGeneric",type:"string",summary:"Generic error label when a user's phone number is unable to be saved.",default:"'Unable to save phone number. Please try again.'",required:!1,localizable:!0},labelNewPin:{name:"labelNewPin",type:"string",summary:"Label confirming that a new PIN has been sent to a user.",default:'"We sent you a new PIN to your number."',required:!1,localizable:!0},labelVerifyPinHint:{name:"labelVerifyPinHint",type:"string",summary:"Help label alerting user to enter the PIN sent.",default:'"Please enter the PIN that was sent to the number you provided."',required:!1,localizable:!0},buttonVerifyPin:{name:"buttonVerifyPin",type:"string",summary:"Label to display on the button that will verify the PIN.",default:'"Verify PIN"',required:!1,localizable:!0},errorIncorrectPin:{name:"errorIncorrectPin",type:"string",summary:"Error label when the PIN entered is incorrect.",default:'"The PIN you provided was incorrect. Please re-enter the PIN that was sent to the number you provided."',required:!1,localizable:!0},labelDataMessageHint:{name:"labelDataMessageHint",type:"string",summary:"Label to display to alert user of potential sms/data charges that may be incurred.",default:'"Standard messaging and data rates apply for SMS messages."',required:!1,localizable:!0},buttonSendPinAgain:{name:"buttonSendPinAgain",type:"string",summary:"Label to display on the button used to re-send the PIN.",default:"'Click here to send PIN again.'",required:!1,localizable:!0},labelNumberVerified:{name:"labelNumberVerified",type:"string",summary:"Label to display preceding the phone number after it has been verified.",default:"'SMS notifications will be sent to: '",required:!1,localizable:!0},labelStatusSmsDisabled:{name:"labelStatusSmsDisabled",type:"string",summary:"Label to display when sms notifications are disabled.",default:"'Notifications by SMS are currently disabled. To enable SMS notifications, please provide a phone number.'",required:!1,localizable:!0},labelStatusSmsRequiresVerification:{name:"labelStatusSmsRequiresVerification",type:"string",summary:"Label to display when a user has entered a phone number but it has not verified.",default:"'Your phone number must be verified before SMS notifications can be enabled.'",required:!1,localizable:!0},labelStatusSmsEnabled:{name:"labelStatusSmsEnabled",type:"string",summary:"Summary label to display preceding the phone number after it has been verified.",default:"'Notifications by SMS are currently enabled and will be sent to: '",required:!1,localizable:!0},labelDisableSms:{name:"labelDisableSms",type:"string",summary:"Label to display on link to allow user to disable sms notifications.",default:"'Disable SMS Notifications'",required:!1,localizable:!0}},events:{"render.voicestorm.profilenotificationsms":{name:"render.voicestorm.profilenotificationsms",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilenotificationsms":{name:"rendered.voicestorm.profilenotificationsms",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},ProfilePhoto:{name:"ProfilePhoto",summary:"The ProfilePhoto widget displays and allows the currently logged in user to change his or her public profile photo. This widget does not render if the viewer of the page is not a logged in VoiceStorm user. This widget does not render unless the viewer's browser supports the FileReader classes.",category:"Profile",helper:"profilePhotoSummary",hasImage:!1,obsolete:!1,options:{size:{name:"size",type:"string",summary:"Size of user's current public profile photo to display.",default:"'Square80'",required:!1,localizable:!1,helper:"profilePhotoSize"},previewSize:{name:"previewSize",type:"int",summary:"Size in pixels, of the width and height of the preview image displayed after the user uploads a new public profile photo. This image is also used by the user to set the clipping region of the uploaded photo.",default:"400",required:!1,localizable:!1},cssUrl:{name:"cssUrl",type:"string",summary:"URL for custom css.",default:"null",required:!1,localizable:!1},submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},fileTypeErrorText:{name:"fileTypeErrorText",type:"string",summary:"Error shown for invalid file type.",default:"'Photo must be .jpg, .gif, or .png'",required:!1,localizable:!0},fileSizeErrorText:{name:"fileSizeErrorText",type:"string",summary:"Error shown for invalid file size.",default:"'Photo must be under 2MB'",required:!1,localizable:!0},fileHelpText:{name:"fileHelpText",type:"string",summary:"Help text about photo requirements.",default:"'Photos must be under 2MB in .jpg, .gif, or .png'",required:!1,localizable:!0},fileDimensionsHelpText:{name:"fileDimensionsHelpText",type:"string",summary:"Help text to suggest photo dimensions.",default:"'Suggested dimensions: 160 x 160'",required:!1,localizable:!0},previewText:{name:"previewText",type:"string",summary:"Label for photo preview.",default:"'Preview'",required:!1,localizable:!0},noFileSelectedErrorText:{name:"noFileSelectedErrorText",type:"string",summary:"Error shown for no file upload while settings were submitted.",default:"'No file selected'",required:!1,localizable:!0},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1}},events:{"render.voicestorm.profilephoto":{name:"render.voicestorm.profilephoto",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilephoto":{name:"rendered.voicestorm.profilephoto",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilephoto":{name:"submit.voicestorm.profilephoto",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilephoto":{name:"submitted.voicestorm.profilephoto",summary:"This event fires after new settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profilePhotoResponse"}}},ProfilePublic:{name:"ProfilePublic",summary:"The ProfilePublic widget displays and allows the currently logged in user to change public information about his or her self. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},showProfileQuestions:{name:"showProfileQuestions",type:"bool",summary:"A flag indicating whether the widget should include user profile questions.",default:"true",required:!1,localizable:!1},emailText:{name:"emailText",type:"string",summary:"Submit button label.",default:"'Email'",required:!1,localizable:!0},publicDisplayNameText:{name:"publicDisplayNameText",type:"string",summary:"Label for public display name .",default:"'Public Display Name'",required:!1,localizable:!0},firstNamePlaceholder:{name:"firstNamePlaceholder",type:"string",summary:"Placeholder for unknown first name.",default:"'[First Name]'",required:!1,localizable:!0},lastNamePlaceholder:{name:"lastNamePlaceholder",type:"string",summary:"Placeholder for unknown last name.",default:"'[Last Name]'",required:!1,localizable:!0},lastInitialPlaceholder:{name:"lastInitialPlaceholder",type:"string",summary:"Placeholder for last name initial.",default:"'[Last Initial]'",required:!1,localizable:!0}},events:{"render.voicestorm.profilepublic":{name:"render.voicestorm.profilepublic",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilepublic":{name:"rendered.voicestorm.profilepublic",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilepublic":{name:"submit.voicestorm.profilepublic",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilepublic":{name:"submitted.voicestorm.profilepublic",summary:"This event fires after a new post is submitted.",hasResponse:!0,isPreventable:!1,helper:"profileUserResponse"}}},ProfileScheduledShares:{name:"ProfileScheduledShares",summary:"The ProfileScheduledShares widget displays and allows the currently logged in user to change his or her schedule share preferences. This widget does not render if the viewer of the page is not a logged in VoiceStorm user.",category:"Profile",hasImage:!1,obsolete:!1,options:{submitButtonClass:{name:"submitButtonClass",type:"string",summary:"Additional CSS class(es) to add to the submit button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"null",required:!1,localizable:!1},submitButtonText:{name:"submitButtonText",type:"string",summary:"Label for submit button.",default:"'Submit'",required:!1,localizable:!0},scheduledDayTitle:{name:"scheduledDayTitle",type:"string",summary:"Header to represent sharing days.",default:"'Sharing Days'",required:!1,localizable:!0},scheduledTimeTitle:{name:"scheduledTimeTitle",type:"string",summary:"Header to represent sharing times.",default:"'Sharing Times'",required:!1,localizable:!0},addTimeButtonText:{name:"addTimeButtonText",type:"string",summary:"Label for the add time button.",default:"'Add Posting Time'",required:!1,localizable:!0},removeButtonText:{name:"removeButtonText",type:"string",summary:"Label for the remove button.",default:"'Remove'",required:!1,localizable:!0},dayMonText:{name:"dayMonText",type:"string",summary:"Label for Monday.",default:"'Mon'",required:!1,localizable:!0},dayTueText:{name:"dayTueText",type:"string",summary:"Label for Tuesday.",default:"'Tue'",required:!1,localizable:!0},dayWedText:{name:"dayWedText",type:"string",summary:"Label for Wednesday.",default:"'Wed'",required:!1,localizable:!0},dayThuText:{name:"dayThuText",type:"string",summary:"Label for Thursday.",default:"'Thu'",required:!1,localizable:!0},dayFriText:{name:"dayFriText",type:"string",summary:"Label for Friday.",default:"'Fri'",required:!1,localizable:!0},daySatText:{name:"daySatText",type:"string",summary:"Label for Saturday.",default:"'Sat'",required:!1,localizable:!0},daySunText:{name:"daySunText",type:"string",summary:"Label for Sunday.",default:"'Sun'",required:!1,localizable:!0}},events:{"render.voicestorm.profilescheduledshares":{name:"render.voicestorm.profilescheduledshares",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.profilescheduledshares":{name:"rendered.voicestorm.profilescheduledshares",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""},"submit.voicestorm.profilescheduledshares":{name:"submit.voicestorm.profilescheduledshares",summary:"This event fires just before new settings are submitted.",hasResponse:!1,isPreventable:!0,helper:""},"submitted.voicestorm.profilescheduledshares":{name:"submitted.voicestorm.profilescheduledshares",summary:"This event fires after new settings are submitted.",hasResponse:!0,isPreventable:!1,helper:"profileUserResponse"},"timeadded.voicestorm.profilescheduledshares":{name:"timeadded.voicestorm.profilescheduledshares",summary:"This event fires after schedule time is added to DOM.",hasResponse:!1,isPreventable:!1,helper:""},"timeremoved.voicestorm.profilescheduledshares":{name:"timeremoved.voicestorm.profilescheduledshares",summary:"This event fires after schedule time is removed from DOM.",hasResponse:!1,isPreventable:!1,helper:""}}},Conversation:{name:"Conversation",summary:"The Conversation widget renders a single conversation between users.",category:"User",hasImage:!1,obsolete:!1,options:{defaultUserName:{name:"defaultUserName",type:"string",summary:"Label to display when the user does not have a username.",default:"'Unknown'",required:!1,localizable:!0},dateFormat:{name:"dateFormat",type:"string",summary:"Format string used to build the date of each comment. See [Date and Time Format Strings|#date-time-formatting] for details.",default:"'l[,] LT'",required:!1,localizable:!0},timezoneOffset:{name:"timezoneOffset",type:"string",summary:'String representing the difference between local time and UTC in the ISO 8601 time zone designator format. Value must be between +16:00 and -16:00. Example: "-08:00". Default is the time zone set for the community.',default:"0",required:!1,localizable:!1},datetimeRenderer:{name:"datetimeRenderer",type:"function",summary:"A function called for each date displayed by the widget. This function provides an alternative to using the timezoneOffset option, allowing you to fine tune how dates and times are represented by the widget. See [Date and Time Callback|#date-time-callback] for details.",default:"null",required:!1,localizable:!1},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},defaultAttachedPostText:{name:"defaultAttachedPostText",type:"string",summary:"Label to display if there is post attached to a message.",default:"'Attached Post:'",required:!1,localizable:!0},postLinkFormat:{name:"postLinkFormat",type:"string",summary:"Format string used to construct URLs that link to the full view of the post. If null or empty, the community default post URL format string will be used.",default:"''",required:!1,localizable:!1,helper:"postLinkFormatOptions"},warningAttachedPostRemoved:{name:"warningAttachedPostRemoved",type:"string",summary:"Label to display if the attached post has been removed, excluded, or otherwise unable to be displayed.",default:"'Attached Post Unavailable'",required:!1,localizable:!0}},events:{"render.voicestorm.conversation":{name:"render.voicestorm.conversation",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.conversation":{name:"rendered.voicestorm.conversation",summary:"This event fires after the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""}}},Conversations:{name:"Conversations",summary:"The Conversations widget renders a list of conversations to or from the current user.",category:"User",hasImage:!1,obsolete:!1,options:{take:{name:"take",type:"int",summary:"The maximum number of items to return.",default:"10",required:!1,localizable:!1},skip:{name:"skip",type:"int",summary:"The starting index in the list.",default:"0",required:!1,localizable:!1},archived:{name:"archived",type:"bool",summary:"A flag indicating whether to return archived conversations. If set to false, only active conversations will be returned. If set to true, only archived conversations will be returned.",default:"false",required:!1,localizable:!1},
defaultUserName:{name:"defaultUserName",type:"string",summary:"Label to display when the user does not have a username.",default:"'Unknown'",required:!1,localizable:!0},dateFormat:{name:"dateFormat",type:"string",summary:"Format string used to build the date of each comment. See [Date and Time Format Strings|#date-time-formatting] for details.",default:"'M/D/YY'",required:!1,localizable:!0},defaultManagersName:{name:"defaultManagersName",type:"string",summary:"Label to display when a conversation is between a user and community managers.",default:"'Community Managers'",required:!1,localizable:!0},defaultCurrentName:{name:"defaultCurrentName",type:"string",summary:"Label to display when the preview message was sent by the current user.",default:"'Me'",required:!1,localizable:!0},defaultOthersText:{name:"defaultOthersText",type:"string",summary:"Overflow label to display when a conversation has many participants.",default:"'others'",required:!1,localizable:!0},timezoneOffset:{name:"timezoneOffset",type:"string",summary:'String representing the difference between local time and UTC in the ISO 8601 time zone designator format. Value must be between +16:00 and -16:00. Example: "-08:00". Default is the time zone set for the community.',default:"0",required:!1,localizable:!1},datetimeRenderer:{name:"datetimeRenderer",type:"function",summary:"A function called for each date displayed by the widget. This function provides an alternative to using the timezoneOffset option, allowing you to fine tune how dates and times are represented by the widget. See [Date and Time Callback|#date-time-callback] for details.",default:"null",required:!1,localizable:!1},includeStyle:{name:"includeStyle",type:"bool",summary:"A flag indicating whether the widget should add a style sheet to your page’s head section that provides default styling for the widget.",default:"true",required:!1,localizable:!1},query:{name:"query",type:"string",summary:"A string to filter conversations by.",default:"''",required:!1,localizable:!1},defaultPostAttachText:{name:"defaultPostAttachText",type:"string",summary:"Label to display if there is post attached to a message.",default:"'Attached Post'",required:!1,localizable:!0}},events:{"clicked.voicestorm.conversations":{name:"clicked.voicestorm.conversations",summary:"This event fires when a user clicks a conversation in the list of conversations.",hasResponse:!1,isPreventable:!1,helper:""},"render.voicestorm.conversations":{name:"render.voicestorm.conversations",summary:"This event fires just before the conversations widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.conversations":{name:"rendered.voicestorm.conversations",summary:"This event fires after the conversations widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""}}},Leaderboard:{name:"Leaderboard",summary:"The Leaderboard displays a leaderboard of active members.",category:"User",hasImage:!1,obsolete:!1,options:{id:{name:"id",type:"int",summary:"ID of the leaderboard you want to display.",default:"0",required:!1,localizable:!1},take:{name:"take",type:"int",summary:"The maximum number of items to return.",default:"10",required:!1,localizable:!1},skip:{name:"skip",type:"int",summary:"The starting index in the list.",default:"0",required:!1,localizable:!1},include:{name:"include",type:"string",summary:"Comma-delimited list of options. Set to 'images' to include images. Set to null to omit images.",default:"'images'",required:!1,localizable:!1},imgSize:{name:"imgSize",type:"string",summary:"Size of user image to include with the leaderboard, if available. See [User Profile Picture Sizes|#user-image-sizes] for details.",default:"'Square40'",required:!1,localizable:!1},showPoints:{name:"showPoints",type:"bool",summary:"A flag indicating whether to display each user's points.",default:"true",required:!1,localizable:!1},profileLinkFormat:{name:"profileLinkFormat",type:"string",summary:"Format string used to construct URLs that link to the user's profile. If null or empty, the community default profile URL format string will be used.",default:"''",required:!1,localizable:!1,helper:"profileLinkFormatOptions"},pointsFormat:{name:"pointsFormat",type:"string",summary:"Format string used to display each user's points.",default:'"$points points"',required:!1,localizable:!0},showLocation:{name:"showLocation",type:"bool",summary:"A flag indicating whether the widget should display each user's location.",default:"true",required:!1,localizable:!1},permissionDeniedText:{name:"permissionDeniedText",type:"string",summary:"Label to display if the user does not have the permissions to view this leaderboard.",default:"'You do not have permission to view this leaderboard. Try signing in.'",required:!1,localizable:!0}},events:{"render.voicestorm.leaderboard":{name:"render.voicestorm.leaderboard",summary:"This event fires just before the leaderboard widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.leaderboard":{name:"rendered.voicestorm.leaderboard",summary:"This event fires after the leaderboard widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""}}},UserComments:{name:"UserComments",summary:"The UserComments widget displays a list of posts a user has shared along with sharing comments. The widget can allow signed-in users to share them using the VoiceStorm sharing dialog.",category:"User",hasImage:!1,obsolete:!1,options:{id:{name:"id",type:"int",summary:"ID of the user whose shares you want to display. If null, the current user will be used.",default:"null",required:!1,localizable:!1},take:{name:"take",type:"int",summary:"The maximum number of items to return.",default:"3",required:!1,localizable:!1},skip:{name:"skip",type:"int",summary:"The starting index in the list.",default:"0",required:!1,localizable:!1},include:{name:"include",type:"string",summary:"Comma-delimited list of post options. Set to 'images' to include post images. Set to null to omit images.",default:"'images'",required:!1,localizable:!1},shareButtonText:{name:"shareButtonText",type:"string",summary:"Share button label.",default:"'Share'",required:!1,localizable:!0},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating if share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},imgSize:{name:"imgSize",type:"string",summary:"Size of post image to include with the post, if available. See [Post Image Sizes|#post-image-sizes] for details.",default:"'Square80'",required:!1,localizable:!1},profileImgSize:{name:"profileImgSize",type:"string",summary:"Size of profile image to include with the share, if available. See [User Profile Picture Sizes|#user-image-sizes] for details.",default:"'Square40'",required:!1,localizable:!1},profileLinkFormat:{name:"profileLinkFormat",type:"string",summary:"Format string used to construct URLs that link to the user's profile. If null or empty, the community default profile URL format string will be used.",default:"''",required:!1,localizable:!1,helper:"profileLinkFormatOptions"},earnPointsTextSingular:{name:"earnPointsTextSingular",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is 1.",default:'"Earn {0} point"',required:!1,localizable:!0},earnPointsTextPlural:{name:"earnPointsTextPlural",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is greater than 1. {0} is replaced by the number of points.",default:'"Earn {0} points"',required:!1,localizable:!0},totalSharesTextSingular:{name:"totalSharesTextSingular",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is 1.",default:'"{0} total share"',required:!1,localizable:!0},totalSharesTextPlural:{name:"totalSharesTextPlural",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is greater than 1. {0} is replaced by the number of shares.",default:'"{0} total shares"',required:!1,localizable:!0}},events:{"render.voicestorm.usercomments":{name:"render.voicestorm.usercomments",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.usercomments":{name:"rendered.voicestorm.usercomments",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}},UserPosts:{name:"UserPosts",summary:"The UserPosts widget displays a list of posts a user has submitted. The widget can allow signed-in users to share them using the VoiceStorm sharing dialog.",category:"User",hasImage:!1,obsolete:!1,options:{id:{name:"id",type:"int",summary:"ID of the user whose posts you want to display. If null, the current user will be used.",default:"null",required:!1,localizable:!1},take:{name:"take",type:"int",summary:"The maximum number of items to return.",default:"3",required:!1,localizable:!1},skip:{name:"skip",type:"int",summary:"The starting index in the list.",default:"0",required:!1,localizable:!1},include:{name:"include",type:"string",summary:"Comma-delimited list of post options. Set to 'images' to include post images. Set to null to omit images.",default:"'images'",required:!1,localizable:!1},shareButtonText:{name:"shareButtonText",type:"string",summary:"Share button label.",default:"'Share'",required:!1,localizable:!0},shareButtonClass:{name:"shareButtonClass",type:"string",summary:"Additional CSS class(es) to add to the share button. This is useful for libraries that rely on CSS classes to apply visual styles.",default:"''",required:!1,localizable:!1},includeShareButtonStats:{name:"includeShareButtonStats",type:"bool",summary:"A flag indicating if share button statistics should be displayed next to the share button, if the share button is displayed.",default:"false",required:!1,localizable:!1},imgSize:{name:"imgSize",type:"string",summary:"Size of post image to include with the post, if available. See [Post Image Sizes|#post-image-sizes] for details.",default:"'Square80'",required:!1,localizable:!1},authorFormat:{name:"authorFormat",type:"string",summary:"Format string used to construct the header for each post.",default:'"$author wrote a post"',required:!1,localizable:!0,helper:"authorFormatOptions"},earnPointsTextSingular:{name:"earnPointsTextSingular",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is 1.",default:'"Earn {0} point"',required:!1,localizable:!0},earnPointsTextPlural:{name:"earnPointsTextPlural",type:"string",summary:"Label displaying the Per Share Points for this post, if the per share points is greater than 1. {0} is replaced by the number of points.",default:'"Earn {0} points"',required:!1,localizable:!0},totalSharesTextSingular:{name:"totalSharesTextSingular",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is 1.",default:'"{0} total share"',required:!1,localizable:!0},totalSharesTextPlural:{name:"totalSharesTextPlural",type:"string",summary:"Label displaying the number of times this post has been shared, if that number is greater than 1. {0} is replaced by the number of shares.",default:'"{0} total shares"',required:!1,localizable:!0}},events:{"render.voicestorm.userposts":{name:"render.voicestorm.userposts",summary:"This event fires just before the widget is rendered.",hasResponse:!1,isPreventable:!1,helper:""},"rendered.voicestorm.userposts":{name:"rendered.voicestorm.userposts",summary:"This event fires after the widget rendering is complete and the DOM has been updated.",hasResponse:!1,isPreventable:!1,helper:""}}}}}},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var r=n(1),s=a(r),o=n(47),i=n(145),l=a(i),u=n(39),m=a(u),d=n(135),c=a(d),p=n(160),h=a(p),f=n(124),y=a(f),g=n(123),v=a(g),b=n(125),T=a(b),w=n(38),S=a(w);n(169);var E=n(8),R=n(65),P=n(16),C=n(168),k=a(C),I=s.default.createElement(P.Provider,{store:k.default},s.default.createElement(R.ConnectedRouter,{history:C.history},s.default.createElement("div",{className:"app"},s.default.createElement(l.default,null),s.default.createElement(m.default,{scrollElId:"content"},s.default.createElement(E.Switch,null,s.default.createElement(E.Route,{exact:!0,path:"/",component:y.default}),s.default.createElement(E.Route,{path:"/getting-started",component:v.default}),s.default.createElement(E.Route,{exact:!0,path:"/api/responses/:response",component:c.default}),s.default.createElement(E.Route,{exact:!0,path:"/api/:category?",component:c.default}),s.default.createElement(E.Route,{path:"/javascript-sdk",component:T.default}),s.default.createElement(E.Route,{path:"/widgets/:category?/:widget?",component:h.default}),s.default.createElement(E.Route,{component:S.default}))))));(0,o.render)(I,document.getElementById("root"))},function(e,t,n){"use strict";function a(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i,t=arguments[1];switch(t.type){case r.WIDGET_SET_WIDGETDOCS:return{categories:t.widgetdocs.categories,widgets:t.widgetdocs.widgets};default:return e}}Object.defineProperty(t,"__esModule",{value:!0}),t.widgetReducer=a;var r=n(121),s=n(163),o=Object.values(s.widgetdocs.widgets).filter(function(e){return e.obsolete===!1}).reduce(function(e,t){return e[t.name]=t,e},{}),i={categories:s.widgetdocs.categories,widgets:o}},function(e,t,n){"use strict";function a(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments[1];switch(t.type){case r.API_SEARCH_INPUT_CHANGED:return Object.assign({},e);default:return e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=a;var r=n(161),s=n(162),o=s.apidocs.categories.map(function(e,t){return{index:t,value:e.name}});o.sort(function(e,t){return e.value>t.value?1:t.value>e.value?-1:0});var i=o.map(function(e){return s.apidocs.categories[e.index]}),l={categories:i,selectedCategory:{},responses:s.apidocs.responses,enums:s.apidocs.enums}},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(70),s=n(65),o=n(166),i=a(o),l=n(165),u=(0,r.combineReducers)({api:i.default,widgets:l.widgetReducer,routing:s.routerReducer});t.default=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.history=void 0;var r=n(70),s=n(65),o=n(79),i=a(o),l=n(167),u=a(l),m=t.history=(0,i.default)({basename:"/test-docs"}),d=(0,r.compose)((0,r.applyMiddleware)((0,s.routerMiddleware)(m)),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()),c=(0,r.createStore)(u.default,d);t.default=c},function(e,t){},function(e,t){"use strict";function n(e){return e.replace(a,function(e,t){return t.toUpperCase()})}var a=/-(.)/g;e.exports=n},function(e,t,n){"use strict";function a(e){return r(e.replace(s,"ms-"))}var r=n(170),s=/^-ms-/;e.exports=a},function(e,t,n){"use strict";function a(e,t){return!(!e||!t)&&(e===t||!r(e)&&(r(t)?a(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var r=n(180);e.exports=a},function(e,t,n){"use strict";function a(e){var t=e.length;if(Array.isArray(e)||"object"!=typeof e&&"function"!=typeof e?o(!1):void 0,"number"!=typeof t?o(!1):void 0,0===t||t-1 in e?void 0:o(!1),"function"==typeof e.callee?o(!1):void 0,e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(e){}for(var n=Array(t),a=0;a<t;a++)n[a]=e[a];return n}function r(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function s(e){return r(e)?Array.isArray(e)?e.slice():a(e):[e]}var o=n(2);e.exports=s},function(e,t,n){"use strict";function a(e){var t=e.match(m);return t&&t[1].toLowerCase()}function r(e,t){var n=u;u?void 0:l(!1);var r=a(e),s=r&&i(r);if(s){n.innerHTML=s[1]+e+s[2];for(var m=s[0];m--;)n=n.lastChild}else n.innerHTML=e;var d=n.getElementsByTagName("script");d.length&&(t?void 0:l(!1),o(d).forEach(t));for(var c=Array.from(n.childNodes);n.lastChild;)n.removeChild(n.lastChild);return c}var s=n(10),o=n(173),i=n(175),l=n(2),u=s.canUseDOM?document.createElement("div"):null,m=/^\s*<(\w+)/;e.exports=r},function(e,t,n){"use strict";function a(e){return o?void 0:s(!1),c.hasOwnProperty(e)||(e="*"),i.hasOwnProperty(e)||("*"===e?o.innerHTML="<link />":o.innerHTML="<"+e+"></"+e+">",i[e]=!o.firstChild),i[e]?c[e]:null}var r=n(10),s=n(2),o=r.canUseDOM?document.createElement("div"):null,i={},l=[1,'<select multiple="true">',"</select>"],u=[1,"<table>","</table>"],m=[3,"<table><tbody><tr>","</tr></tbody></table>"],d=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],c={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:l,option:l,caption:u,colgroup:u,tbody:u,tfoot:u,thead:u,td:m,th:m},p=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];p.forEach(function(e){c[e]=d,i[e]=!0}),e.exports=a},function(e,t){"use strict";function n(e){return e.Window&&e instanceof e.Window?{x:e.pageXOffset||e.document.documentElement.scrollLeft,y:e.pageYOffset||e.document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}e.exports=n},function(e,t){"use strict";function n(e){return e.replace(a,"-$1").toLowerCase()}var a=/([A-Z])/g;e.exports=n},function(e,t,n){"use strict";function a(e){return r(e).replace(s,"-ms-")}var r=n(177),s=/^ms-/;e.exports=a},function(e,t){"use strict";function n(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"==typeof n.Node?e instanceof n.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=n},function(e,t,n){"use strict";function a(e){return r(e)&&3==e.nodeType}var r=n(179);e.exports=a},function(e,t){"use strict";function n(e){var t={};return function(n){return t.hasOwnProperty(n)||(t[n]=e.call(this,n)),t[n]}}e.exports=n},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(18),o=a(s),i=n(28),l=a(i),u=n(44),m=n(27),d=n(45),c=a(d),p=n(78),h="hashchange",f={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+(0,m.stripLeadingSlash)(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:m.stripLeadingSlash,decodePath:m.addLeadingSlash},slash:{encodePath:m.addLeadingSlash,decodePath:m.addLeadingSlash}},y=function(){var e=window.location.href,t=e.indexOf("#");return t===-1?"":e.substring(t+1)},g=function(e){return window.location.hash=e},v=function(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)},b=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,l.default)(p.canUseDOM,"Hash history needs a DOM");var t=window.history,n=(0,p.supportsGoWithoutReloadUsingHash)(),a=e.getUserConfirmation,s=void 0===a?p.getConfirmation:a,i=e.hashType,d=void 0===i?"slash":i,b=e.basename?(0,m.stripTrailingSlash)((0,m.addLeadingSlash)(e.basename)):"",T=f[d],w=T.encodePath,S=T.decodePath,E=function(){var e=S(y());return b&&(e=(0,m.stripPrefix)(e,b)),(0,m.parsePath)(e)},R=(0,c.default)(),P=function(e){r(G,e),G.length=t.length,R.notifyListeners(G.location,G.action)},C=!1,k=null,I=function(){var e=y(),t=w(e);if(e!==t)v(t);else{var n=E(),a=G.location;if(!C&&(0,u.locationsAreEqual)(a,n))return;if(k===(0,m.createPath)(n))return;k=null,A(n)}},A=function(e){if(C)C=!1,P();else{var t="POP";R.confirmTransitionTo(e,t,s,function(n){n?P({action:t,location:e}):_(e)})}},_=function(e){var t=G.location,n=D.lastIndexOf((0,m.createPath)(t));n===-1&&(n=0);var a=D.lastIndexOf((0,m.createPath)(e));a===-1&&(a=0);var r=n-a;r&&(C=!0,L(r))},x=y(),O=w(x);x!==O&&v(O);var q=E(),D=[(0,m.createPath)(q)],M=function(e){return"#"+w(b+(0,m.createPath)(e))},U=function(e,t){(0,o.default)(void 0===t,"Hash history cannot push state; it is ignored");var n="PUSH",a=(0,u.createLocation)(e,void 0,void 0,G.location);R.confirmTransitionTo(a,n,s,function(e){if(e){var t=(0,m.createPath)(a),r=w(b+t),s=y()!==r;if(s){k=t,g(r);var i=D.lastIndexOf((0,m.createPath)(G.location)),l=D.slice(0,i===-1?0:i+1);l.push(t),D=l,P({action:n,location:a})}else(0,o.default)(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),P()}})},N=function(e,t){(0,o.default)(void 0===t,"Hash history cannot replace state; it is ignored");var n="REPLACE",a=(0,u.createLocation)(e,void 0,void 0,G.location);R.confirmTransitionTo(a,n,s,function(e){if(e){var t=(0,m.createPath)(a),r=w(b+t),s=y()!==r;s&&(k=t,v(r));var o=D.indexOf((0,m.createPath)(G.location));o!==-1&&(D[o]=t),P({action:n,location:a})}})},L=function(e){(0,o.default)(n,"Hash history go(n) causes a full page reload in this browser"),t.go(e)},z=function(){return L(-1)},j=function(){return L(1)},F=0,B=function(e){F+=e,1===F?(0,p.addEventListener)(window,h,I):0===F&&(0,p.removeEventListener)(window,h,I)},V=!1,W=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=R.setPrompt(e);return V||(B(1),V=!0),function(){return V&&(V=!1,B(-1)),t()}},H=function(e){var t=R.appendListener(e);return B(1),function(){B(-1),t()}},G={length:t.length,action:"POP",location:q,createHref:M,push:U,replace:N,go:L,goBack:z,goForward:j,block:W,listen:H};return G};t.default=b},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=n(18),i=a(o),l=n(27),u=n(44),m=n(45),d=a(m),c=function(e,t,n){return Math.min(Math.max(e,t),n)},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.getUserConfirmation,n=e.initialEntries,a=void 0===n?["/"]:n,o=e.initialIndex,m=void 0===o?0:o,p=e.keyLength,h=void 0===p?6:p,f=(0,d.default)(),y=function(e){s(A,e),A.length=A.entries.length,f.notifyListeners(A.location,A.action)},g=function(){return Math.random().toString(36).substr(2,h)},v=c(m,0,a.length-1),b=a.map(function(e){return"string"==typeof e?(0,u.createLocation)(e,void 0,g()):(0,u.createLocation)(e,void 0,e.key||g())}),T=l.createPath,w=function(e,n){(0,i.default)(!("object"===("undefined"==typeof e?"undefined":r(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var a="PUSH",s=(0,u.createLocation)(e,n,g(),A.location);f.confirmTransitionTo(s,a,t,function(e){if(e){var t=A.index,n=t+1,r=A.entries.slice(0);r.length>n?r.splice(n,r.length-n,s):r.push(s),y({action:a,location:s,index:n,entries:r})}})},S=function(e,n){(0,i.default)(!("object"===("undefined"==typeof e?"undefined":r(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var a="REPLACE",s=(0,u.createLocation)(e,n,g(),A.location);f.confirmTransitionTo(s,a,t,function(e){e&&(A.entries[A.index]=s,y({action:a,location:s}))})},E=function(e){var n=c(A.index+e,0,A.entries.length-1),a="POP",r=A.entries[n];f.confirmTransitionTo(r,a,t,function(e){e?y({action:a,location:r,index:n}):y()})},R=function(){return E(-1)},P=function(){return E(1)},C=function(e){var t=A.index+e;return t>=0&&t<A.entries.length},k=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return f.setPrompt(e)},I=function(e){return f.appendListener(e)},A={length:b.length,action:"POP",location:b[v],index:v,entries:b,createHref:T,push:w,replace:S,go:E,goBack:R,goForward:P,canGo:C,block:k,listen:I};return A};t.default=p},function(e,t){"use strict";var n={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,arguments:!0,arity:!0},r="function"==typeof Object.getOwnPropertySymbols;e.exports=function(e,t,s){if("string"!=typeof t){var o=Object.getOwnPropertyNames(t);r&&(o=o.concat(Object.getOwnPropertySymbols(t)));for(var i=0;i<o.length;++i)if(!(n[o[i]]||a[o[i]]||s&&s[o[i]]))try{e[o[i]]=t[o[i]]}catch(e){}}return e}},function(e,t){e.exports='<h1>Authentication</h1> <p>The Dynamic Signal REST APIs are authenticated using OAuth2 (<a href=http://tools.ietf.org/html/rfc6749 target=_blank>RFC 6749</a>). The implementation is modeled on the <a href=http://tools.ietf.org/html/rfc6749#section-4.4 target=_blank>"Client Credentials Grant"</a> flow. In addition to these documents, Twitter has written an excellent step-by-step walkthrough <a href=https://dev.twitter.com/docs/auth/application-only-auth target=_blank>here</a>.</p> <p>The general process of logging in requires the following steps:</p> <ol> <li>Encode your access token and token secret into your basic credentials.</li> <li>Post this token to /v1/oauth2/token. The response of this call will return a bearer token.</li> <li>When calling other api endpoints, pass this bearer token in the Authorize header.</li> </ol> <p>A bearer token is equivalent to a password. You must protect this secret just like you would your password. If your bearer token is compromised, you may call the /v1/oauth2/invalidate_token to cancel access. Never share your bearer token with others, or send this token to a client machine. It is important to always transmit these bearer tokens via SSL/HTTPS. The Dynamic Signal APIs do not support standard HTTP for this reason.</p> <h2>Step 1: Encoding the basic credentials</h2> <p>Your basic credentials are constructed from your access token and access token secret. You construct the credentials using the following method:</p> <ol> <li>URL Encode the access token and token secret, using RFC1738. Most languages provide built-in support for this.</li> <li>Construct a string by combining the encoded token, a colon (":"), and the encoded token secret.</li> <li>Base64-encode the credentials.</li> </ol> <p>The following table shows the various steps:</p> <table class="table table-bordered table-striped"> <tbody> <tr> <td>Access Token</td> <td>751578FA9088DE3E120860FA7772BBA0</td> </tr> <tr> <td>Token Secret</td> <td>302CDF7EE272752025BC5591D1A3CE3B</td> </tr> <tr> <td>URL-Encoded Token</td> <td>751578FA9088DE3E120860FA7772BBA0</td> </tr> <tr> <td>URL-Encoded Secret</td> <td>302CDF7EE272752025BC5591D1A3CE3B</td> </tr> <tr> <td>Credentials</td> <td>751578FA9088DE3E120860FA7772BBA0:302CDF7EE272752025BC5591D1A3CE3B</td> </tr> <tr> <td>Base64-Encoded Credentials</td> <td>NzUxNTc4RkE5MDg4REUzRTEyMDg2MEZBNzc3MkJCQTA6MzAyQ0RGN0VFMjcyNzUyMDI1QkM1NTkxRDFBM0NFM0I=</td> </tr> </tbody> </table> <p>Do not use the credentials directly against the APIs. Instead, use it below in Step 2.</p> <h2>Step 2: Requesting a bearer token</h2> <p>The base-64 encoded credentials from step 1 are now sent to the VoiceStorm API endpoint <code>/v1/oauth2/token</code>. If the credentials are valid, the response will be a valid bearer token.</p> <p>In order to request a bearer token, you must HTTP POST your request to /v1/oauth2/token. Add an Authorization header with the string "Basic" and your credentials from step 1. Add a Content-Type header of "application/x-www-form-urlencoded;charset=UTF-8" and include the request body "grant_type=client_credentials".</p> <p>The server will include a JSON payload with two fields, the token_type and the access_token. The token_type should always be "bearer". Save away your access token from the field "access_token".</p> <p>Subsequent requests will return the same access token, until you invalidate it. The token does not expire. You can invalidate the token with the /v1/oauth2/invalidate_token API.</p> <h3>Example Request:</h3> <pre class=language-http><code class=language-http>POST /oauth2/token HTTP/1.1\r\nHost: sample.api.voicestorm.com\r\nAuthorization: Basic NzUxNTc4RkE5MDg4REUzRTEyMDg2MEZBNzc3MkJCQTA6MzAyQ0RGN0VFMjcyNzUyMDI1QkM1NTkxRDFBM0NFM0I=   \r\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8   \r\nContent-Length: 29\r\ngrant_type=client_credentials\r\n</code></pre> <h3>Example Response:</h3> <pre class=language-http><code class=language-http>HTTP/1.1 200 OK\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 68   \r\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8  \r\n{"token_type":"bearer","access_token":"abcdefghijklmnopqrstuvwxyz"}  \r\n</code></pre> <h2 id=authentication_3>Step 3: Making a normal API request with the token</h2> <p>In order to use the API with the bearer token, you must add an HTTP Authorization header with the string "Bearer" followed by the access token from Step 2.</p> <pre class=language-http><code class=language-http>GET /v1/ping/hello HTTP/1.1\r\nHost: sample.api.voicestorm.com\r\nAuthorization: Bearer abcdefghijklmnopqrstuvwxyz   \r\n</code></pre> '},function(e,t){e.exports='<h1 id=objects>Common Objects</h1> <h2 id=objects_leaderboards>Leaderboards</h2> <p>The leaderboard is a collection of users that have been scored based on points earned for sharing or other activities. A number of leaderboards may be defined in the VoiceStorm Management Console. Each of these leaderboards may be accessed by the APIs. The leaderboard will include some basic details such as title and description, and a list of users and their ranks and scores.</p> <h2 id=objects_posts>Posts</h2> <p>The VoiceStorm API works with several key types of objects. They are Posts, Leaderboards, Providers, Streams, Tags and Users.</p> <p>The basic unit of content in the system is a post. A post is a piece of content that can be viewed, and shared or commented on. It may be created by a manager, a member, or imported from a variety of sources including RSS, Twitter, Facebook, or other social channels. It may be textual, a photo, or a video.</p> <p>Posts also have a number of other metadata attached to it. This includes detailed information about the author, a collection of links, a collection of tags and a list of media that may be attached to the post. The API reference describes the complete set of fields on the post.</p> <h2 id=objects_providers>Providers</h2> <p>In the VoiceStorm API, a social network is called a "Provider". The VoiceStorm API supports dozens of providers including: Facebook, Twitter, LinkedIn, Instagram, Tumblr, WordPress, Google+, Blogger and many others. Providers may be supported for sharing. They may also be supported for login and registration. Using the /v1/providers API, you may determine which providers are enabled for various operations.</p> <h2 id=objects_streams>Streams</h2> <p>A collection of posts is called a stream. Various streams may be defined by your customer service account manager. These streams define which posts appear based on rules around dates, audiences, sources, and tags. You may request a single stream of posts, or you may request several streams simultaneously. To make efficient use of API calls, you may request a just the post IDs or you may request the complete body of the posts in the stream.</p> <h2 id=objects_tags>Tags</h2> <p>In the VoiceStorm platform, a tag is a way of categorizing a user or post. Tags are used to classify users, assign posts to streams and assign users to leaderboards. User tags and post tags are separate namespaces, and do not need to overlap.</p> <h2 id=objects_users>Users</h2> <p>A user is the fundamental object defining a member of a VoiceStorm community. Users can login and register, share content, create posts, earn points and appear in leaderboards. Users can connect to social providers to create channels that they can share posts on.</p> ';
},function(e,t){e.exports='<h1>Image Formats</h1> <p>The VoiceStorm API uses a standard representation of image sizes. We provide various scaled versions for optimal performance. You can pick the size closest to the size your need and scale up or down. <strong>Note that not all sizes will be available for all object types.</strong></p> <table class="table table-bordered table-striped"> <tbody> <tr> <td><strong>Original</strong></td> <td>The original image</td> </tr> <tr> <td><strong>Box960</strong> </td> <td>An image where the longest edge is constrained to be 960 pixels</td> </tr> <tr> <td><strong>Box640</strong> </td> <td>An image where the longest edge is constrained to be 640 pixels</td> </tr> <tr> <td><strong>Box320</strong></td> <td>An image where the longest edge is constrained to be 320 pixels</td> </tr> <tr> <td><strong>Box100</strong></td> <td>An image where the longest edge is constrained to be 100 pixels</td> </tr> <tr> <td><strong>Box80</strong></td> <td>An image where the longest edge is constrained to be 80 pixels</td> </tr> <tr> <td><strong>Box40</strong></td> <td>An image where the longest edge is constrained to be 40 pixels</td> </tr> <tr> <td><strong>Square160</strong></td> <td>A square image of exact dimensions 160x160 pixels</td> </tr> <tr> <td><strong>Square80</strong></td> <td>A square image of exact dimensions 80x80 pixels</td> </tr> <tr> <td><strong>Square40</strong></td> <td>A square image of exact dimensions 40x40 pixels</td> </tr> <tr> <td><strong>Square20</strong></td> <td>square image of exact dimensions 20x20 pixels</td> </tr> </tbody> </table>'},function(e,t){e.exports="<h1>Getting Started with the Dynamic Signal APIs</h1> <p>The Dynamic Signal APIs are a robust set of REST APIs and JavaScript widgets that allow you to build a fully functional social community on top of the Dynamic Signal platform. Our APIs allow you to manage content, register users, retrieve leaderboards, manage notifications, and many additional actions. Our JavaScript widgets allow a web developer to easily display content or content streams, user profiles, common login and registration tasks, and show leaderboards. By using a combination of these APIs and Widgets, you can spin up a fully capable employee engagement or customer advocacy portal. Our APIs and Widgets work with standard web and mobile technologies.</p> <p>This getting started guide allows a developer to quickly and easily get up to speed and build beautiful, easy to use, and powerful customer advocacy portals. You let us worry about the hard stuff around user registration, social provider registration, content ingestion, curation and management. You are freed up to spend your time building the site and focusing on providing a great user experience.</p> <h2>REST APIs</h2> <p>The Dynamic Signal REST APIs enable server-to-server communications between your community portal and the Dynamic Signal servers. You can use these APIs to perform tasks on users, content, and other objects. You can use these server-to-server APIs in coordination with the JavaScript SDKs to build a rich and fully-featured social web site.</p> <h2>Your API Keys and Endpoints</h2> <p>The Dynamic Signal REST APIs require API keys to access the platform. You can get these API keys from your customer service account manager. The API keys include an access token and a secret. Treat these credentials, just like you would your user names, passwords, or other sensitive security information. If you suspect your credentials have been compromised, please contact customer service immediately. Your customer service account manager will also give you your endpoints. The endpoint will look something like &lt;yourhostname&gt;.api.voicestorm.com. The rest of this document will use sample.api.voicestorm.com.</p> "},function(e,t){e.exports='<h1>JSON Data Types</h1> <p>The VoiceStorm uses standard JSON data types.</p> <table class="table table-bordered table-striped"> <tbody> <tr> <td><strong>bool</strong></td> <td>A Boolean (true or false)</td> </tr> <tr> <td><strong>int</strong></td> <td>A signed 32-bit integer represented as a JavaScript number</td> </tr> <tr> <td><strong>long</strong></td> <td>A signed 64-bit integer represented as a JavaScript number</td> </tr> <tr> <td><strong>dateTime</strong></td> <td>An ISO8601 Date and Time represented as a Javascript string</td> </tr> <tr> <td><strong>string</strong></td> <td>A JavaScript string</td> </tr> <tr> <td><strong>guid</strong></td> <td><a href=http://en.wikipedia.org/wiki/Globally_unique_identifier>A globally unique identifier </a></td> </tr> <tr> <td><strong>double</strong></td> <td>A double-precision floating-point number represented as a JavaScript number</td> </tr> </tbody> </table> <p>Request and response objects may include nested objects. The API documentation will cross-reference these objects.</p> <p>Data types may also be referred to as arrays, in this case a JavaScript <strong>array</strong> with the syntax [ obj1, obj2 ] or a <strong>collection</strong>, which is a JSON object with key/value pairs.</p> '},function(e,t){e.exports='<h1 id=request>Making a Request</h1> <h2 id=request_conventions>Request Conventions</h2> <p>All VoiceStorm API requests are made by HTTPS. Requests may be GET requests for read-only requests. PUT or POST requests are used for update requests. Most requests support both the PUT verb and the POST verb for platforms that don’t support PUT. Some requests take different actions based on PUT or POST (namely the image upload APIs).</p> <h2 id=request_parameters>Request Parameters</h2> <p>The VoiceStorm APIs support a flexible way of sending request parameters. Generally request parameters can be sent by using a query string, a form post, or an uploaded JSON object. Certain request parameters are also sent as part of the URL itself.</p> <p>For example, all of these are identical:</p> <pre class=language-http><code class=language-http>GET /v1/sample/hello HTTP/1.1</code></pre> <pre class=language-http><code class=language-http>GET /v1/sample?text=hello HTTP/1.1</code></pre> <pre class=language-http><code class=language-http>GET /v1/sample?text=hello HTTP/1.1\r\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8\r\nContent-Length: 10\r\ntext=hello</code></pre> <pre class=language-http><code class=language-http>PUT /v1/sample HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: 14\r\n{text:"hello"}</code></pre> <p>Arrays may be sent as JSON arrays or comma-separated query string parameters, or multiple query string parameters.</p> <pre class=language-http><code class=language-http>GET /v1/sample?message=hello%2cthere HTTP/1.1</code></pre> <pre class=language-http><code class=language-http>GET /v1/sample?message=hello&amp;message=there HTTP/1.1</code></pre> <pre class=language-http><code class=language-http>POST /v1/sample HTTP/1.1\r\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8\r\nContent-Length: 27\r\nmessage=hello&amp;message=ther</code></pre> <pre class=language-http><code class=language-http>PUT /v1/sample HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: 28\r\n{message:["hello","there"]}</code></pre> <h2 id=request_format>Error Format</h2> <p>Successful requests will always return an HTTP 200 OK status code. If there is an error, a variety of different HTTP error codes will be returned, including 401 (Unauthorized), 403 (Forbidden), 404 (Not Found), 500 (Server Error). In addition to the HTTP status code, an error JSON object will be returned. The error format will always include a code. The code may be one of the following strings:</p> <ul> <li>already_exists</li> <li>invalid_endpoint</li> <li>invalid_response</li> <li>invalid_request</li> <li>login_failed</li> <li>not_found</li> <li>not_logged_in</li> <li>offline</li> <li>server_error</li> <li>success</li> <li>unauthorized</li> </ul> <p>The error will also include an array of messages that may aid the developer in determining the reason for the error.</p> <h4>Example Request URL:</h4> <pre class=language-http><code class=language-http>http://sample.api.voicestorm.com/v1/user/0</code></pre> <h4>Example Response:</h4> <pre class=language-javascript><code class=language-javascript>{\r\ncode: "not_found", "messages": [ ]\r\n}</code></pre> <h2 id=request_pagination>Pagination</h2> <p>The VoiceStorm API supports a standard form of request pagination. The caller can provide the starting point (called the "skip"), and the number of items to return (called the "take"). In the response JSON, an array of items will be returned, along with the total number of objects ("total") and the skip value to use during the next request ("next").</p> <h2 id=request_first>Your First Request</h2> <p>This section shows you how to make your first request to the VoiceStorm API. We are going to make a ping request. The server will respond with the test that is sent in.</p> <pre class=language-http><code class=language-http>GET /v1/ping/hello%20world HTTP/1.1\r\nAccept: *\r\nHost: sample.api.voicestorm.com\r\nUser-Agent: Sample Site\r\nConnection: close\r\n</code></pre> <p>Response:</p> <pre class=language-http><code class=language-http>HTTP/1.1 200 OK\r\nCache-Control: private\r\nContent-Type: application/json; charset=utf-8\r\nDate: Tue, 27 Aug 2013 23:37:01 GMT\r\nConnection: close\r\nContent-Length: 26\r\n{"text":"Up: hello world"}\r\n</code></pre> <p>Congratulations you have made your first request. You can also use <a href=http://curl.haxx.se/ >curl</a> to issue the command:</p> <pre class=language-bash><code class=language-bash>curl http://sample.api.voicestorm.com/v1/ping/hello \r\n</code></pre> <p>The response will be the JSON:</p> <pre class=language-javascript><code class=language-javascript>{\r\n    text:"Up: hello world"\r\n}\r\n</code></pre> <p>If you want to see the headers, you can add -i to the command line.</p> <p>To learn more about curl, please visit <a href=http://curl.haxx.se/ >http://curl.haxx.se/</a>.</p>'},function(e,t){e.exports='<h1>Post Routing</h1> <p>In order to properly handle the display of posts from social shares, emails, and other actions, you must configure the post routing URL in the VoiceStorm platform. A post URL will have two components: a base URL which you can configure, and post specific information which is appended by the platform. The post specific information includes the post ID and the SEO-optimized URL "slug".</p> <p>For example, if you site is hosted at <a href=http://www.sample.com>www.sample.com</a> and you want your post permalinks to start with the prefix /post/view. You would set your base url to <a href=http://www.sample.com/post/view>http://www.sample.com/post/view</a>. If a user shares the post with ID abc123 and the title "An Interesting Post", the generated URL would be</p> <p><a href=http://www.sample.com/post/view/abc123/an-interesting-post>http://www.sample.com/post/view/abc123/an-interesting-post</a>.</p> <p>After being handled by the VoiceStorm URL shortener, the request would be redirected to your URL as above. From this page you can render the post or redirect it further.</p> <p>Additionally for optimum SEO results, the single-post view pages should be rendered server-side. Post data should be fetched via the REST API, instead of the JS SDK.</p>'},function(e,t){e.exports="<h1>Rate Limiting</h1> <p>The VoiceStorm API is rate limited by both the calling user and the application itself. The exact limits are subject to change. If you encounter frequent rate limiting, please contact your customer service account manager.</p> "},function(e,t){e.exports='<h1 id=tasks>Simple Tasks</h1> <p>Now that we have covered the basics, here are some basic requests and responses to help you get going.</p> <h2 id=tasks_user>Get a User</h2> <p>We are going to request the profile on user 1000, our sample user. In addition to asking for the basic user, we are using the “include” property to ask for the user’s profile images and channels.</p> <h4>Request:</h4> <pre class=language-bash><code class=language-bash>curl "http://sample.api.voicestorm.com/v1/user/1000?include=images&amp;include=channels"</code></pre> <h4>Response:</h4> <pre class=language-javascript><code class=language-javascript>{\r\n    id: 1000,\r\n    userName: "sample@user.com",\r\n    displayName: "Sample User",\r\n    fullName: "Sample User",\r\n    firstName: "Sample",\r\n    lastName: "User",\r\n    organizationName: "SA",\r\n    displayNameFormat: "Full",\r\n    status: "Active",\r\n    lastActivityDate: "2013-07-26T22:41:34.2370000Z",\r\n    title: "My Title",\r\n    location: "Somewhere, USA",\r\n    aboutMe: "This is what I have to say about myself",\r\n    followerCount: 1013,\r\n    isPublic: false,\r\n    pointBalance: 5949,\r\n    unredeemedPoints: 5949,\r\n    redeemedPoints: 0,\r\n    createdDate: "2012-03-12T18:39:50.9770000Z",\r\n    modifiedDate: "2013-08-10T01:21:49.8870000Z",\r\n    profileUrls: ["http://www.myprofilepage.com"],\r\n    statistics: {\r\n        shareCount: 123,\r\n        reactionCount: 3,\r\n        impressionCount: 162,\r\n        clickCount: 16739\r\n    },\r\n    tags: {\r\n        tags: {}\r\n    },\r\n    userChannels: [{\r\n        userChannelId: 1000,\r\n        userId: 1000,\r\n        provider: "Blogger",\r\n        name: "Hello world!",\r\n        displayName: "Hello world!",\r\n        providerUserId: "0",\r\n        status: "Active",\r\n        url: "http://sample.blogspot.com/",\r\n        friends: 0,\r\n        followers: 0,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 485,\r\n        sourceDisplayName: "Hello world!",\r\n        reach: 0,\r\n        statistics: {\r\n            shareCount: 9,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 48\r\n        }\r\n    },\r\n    {\r\n        userChannelId: 171,\r\n        userId: 1000,\r\n        externalId: "00000000-0000-0000-0000-000000000000",\r\n        provider: "Facebook",\r\n        name: "sample.user",\r\n        displayName: "Sample User",\r\n        providerUserId: "100000000000000",\r\n        status: "Active",\r\n        url: "http://www.facebook.com/sample.user",\r\n        friends: 11,\r\n        followers: 0,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 423,\r\n        sourceDisplayName: "Sample User",\r\n        reach: 11,\r\n        statistics: {\r\n            shareCount: 24,\r\n            reactionCount: 3,\r\n            impressionCount: 83,\r\n            clickCount: 15117\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/7928f82c-cf80-4d60-8651-daddfbe57128",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/7928f82c-cf80-4d60-8651-daddfbe57128_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            },\r\n        }\r\n    },\r\n    {\r\n        userChannelId: 1242,\r\n        userId: 1000,\r\n        externalId: "00000000-0000-0000-0000-000000000000",\r\n        provider: "FacebookPage",\r\n        displayName: "MyCommunity",\r\n        providerUserId: "200000000000000",\r\n        status: "Active",\r\n        url: "https://www.facebook.com/pages/MyCommunity/200000000000000",\r\n        friends: 0,\r\n        followers: 1,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 158,\r\n        sourceDisplayName: "MyCommunity",\r\n        reach: 1,\r\n        statistics: {\r\n            shareCount: 19,\r\n            reactionCount: 0,\r\n            impressionCount: 4,\r\n            clickCount: 295\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/f8ca10af-0333-49f3-b629-19ced98d938e",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/f8ca10af-0333-49f3-b629-19ced98d938e_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        userChannelId: 815,\r\n        userId: 1000,\r\n        provider: "GooglePlus",\r\n        name: "Sample User",\r\n        displayName: "Sample User",\r\n        providerUserId: "111111111111111111111",\r\n        status: "Active",\r\n        url: "https://plus.google.com/111111111111111111111",\r\n        friends: 0,\r\n        followers: 0,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 0,\r\n        sourceDisplayName: "Sample User",\r\n        reach: 0,\r\n        statistics: {\r\n            shareCount: 0,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 0\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/685edf2b-620c-4524-8e95-4cda360991bb",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/685edf2b-620c-4524-8e95-4cda360991bb_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n         }\r\n    },\r\n    {\r\n        userChannelId: 8606,\r\n        userId: 1000,\r\n        provider: "LinkedIn",\r\n        name: "Sample User",\r\n        displayName: "Sample User",\r\n        providerUserId: "0000000000",\r\n        status: "Active",\r\n        url: "http://www.linkedin.com/pub/sample-user/00/000/000",\r\n        friends: 10,\r\n        followers: 0,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 22,\r\n        sourceDisplayName: "Sample User",\r\n        reach: 10,\r\n        statistics: {\r\n            shareCount: 2,\r\n            reactionCount: 0,\r\n            impressionCount: 20,\r\n            clickCount: 1\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/b40e25ad-689c-46a2-af11-4ddd7a266e6c",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/b40e25ad-689c-46a2-af11-4ddd7a266e6c_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n         }\r\n    },\r\n    {\r\n        userChannelId: 864,\r\n        userId: 1000,\r\n        provider: "Tumblr",\r\n        name: "Sample User",\r\n        displayName: "Sample User",\r\n        providerUserId: "sample.tumblr.com",\r\n        status: "Active",\r\n        url: "http://sample.tumblr.com/",\r\n        friends: 0,\r\n        followers: 0,\r\n        following: 6,\r\n        posts: 75,\r\n        views: 0,\r\n        pointBalance: 155,\r\n        sourceDisplayName: "Sample User",\r\n        reach: 0,\r\n        statistics: {\r\n            shareCount: 6,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 32\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/35b80540-5b56-4def-8dfd-cd2b53cb2711",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/35b80540-5b56-4def-8dfd-cd2b53cb2711_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        userChannelId: 850,\r\n        userId: 1000,\r\n        externalId: "00000000-0000-0000-0000-000000000000",\r\n        provider: "Twitter",\r\n        name: "sampleuser",\r\n        displayName: "sampleuser",\r\n        providerUserId: "000000000",\r\n        status: "Active",\r\n        url: "http://twitter.com/sampleuser",\r\n        friends: 0,\r\n        followers: 10,\r\n        following: 17,\r\n        posts: 710,\r\n        views: 0,\r\n        pointBalance: 578,\r\n        sourceDisplayName: "sampleuser",\r\n        reach: 10,\r\n        statistics: {\r\n            shareCount: 27,\r\n            reactionCount: 0,\r\n            impressionCount: 106,\r\n            clickCount: 47\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/635f8f0b-269c-4583-b988-bb6024af9b3c",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/635f8f0b-269c-4583-b988-bb6024af9b3c_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        userChannelId: 878,\r\n        userId: 1000,\r\n        provider: "TypePad",\r\n        name: "Sample\'s blog",\r\n        displayName: "Sample\'s blog",\r\n        providerUserId: "sampleuser",\r\n        status: "Active",\r\n        url: "http://sampleuser.typepad.com/blog/",\r\n        friends: 0,\r\n        followers: 0,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 90,\r\n        sourceDisplayName: "Sample\'s blog",\r\n        reach: 0,\r\n        statistics: {\r\n            shareCount: 6,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 27\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/5e3873bf-4509-4129-b6b3-603fea1f76be",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/5e3873bf-4509-4129-b6b3-603fea1f76be_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n         }\r\n    },\r\n    {\r\n        userChannelId: 885,\r\n        userId: 1000,\r\n        provider: "WordPress",\r\n        name: "sampleuser",\r\n        displayName: "sampleuser | Just another WordPress.com site",\r\n        providerUserId: "sampleuser",\r\n        status: "Active",\r\n        url: "http://sampleuser.wordpress.com",\r\n        friends: 0,\r\n        followers: 0,\r\n        following: 0,\r\n        posts: 0,\r\n        views: 0,\r\n        pointBalance: 315,\r\n        sourceDisplayName: "sampleuser | Just another WordPress.com site",\r\n        reach: 0,\r\n        statistics: {\r\n            shareCount: 5,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 4830\r\n        },\r\n        profilePictureImages: {\r\n            Original: {\r\n                size: "Original",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/76eb2f3d-48ca-49b1-ace5-0fee116ff1db",\r\n                mimeType: "image/png"\r\n            },\r\n            Square160: {\r\n                size: "Square160",\r\n                cdnUrl: "https://ssl.rackcdn.com/101/UserChannelIcon/76eb2f3d-48ca-49b1-ace5-0fee116ff1db_S160",\r\n                width: 160,\r\n                height: 160,\r\n                mimeType: "image/png"\r\n            }\r\n}\r\n    }],\r\n    securityGroups: ["Member", "PostAuthor"],\r\n    profilePictureImages: {\r\n        Original: {\r\n            size: "Original",\r\n            cdnUrl: "https://ssl.rackcdn.com/101/UserPicture/e6d7bfc6-daa0-459f-a3a0-fad3d02d576e",\r\n            mimeType: "image/jpeg"\r\n        },\r\n        Square160: {\r\n            size: "Square160",\r\n            cdnUrl: "https://ssl.rackcdn.com/101/UserPicture/e6d7bfc6-daa0-459f-a3a0-fad3d02d576e_S160",\r\n            width: 160,\r\n            height: 160,\r\n            mimeType: "image/jpeg"\r\n       }\r\n    }\r\n}\r\n</code></pre> <h2 id=tasks_post>Get A Post</h2> <p>The next task we are going to demonstrate is how to get a post. Call the /v1/post API with the post GUID. As above, you can request images as an include option.</p> <h4>Request:</h4> <pre class=language-bash><code class=language-bash>curl "http://sample.api.voicestorm.com/v1/post/b5d9993c59474c67ab9244b7a3afe0de?include=images"</code></pre> <h4>Response:</h4> <pre class=language-javascript><code class=language-javascript>{\r\n    postId: "b5d9993c59474c67ab9244b7a3afe0de",\r\n    postSourceId: 1000,\r\n    title: "http://www.wired.com/autopia/2013/08/hyperloop-elon-musk/",\r\n    description: "This Is Hyperloop: Elon Musk\'s Vision of Mass Transit | Autopia | Wired.comElon Musk has unveiled his plans for the Hyperloop, an 800-mph tube that would shotgun passengers from SF to LA in 35 minutes at 700 mph.",\r\n    content: "This Is Hyperloop: Elon Musk\'s Vision of Mass Transit | Autopia | Wired.comElon Musk has unveiled his plans for the Hyperloop, an 800-mph tube that would shotgun passengers from SF to LA in 35 minutes at 700 mph.",\r\n    permaLink: "http://www.wired.com/autopia/2013/08/hyperloop-elon-musk/",\r\n    cleanPermaLink: "http://www.wired.com/autopia/2013/08/hyperloop-elon-musk/",\r\n    postType: "Text",\r\n    postSourceType: "Brand",\r\n    postBylineType: "Source",\r\n    provider: "Facebook",\r\n    approvalState: "Published",\r\n    displayMode: "DisplayInAppWithLink",\r\n    status: "Active",\r\n    userEditable: false,\r\n    sharable: true,\r\n    broadcasted: false,\r\n    pinned: false,\r\n    publishDate: "2013-08-12T16:54:19.0000000Z",\r\n    modifiedDate: "2013-08-28T00:31:04.4158190Z",\r\n    createdDate: "2013-08-13T00:22:11.7609680Z",\r\n    startDate: "2013-08-12T04:00:00.0000000Z",\r\n    endDate: "2100-12-31T00:00:00.0000000Z",\r\n    receivedPublishPoints: false,\r\n    sharePoints: 5,\r\n    clickPoints: 0,\r\n    providerPostId: "100000000000000_000000000000000",\r\n    urlSlug: "http-www-wired-com-autopia-2013-08-hyperloop-elon-musk",\r\n    statistics: {\r\n        totalInAppShareCount: 2,\r\n        trackingId: "000000",\r\n        shareCount: 2,\r\n        reactionCount: 0,\r\n        impressionCount: 0,\r\n        clickCount: 1\r\n    },\r\n    author: {\r\n        userId: 1000,\r\n        author: "Sample User",\r\n        profileImageUrl: "https://graph.facebook.com/v2.8/100000000000000/picture",\r\n        providerUserName: "Sample User",\r\n        profileUrl: "http://www.facebook.com/sample.user"\r\n    },\r\n    links: [],\r\n    tags: [{\r\n        name: "BrandSource",\r\n        urlSafeName: "BrandSource"\r\n    }],\r\n    media: [],\r\n    images: {\r\n        Original: {\r\n            size: "Original",\r\n            cdnUrl: "https://cdn.rackcdn.com/101/post/f025fe96-afda-45e0-a242-a12f2906b15d",\r\n            width: 154,\r\n            height: 154,\r\n            mimeType: "image/jpeg"\r\n        },\r\n        Box960: {\r\n            size: "Box960",\r\n            cdnUrl: "https://cdn.rackcdn.com/101/post/f025fe96-afda-45e0-a242-a12f2906b15d_B960",\r\n            width: 154,\r\n            height: 154,\r\n            mimeType: "image/jpeg"\r\n        },\r\n        Square80: {\r\n            size: "Square80",\r\n            cdnUrl: "https://cdn.rackcdn.com/101/post/f025fe96-afda-45e0-a242-a12f2906b15d_S80",\r\n            width: 80,\r\n            height: 80,\r\n            mimeType: "image/jpeg"\r\n        },\r\n         Box40: {\r\n            size: "Box40",\r\n            cdnUrl: "https://cdn.rackcdn.com/101/post/f025fe96-afda-45e0-a242-a12f2906b15d_B40",\r\n            width: 40,\r\n            height: 40,\r\n            mimeType: "image/jpeg"\r\n        }\r\n    }\r\n}\r\n</code></pre> <h2 id=tasks_stream>Get A Stream</h2> <p>A post stream is a list of posts. You can download several posts at once for display.</p> <h4>Request:</h4> <pre class=language-bash><code class=language-bash>curl "http://sample.api.voicestorm.com/v1/stream/Showcase?skip=31&amp;take=2\r\n</code></pre> <h4>Response:</h4> <pre class=language-javascript><code class=language-javascript>{\r\n    posts: [{\r\n        postId: "6a7c5aaaa0394cd2a1cc375543ec76c1",\r\n        postSourceId: 272,\r\n        title: "NASA Selects Contract for Information Technology Services",\r\n        description: "NASA has awarded Arctic Slope Regional Corp. (ASRC) Federal Research and Technology Solutions of Greenbelt, Md., for information technology (IT) services at the agency\'s Ames Research Center in Moffett Field, Calif.",\r\n        permaLink: "http://www.nasa.gov/press/2013/july/nasa-selects-contract-for-information-technology-services/",\r\n        cleanPermaLink: "http://www.nasa.gov/press/2013/july/nasa-selects-contract-for-information-technology-services/",\r\n        postType: "Text",\r\n        postSourceType: "Member",\r\n        postBylineType: "Source",\r\n        provider: "SyndicatedUrl",\r\n        approvalState: "Published",\r\n        displayMode: "DisplayInAppWithLink",\r\n        status: "Active",\r\n        userEditable: false,\r\n        sharable: true,\r\n        broadcasted: false,\r\n        pinned: false,\r\n        publishDate: "2013-07-24T13:22:11.3354570Z",\r\n        modifiedDate: "2013-07-24T20:22:30.4152340Z",\r\n        createdDate: "2013-07-24T20:22:30.4152340Z",\r\n        startDate: "2013-07-24T04:00:00.0000000Z",\r\n        endDate: "2100-12-31T00:00:00.0000000Z",\r\n        receivedPublishPoints: false,\r\n        sharePoints: 6,\r\n        clickPoints: 8,\r\n        providerPostId: "http://www.nasa.gov/press/2013/july/nasa-selects-contract-for-information-technology-services",\r\n        urlSlug: "nasa-selects-contract-information-technology-services",\r\n        statistics: {\r\n            totalInAppShareCount: 0,\r\n            shareCount: 0,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 0\r\n        },\r\n        author: {\r\n            userId: 7624,\r\n            author: "NASA Breaking News",\r\n            providerUserName: "NASA Breaking News",\r\n            profileUrl: "http://www.nasa.gov/audience/formedia/features/index.html"\r\n        },\r\n        links: [],\r\n        tags: [{\r\n            name: "Showcase",\r\n            urlSafeName: "Showcase"\r\n        },\r\n        {\r\n            name: "Athlete Profile",\r\n            urlSafeName: "Athlete-Profile"\r\n        },\r\n        {\r\n            name: "Ambassador Profile",\r\n            urlSafeName: "Ambassador-Profile"\r\n        },\r\n        {\r\n            name: "Ambassador Pick",\r\n            urlSafeName: "Ambassador-Pick"\r\n        }],\r\n        media: []\r\n    },\r\n    {\r\n        postId: "b569487e50b843bf8226c70c4a6a44bc",\r\n        postSourceId: 272,\r\n        title: "Tropical Ecosystems Boost Carbon Dioxide as Temperature Rises",\r\n        description: "NASA scientists and an international team of researchers have found tropical ecosystems can generate significant carbon dioxide when temperatures rise, unlike ecosystems in other parts of the world.",\r\n        permaLink: "http://www.nasa.gov/press/2013/july/tropical-ecosystems-boost-carbon-dioxide-as-temperature-rises/",\r\n        cleanPermaLink: "http://www.nasa.gov/press/2013/july/tropical-ecosystems-boost-carbon-dioxide-as-temperature-rises/",\r\n        postType: "Text",\r\n        postSourceType: "Member",\r\n        postBylineType: "Source",\r\n        provider: "SyndicatedUrl",\r\n        approvalState: "Published",\r\n        displayMode: "DisplayInAppWithLink",\r\n        status: "Active",\r\n        userEditable: false,\r\n        sharable: true,\r\n        broadcasted: false,\r\n        pinned: false,\r\n        publishDate: "2013-07-24T12:22:12.6722960Z",\r\n        modifiedDate: "2013-07-24T19:22:30.2363080Z",\r\n        createdDate: "2013-07-24T19:22:30.2363080Z",\r\n        startDate: "2013-07-24T04:00:00.0000000Z",\r\n        endDate: "2100-12-31T00:00:00.0000000Z",\r\n        receivedPublishPoints: false,\r\n        sharePoints: 6,\r\n        clickPoints: 8,\r\n        providerPostId: "http://www.nasa.gov/press/2013/july/tropical-ecosystems-boost-carbon-dioxide-as-temperature-rises",\r\n        urlSlug: "tropical-ecosystems-boost-carbon-dioxide-temperature-rises",\r\n        statistics: {\r\n            totalInAppShareCount: 0,\r\n            shareCount: 0,\r\n            reactionCount: 0,\r\n            impressionCount: 0,\r\n            clickCount: 0\r\n        },\r\n        author: {\r\n            userId: 7624,\r\n            author: "NASA Breaking News",\r\n            providerUserName: "NASA Breaking News",\r\n            profileUrl: "http://www.nasa.gov/audience/formedia/features/index.html"\r\n        },\r\n        links: [],\r\n        tags: [{\r\n            name: "Ambassador Profile",\r\n            urlSafeName: "Ambassador-Profile"\r\n        },\r\n        {\r\n            name: "Athlete Profile",\r\n            urlSafeName: "Athlete-Profile"\r\n        },\r\n        {\r\n            name: "Showcase",\r\n            urlSafeName: "Showcase"\r\n        },\r\n        {\r\n            name: "Ambassador Pick",\r\n            urlSafeName: "Ambassador-Pick"\r\n        }],\r\n        media: []\r\n    }],\r\n    total: 169,\r\n    next: 33\r\n}\r\n</code></pre> <h2 id=tasks_image>Uploading a Profile Image</h2> <p>You can upload a user’s profile picture using one of two methods. The first is using a POST with a mime-multipart form type. This is useful when uploading from a browser and is how the JS SDK uploads images. The second way is to use a PUT and to upload the binary image directly. This mechanism is best when performing an upload from another server.</p> <p>First, let’s demonstrate the POST method. Once again we will use curl to do the upload. In this example, the file name is ajlogo.jpg. The actual binary data will be truncated for readability.</p> <pre class=language-bash><code class=language-bash>curl -v -F "file=@@ajlogo.jpg;type=image/jpeg" “http://sample.api.voicestorm.com/v1/userprofileimage?Id=1000” \r\n-H "Authorization: Bearer abcdefghijklmnopqrstuvwxyz"\r\n</code></pre> <h4>HTTP Request Headers and Body:</h4> <pre class=language-http><code class=language-http>POST /v1/userprofileimage?Id=1000 HTTP/1.1\r\nHost: sample.api.voicestorm.com\r\nAccept: */*\r\nAuthorization: Bearer abcdefghijklmnopqrstuvwxyz\r\nContent-Length: 3359\r\nContent-Type: multipart/form-data; boundary=------------------------10bd448c82e655ba\r\n--------------------------10bd448c82e655ba\r\nContent-Disposition: form-data; name="file"; filename="ajlogo.jpg"\r\nContent-Type: image/jpeg\r\n&lt;binary data truncated&gt;\r\n--------------------------10bd448c82e655ba\r\n</code></pre> <h4>HTTP Response Headers:</h4> <pre class=language-http><code class=language-http>HTTP/1.1 200 OK\r\nCache-Control: private\r\nContent-Type: application/json; charset=utf-8\r\nDate: Wed, 28 Aug 2013 17:28:59 GMT\r\nContent-Length: 18\r\n</code></pre> <h4>Response Body:</h4> <pre class=language-javascript><code class=language-javascript>{\r\n    code:"success"\r\n}\r\n</code></pre> <p>Next we will demonstrate the PUT method. The PUT method is simpler for server-to-server uploads, but does not work from a browser context.</p> <h4>Request:</h4> <pre class=language-bash><code class=language-bash>curl -v -X PUT -T "ajlogo.jpg" "http://localhost:16071/v1/userprofileimage?Id=1000" -H "Content-Type: image/jpeg" \r\n-H "Authorization: Bearer abcdefghijklmnopqrstuvwxyz"\r\n</code></pre> <h4>HTTP Request Headers and Body:</h4> <pre class=language-http><code class=language-http>PUT /v1/userprofileimage?Id=1000 HTTP/1.1\r\nHost: sample.api.voicestorm.com\r\nAccept: */*\r\nAuthorization: Bearer abcdefghijklmnopqrstuvwxyz\r\nContent-Length: 3171\r\nContent-Type: image/jpeg\r\n&lt;request body truncated&gt;\r\n</code></pre> <h4>HTTP Response Headers:</h4> <pre class=language-http><code class=language-http>HTTP/1.1 200 OK\r\nCache-Control: private\r\nContent-Type: application/json; charset=utf-8\r\nDate: Wed, 28 Aug 2013 18:18:26 GMT\r\nContent-Length: 18\r\n</code></pre> <h4>Response Body:</h4> <pre class=language-javascript><code class=language-javascript>{\r\n    code:"success"\r\n}\r\n</code></pre> <h2 id=tasks_registration>Registration</h2> <p>Registering a new user through the API can be done by sending the appropriate request, which minimally should include email and password, to the server-to-server "<a href=/api/Registration#post-register>/v1/register</a>" endpoint. If the community does not have public registration enabled, then the request must also include a valid "InvitationKey" that comes from the invitation email. A valid request will return a <a href=/api/Login#post-login>LoginResponse</a>.</p> <p>If the community uses the <a href=/javascript-sdk>JavaScript SDK</a>, and wishes to automatically log in the user after a successful registration, it can call the <a href=/javascript-sdk>VoiceStorm.loginWithToken(token, expiration)</a> method by passing in the token and expiration values from the <a href=/api/Login#post-login>LoginResponse</a>.</p> ';
},function(e,t){e.exports='<h1 id=auth>User Authentication and Security</h1> <p> Regardless of whether your pages are HTTP or HTTPS, all AJAX calls made by the VoiceStorm SDK are done over HTTPS. To authenticate a user, you may call <code>VoiceStorm.login()</code>. This call will return an authentication token which the VoiceStorm SDK will store in <a href=https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/Storage#localStorage target=_blank>localStorage</a>. localStorage is used to persist state rather than cookies because your VoiceStorm community is subject to restrictive third-party cookie enforcement. This means you should not call <code>localStorage.clear()</code> or you may inadvertently change the state of the VoiceStorm SDK. </p> <p> Because browser same-origin rules apply to localStorage, all of your pages that use the VoiceStorm SDK should be hosted on the same domain and served with the same protocol. For this reason, it is recommended to host all pages on your site with HTTPS. </p> <h1 id=social>Social Login and Channel Registration</h1> <p> When making VoiceStorm SDK calls which authenticate against social networks, such as VoiceStorm.socialLogin(), you are required to set a channel URL. This is done by assigning a URL to <code>VoiceStorm.defaults.channelUrl</code>. This is used to coordinate the results of the authentication back to the VoiceStorm SDK running on your website. </p> <p> The channel URL must be served from the same domain and protocol as the page which includes the VoiceStorm SDK. It may be used in Widget popup windows as an iframe, so the <a href=https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options target=_blank>X-Frame-Options HTTP header</a> should not be used, or should explicitly allow the hostname of your VoiceStorm community. </p> <p> The contents served by the channel URL should be a single line html file pointing to the VoiceStorm SDK: <pre class=language-javascript><code class=language-javascript>&lt;script src="https://sample.api.voicestorm.com/v1/voicestorm.js"&gt;&lt;/script&gt;</code></pre> </p> <p> Make sure to replace the hostname with the hostname of your VoiceStorm community. </p> '},function(e,t){e.exports="<h1 id=error>Error Objects</h1> <p>When VoiceStorm SDK functions fail, the promise object's error handler is called. The error object has two properties:</p> <table class=\"table table-bordered table-striped bs-table\"> <thead> <tr> <th style=min-width:25%>Property Name</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>code</td> <td>string</td> <td>One of the following strings you may switch on in code to display a friendly message to the user:<br/> <ul> <li>'already_exists'</li> <li>'invalid_endpoint'</li> <li>'invalid_response'</li> <li>'invalid_request'</li> <li>'login_failed'</li> <li>'network_timeout'</li> <li>'network_unknown'</li> <li>'not_enabled'</li> <li>'not_found'</li> <li>'not_logged_in'</li> <li>'offline'</li> <li>'server_error'</li> <li>'success'</li> <li>'unauthorized'</li> </ul> </td> </tr> <tr> <td>messages</td> <td>array</td> <td>An array of human readable strings describing the error.</td> </tr> </tbody> </table> "},function(e,t){e.exports="<h1>VoiceStorm JavaScript SDK</h1> <p>Learn about using the VoiceStorm JavaScript SDK to quickly integrate with the VoiceStorm API.</p> <h2 id=including>Including the SDK</h2> <p>All methods and URLs used by the VoiceStorm JavaScript SDK are HTTPS only. The SDK can be found at /v1/voicestorm.js of your community. For example, if your community&rsquo;s hostname is sample.api.voicestorm.com, then the SDK URL is https://sample.api.voicestorm.com/v1/voicestorm.js</p> <p>To include the VoiceStorm SDK on your page, we recommend using the following snippet immediately before the closing &lt;/body&gt; tag:</p> <pre class=language-javascript><code class=language-javascript>&lt;script&gt;\r\n    function VoiceStormAsyncInit() \r\n    {\r\n        // TODO: your page logic here! \r\n    } \r\n \r\n    // loads the SDK asynchronously \r\n    (function (d, s, id) \r\n    { \r\n        var js, fjs = d.getElementsByTagName(s)[0]; \r\n        if (d.getElementById(id)) { return; } \r\n        js = d.createElement(s); js.id = id; \r\n        js.src = 'https://sample.api.voicestorm.com/v1/voicestorm.js'; \r\n        fjs.parentNode.insertBefore(js, fjs); \r\n    }(document, 'script', 'voicestorm-sdk')); \r\n&lt;/script&gt;\r\n</code></pre> <p>There are two parts that need to be filled out before you can use the VoiceStorm SDK. First, replace sample.api.voicestorm.com with your community&rsquo;s hostname. Then, any application logic that uses the VoiceStorm SDK should be placed within or triggered by the VoiceStormAsyncInit() function. VoiceStormAsyncInit() is automatically called by the VoiceStorm SDK after it has finished loading. Placing it before the closing &lt;/body&gt; tag is highly recommended for two reasons:</p> <ul> <li>It will not interfere or slow down the normal DOM rendering of your page.</li> <li>The VoiceStorm SDK searches the DOM for VoiceStorm widgets via data-voicestorm attributes. If the VoiceStorm SDK is included in the head, those elements may not have been rendered, and the VoiceStorm SDK cannot automatically turn them into widgets.</li> </ul> <h2 id=browsers>Supported Browsers</h2> <p>The VoiceStorm JavaScript SDK is offered with support for the latest versions of Firefox, Chrome, and IE8+. Technically, it should work in any browser that implements <a href=http://caniuse.com/namevalue-storage target=_blank>localStorage</a> for persistence and either <a href=http://caniuse.com/cors target=_blank>CORS</a> or <a href=http://caniuse.com/x-doc-messaging target=_blank>postMessage</a> for cross-domain requests.</p> <h2 id=jquery>jQuery</h2> <p>The VoiceStorm JavaScript SDK internally uses <a href=http://jquery.com/ target=_blank>jQuery</a>. The promise objects most methods return are jQuery promise objects. It also contains support for several jQuery widgets. If jQuery 1.8.3 or higher is found when the VoiceStorm SDK is loaded, the existing jQuery object will be used. Otherwise, the VoiceStorm SDK will automatically load jQuery from your VoiceStorm community. If the VoiceStorm SDK loads jQuery, VoiceStorm SDK widgets are not available.</p>"},function(e,t){e.exports="<h1 id=promise>Promise Objects</h1> <p>Other than the utility functions, all methods of the global VoiceStorm object are asynchronous and return <a href=http://api.jquery.com/Types/#Promise target=_blank>jQuery promise objects</a>. This allows you to easily chain or combine VoiceStorm SDK functions. Here are a few examples:</p> <h2 id=promise-chaining>Chaining</h2> <p>This example first gets the currently logged on user and then the user&rsquo;s affiliations:</p> <pre class=language-javascript><code class=language-javascript>VoiceStorm.currentUser().then(function (user) { \r\n    return VoiceStorm.affiliations(); \r\n}).then(function (affiliations) { \r\n    console.log(affiliations); \r\n}).fail(function (error) { \r\n    alert('Uh oh!'); \r\n});</code></pre> <h2 id=promise-combining>Combining</h2> <p>This example waits for the results of two simultaneous calls. Assuming there is a leaderboard with an id of 10, the first request is for the ranked users of the leaderboard, and the second request is for the details of leaderboard 10. Only after both calls succeed will the success handler be called. If either fail, the error handler is triggered.</p> <pre class=language-javascript><code class=language-javascript>$.when(VoiceStorm.leaderboardRankings(10), VoiceStorm.leaderboard(10)).then(function (rankings, leaderboard) { \r\n    console.log(leaderboard); \r\n    console.log(rankings); \r\n}).fail(function () { \r\n    alert('Uh oh!'); \r\n});</code></pre>"},function(e,t){e.exports="<h1 id=customizing>Customization</h1> <p> Each widget can be customized in a number of ways. The data shown inside a widget can be customized via options. Some widgets allow their behavior to be customized via event handlers. The look of your widgets can be customized via CSS. The way a widget looks and behaves on a page can be dramatically changed via options, event handlers, and CSS. </p> <h2 id=widget-options>Widget Options</h2> <p> Each widget allows customization via options. When you create your widget via data- attributes, you specify options via attributes of the form data-voicestorm-[option]. When you create your widget programmatically you have two ways of customizing your widget. When the widget is created, you can pass an anonymous object that contains your options. After the object is created, you can use the option keyword to get and set options via the jQuery plugin. Each widget lists all its available options. </p> <pre class=language-markup><code class=language-markup>&lt;!-- Options set via data- attributes --&gt; \r\n&lt;div data-voicestorm-widget=\"stream\" data-voicestorm-take=\"5\" data-voicestorm-stream=\"Showcase\" \r\n\tdata-voicestorm-postLinkFormat=\"http://example.com/post.html?post=$id\"&gt;\r\n&lt;/div&gt;</code></pre> <pre class=language-javascript><code class=language-javascript>// Set options during initialization using an anonymous object \r\n$('#titles').VoiceStormTitles({ stream: 'Showcase', include: 'images', postLinkFormat: \r\n'http://example.com/$slug/$id' }); \r\n\r\n// Set a single option after initialization \r\n$('#titles').VoiceStormTitles('option', 'stream', 'FacebookFeed'); \r\n\t\r\n// Get the value of an option after initialization \r\nvar include = $('#titles').VoiceStormTitles('option', 'include');</code></pre> <h3 id=date-time-formatting>Date and Time Format Strings</h3> <p> Options that display a date and/or time are specified using a format string. This string may contain static text along with date and time tokens. Use these tokens to display various date and time components within the format string. </p> <table class=\"table table-params\"> <tbody> <tr> <td colspan=3><strong>Localized Time</strong> &mdash; Based on user's locale. (US standard shown as example)</td> </tr> <tr> <td><strong>LT</strong></td> <td colspan=2>8:30 PM, 20:30</td> </tr> <tr> <td><strong>LTS</strong></td> <td colspan=2>8:30:25 PM, 20:30:25</td> </tr> <tr> <td colspan=3><strong>Localized Date</strong> &mdash; Based on user's locale. (US standard shown as example)</td> </tr> <tr> <td><strong>l</strong></td> <td colspan=2>6/15/1986, 2009/6/15</td> </tr> <tr> <td><strong>ll</strong></td> <td colspan=2>Jun 15 2009, 15 Juni 2009</td> </tr> <tr> <td><strong>L</strong></td> <td colspan=2>06/15/2009, 15/06/2009</td> </tr> <tr> <td><strong>LL</strong></td> <td colspan=2>June 15 2009, 15 juni 2009</td> </tr> <tr> <td colspan=3><strong>Month</strong></td> </tr> <tr> <td><strong>M</strong></td> <td colspan=2>1 2 ... 11 12</td> </tr> <tr> <td><strong>MM</strong></td> <td colspan=2>01 02 ... 11 12</td> </tr> <tr> <td><strong>MMM</strong></td> <td colspan=2>Jan Feb ... Nov Dec</td> </tr> <tr> <td><strong>MMMM</strong></td> <td colspan=2>January February ... November December</td> </tr> <tr> <td colspan=3><strong>Day of Month</strong></td> </tr> <tr> <td><strong>D</strong></td> <td colspan=2>1 2 ... 30 31</td> </tr> <tr> <td><strong>DD</strong></td> <td colspan=2>01 02 ... 30 31</td> </tr> <tr> <td colspan=3><strong>Day of Week</strong></td> </tr> <tr> <td><strong>ddd</strong></td> <td colspan=2>Sun Mon ... Fri Sat</td> </tr> <tr> <td><strong>dddd</strong></td> <td colspan=2>Sunday Monday ... Friday Saturday</td> </tr> <tr> <td colspan=3><strong>Year</strong></td> </tr> <tr> <td><strong>YY</strong></td> <td colspan=2>70 71 ... 29 30</td> </tr> <tr> <td><strong>YYYY</strong></td> <td colspan=2>1970 1971 ... 2029 2030</td> </tr> <tr> <td colspan=3><strong>Hour</strong></td> </tr> <tr> <td><strong>H</strong></td> <td colspan=2>0 1 ... 22 23</td> </tr> <tr> <td><strong>HH</strong></td> <td colspan=2>00 01 ... 22 23</td> </tr> <tr> <td>&nbsp;</td> <td colspan=2>1 2 ... 11 12</td> </tr> <tr> <td><strong>hh</strong></td> <td colspan=2>01 02 ... 11 12</td> </tr> <tr> <td colspan=3><strong>AM/PM</strong></td> </tr> <tr> <td><strong>A</strong></td> <td colspan=2>AM PM</td> </tr> <tr> <td><strong>a</strong></td> <td colspan=2>am pm</td> </tr> <tr> <td colspan=3><strong>Minute</strong></td> </tr> <tr> <td><strong>m</strong></td> <td colspan=2>0 1 ... 58 59</td> </tr> <tr> <td><strong>mm</strong></td> <td colspan=2>00 01 ... 58 59</td> </tr> <tr> <td colspan=3><strong>Second</strong></td> </tr> <tr> <td><strong>s</strong></td> <td>0 1 ... 58 59</td> </tr> <tr> <td><strong>ss</strong></td> <td colspan=2>00 01 ... 58 59</td> </tr> <tr> <td colspan=3><strong>Time Zone Offset</strong></td> </tr> <tr> <td><strong>Z</strong></td> <td colspan=2>-07:00 -06:00 ... +06:00 +07:00</td> </tr> <tr> <td colspan=3><strong>ISO 8601 &ndash; UTC or Local based on timezoneOffset</strong></td> </tr> <tr> <td><strong>I</strong></td> <td colspan=2>2013-09-20T00:20:23Z</td> </tr> <tr> <td><strong>i </strong></td> <td colspan=2>2013-09-19T19:20:23-05:00</td> </tr> <tr> <td colspan=3><strong>Including Literal Text<br/></strong></td> </tr> <tr> <td><strong>[]</strong></td> <td colspan=2> Text inside square brackets is not interpreted as part of a format sequence:<br/> <pre class=language-javascript><code class=language-javascript>$date{[Sent on ]M/D/YYYY} // Renders: Sent on 4/14/2014</code></pre> </td> </tr> </tbody> </table> <h3 id=date-time-callback>Date and Time Callback</h3> <p> Some widgets accept a date and time callback function as an option called <code>datetimeRenderer</code>, allowing you to fine tune how dates and times are represented. This function is passed four arguments: <ul> <li><strong>date</strong> &ndash; An ISO8601 Date and Time to render, represented as a Javascript string. This date will always be in UTC and end in a letter Z. Example: \"2014-04-11T17:14:49.9263490Z\"</li> <li><strong>dateFormat</strong> &ndash; Format string requested for the date. See <a href=#date-time-formatting>Date and Time Format Strings</a> for details.</li> <li><strong>user</strong> &ndash; The currently logged in user as returned by VoiceStorm.currentUser(). Your function can use user properties, such as <code>timeZone</code>, to render a more accurate date </li> <li><strong>currentTime</strong> &ndash; The date and time on the server when this function was called. Use currentTime to calculate the time elapsed between now and <strong>date</strong>. This ISO8601 Date and Time is represented as a Javascript string. It will always be in UTC and end in a letter Z. Example: \"2014-04-12T17:15:04.1243690Z\"</li> </ul> In addition to the arguments, your function can use these global variables to access the timezone set by your community manager: <ul> <li><strong>VoiceStorm.defaults.timezoneIanaName</strong> &ndash; Community time zone represented as a tz database time zone name as set by IANA. Example: \"America/Los_Angeles\"</li> <li><strong>VoiceStorm.defaults.timezoneOffset</strong> &ndash; Community time zone represented as the difference between local time and UTC in ISO 8601 time zone designator format. Example: \"-08:00\"</li> </ul> Your function must return the string representation of date. </p> <pre class=language-javascript><code class=language-javascript>var myDateTimeRenderer = function(date, dateFormat, user, currentTime)\r\n{\r\n\t// Use Moment Timezone to render dates\r\n\t// Use user time zone or community time zone\r\n\tvar timezone = (user && user.timeZone) || VoiceStorm.defaults.timezoneIanaName);\r\n\tvar momentTz = moment.utc(datetime).tz(timezone);\r\n\treturn momentTz.format(datetimeFormat);\r\n});</code></pre> <h3 id=image-sizes>Image Sizes</h3> <p> Widgets that display an image offer a variety of pre-scaled image sizes. The sizes available differ by the type of object being shown. </p> <h4 id=post-image-sizes>Post Image Sizes</h4> <p> Post images are available in these sizes. </p> <ul class=table-style> <li><strong>None</strong> &ndash; Do not include an image</li> <li><strong>Original</strong> &ndash; Full size</li> <li><strong>Box1280</strong> &ndash; Scaled down to fit within a 1280x1280 box</li> <li><strong>Box960</strong> &ndash; Scaled down to fit within a 960x960 box</li> <li><strong>Box640</strong> &ndash; Scaled down to fit within a 640x640 box</li> <li><strong>Box320</strong> &ndash; Scaled down to fit within a 320x320 box</li> <li><strong>Box100</strong> &ndash; Scaled down to fit within a 100x100 box</li> <li><strong>Box80</strong> &ndash; Scaled down to fit within a 80x80 box</li> <li><strong>Box40</strong> &ndash; Scaled down to fit within a 40x40 box</li> <li><strong>Square320</strong> &ndash; Scaled, centered, and cropped to completely fill an 320x320 box</li> <li><strong>Square240</strong> &ndash; Scaled, centered, and cropped to completely fill an 240x240 box</li> <li><strong>Square80</strong> &ndash; Scaled, centered, and cropped to completely fill an 80x80 box</li> </ul> <h4 id=user-image-sizes>User Profile Picture Sizes</h4> <p> User profile pictures are available in these sizes. </p> <ul class=table-style> <li><strong>None</strong> &ndash; Do not include a profile picture</li> <li><strong>Original</strong> &ndash; Full size</li> <li><strong>Square80</strong> &ndash; Scaled, centered, and cropped to completely fill an 80x80 box</li> <li><strong>Square60</strong> &ndash; Scaled, centered, and cropped to completely fill an 60x60 box</li> <li><strong>Square40</strong> &ndash; Scaled, centered, and cropped to completely fill an 40x40 box</li> <li><strong>Square20</strong> &ndash; Scaled, centered, and cropped to completely fill an 20x20 box</li> </ul> <h2 id=global-options>Global Options</h2> <p>Many widgets have the same options. Rather than setting an option on each individual widget, you can set the option globally via the VoiceStorm defaults property. All widget options can be set globally via the VoiceStorm defaults property and overridden on individual widgets.</p> <pre class=language-markup><code class=language-markup>&lt;!-- Shows 20 articles: VoiceStorm.defaults.take=20 set in VoiceStormAsyncInit --&gt;\r\n&lt;div id=\"titles\" class=\"titles\"&gt;&lt;/div&gt;\r\n\r\n&lt;!-- Shows 5 articles: data-voicestorm-take=\"5\" overrides default value --&gt;\r\n&lt;div data-voicestorm-widget=\"stream\" data-voicestorm-take=\"5\" data-voicestorm-stream=\"Showcase\"&gt;&lt;/div&gt;\r\n&lt;script&gt;\r\n\tfunction VoiceStormAsyncInit()\r\n\t{\r\n\t\t// Override defaults\r\n\t\t<strong>VoiceStorm.defaults.postLinkFormat</strong> = 'http://example.org/post/$id/$slug'\r\n\t\t<strong>VoiceStorm.defaults.take</strong> = 20;\r\n\t\t$('#titles').VoiceStormTitles({ stream: 'Recommended' });\r\n\t}\r\n&lt;/script&gt;</code></pre> <p><strong>Note:</strong> Changes made to VoiceStorm.defaults in VoiceStormAsyncInit are also applied to widgets created via data- attributes.</p> <p> See <a href=/javascript-sdk/environment>Defaults</a> in the <strong>VoiceStorm JavaScript SDK</strong> for a complete list of options and information available from the global object. </p> <h2 id=events>Events</h2> <p>The VoiceStorm JavaScript SDK widgets provide custom events for most actions. Generally, these come in an infinitive and past participle form - where the infinitive (ex. <code>render</code>) is triggered at the start of an event, and its past participle form (ex. <code>rendered</code>) is triggered on the completion of an action. All VoiceStorm JavaScript SDK widget events are namespaced using the form <em>event</em>.voicestorm.<em>widget</em>.</p> <p>You can react to widget events by adding an event listener to the DOM element on which the widget is rendered.</p> <pre class=language-javascript><code class=language-javascript>$('#inbox-conversations').on('rendered.voicestorm.conversations', function (event)\r\n{\r\n\t// do something...\r\n});</code></pre> <h3>Submit Events</h3> <p> Widgets that submit data, like the <strong>ProfilePublic</strong> widget, offer a pair of events called submit and submitted. The submit event, for example <code>submit.voicestorm.profilepublic</code>, is fired <em>before</em> data is submitted to the server. Use this event to perform any custom validation or pre-submit visualization. To cancel the submission, call <code>preventDefault</code> on the event passed to your submit handler. </p> Example:<br/> <pre class=language-javascript><code class=language-javascript>$(\"#profile\").on(\"submit.voicestorm.profilepublic\", function( event )\r\n{\r\n\tif (!validatePost())\r\n\t{\r\n\t\tevent.preventDefault();\r\n\t}\r\n}</code></pre> <p> The submitted event is called after the response has been received from the server. Use this event to reset any custom submit visualizations, show a notification, or update the user interface with a success or failure indicator. Each submitted event includes a response object that indicates the success or failure of the submission. Some submitted responses include more data, such as an updated object. See the <strong>Events</strong> section of each widget for details about what its submitted event includes. </p>"},function(e,t){e.exports="<h1 id=how-widgets-work>How Widgets Work</h1> <p>You can use the VoiceStorm JavaScript SDK widgets in several ways. The easiest way is to add data- attributes to your markup. With data- attributes you can create and customize your widgets without a single line of JavaScript. If you have special requirements or need to defer rendering of the widgets, you can use JavaScript instead of data- attributes to programmatically initialize and customize your widgets.</p> <h2 id=data-attributes>Using data- Attributes</h2> <p>The only attribute required to create most widgets is data-voicestorm-widget. This attribute instructs the VoiceStorm JavaScript SDK to render a widget inside the element containing the attribute. Any content you provide in the body of the element will be replaced by the widget.</p> <pre class=language-markup><code class=language-markup>&lt;div id=\"userPosts\" data-voicestorm-widget=\"UserPosts\"&gt;&lt;/div&gt;</code></pre> <h2 id=jquery-plugins>Programmatic API</h2> <p>A more flexible alternative to creating VoiceStorm JavaScript SDK widgets is via the programmatic API using JavaScript. Each widget is added to the jQuery plugin namespace and can be attached to DOM elements on your page using jQuery plugin syntax. Each widget is available as a plugin with the name VoiceStorm[Widget Name]. For example, the Titles widget can be attached to a DOM element using the VoiceStormTitles plugin.</p> <pre class=language-javascript><code class=language-javascript>function VoiceStormAsyncInit()\r\n{\r\n\t$('#postSummaries').VoiceStormTitles({ stream: 'Showcase' });\r\n}</code></pre> <p>For more information about VoiceStormAsyncInit and jQuery requirements, see the <a href=/javascript-sdk>JavaScript SDK</a>.</p> <h3>Construction</h3> <p>Each widget is created with the programmatic API using jQuery plugin syntax, passing an optional options object.</p> <pre class=language-javascript><code class=language-javascript>// Create a ProfilePhoto widget in the DOM element with id = profilePhoto\r\n$('#profilePhoto').VoiceStormProfilePhoto();\r\n\r\n// Create a Stream widget that shows 5 posts from the Showcase stream\r\n$('#stream').VoiceStormStream({ take: 5, stream: 'Showcase' });</code></pre> <h3>Methods</h3> <p>Each widget supports at least two method calls, option and refresh. Use the option method to set or get a single option. Use the refresh method to cause the widget to reload itself using current data and options.</p> <pre class=language-javascript><code class=language-javascript>option(name) &ndash; Get current option value\r\noption(name, value) &ndash; Set the option to a new value\r\nrefresh() &ndash; Reload the widget using current data and options</code></pre> <p>You can call methods using plugin syntax where the first parameter is the name of the method.</p> <pre class=language-javascript><code class=language-javascript>// Change to the Recommended stream and refresh the contents\r\n$('#stream').VoiceStormTitles('option', 'stream', 'Recommended');\r\n$('#stream').VoiceStormTitles('refresh');\r\n\r\n// Get the value of the include option\r\nvar include = $('#stream').VoiceStormTitles('option', 'include');</code></pre> <p>You can grab the underlying JavaScript object from the jQuery data property with the same name as the plugin and call any method as a function on the returned object.</p> <pre class=language-javascript><code class=language-javascript>// Get the titles widget and call some methods\r\nvar titles = $('#titles').data('VoiceStormTitles');\r\ntitles.option('stream', 'Recommended');\r\ntitles.refresh();\r\n\r\n// Get the value of the skip option\r\nvar skip = titles.option('skip');</code></pre>"},function(e,t){e.exports='<h1 id=intro>Introduction</h1> <p> The VoiceStorm JavaScript SDK includes a set of reusable widgets to help you quickly build a website showing VoiceStorm content. The widgets use the JavaScript SDK API to get data, and use jQuery to add HTML markup to your page. The VoiceStorm JavaScript SDK widgets require jQuery version 1.8.3 or higher to be included on your page before the VoiceStorm JavaScript SDK is initialized. </p> <p> Widgets can be used to display posts, create posts, show leaderboards, and edit a user\'s profile. Each widget generates simple, semantic HTML that can be easily styled via CSS to match the look and feel of your site. </p> <p>A widget generated from this:</p> <pre class=language-markup><code class=language-markup>&lt;div class="headlines"\r\n\t  data-voicestorm-widget="titles"\r\n\t  data-voicestorm-stream="Showcase"\r\n\t  data-voicestorm-includeShareButtonStats="true"&gt;\r\n&lt;/div&gt;</code></pre> <p>Can be styled to look like this:</p> <p><img src=/img/widgets/intro.png alt="Titles widget, styled using CSS"/></p> '},function(e,t){e.exports="<h1 id=reference>Widget Reference</h1> <p> All widgets are created within an existing element on your page. You can instantiate a widget using data- attributes on the element itself. You can instantiate a widget programmatically. In either case, all widgets can be customized using options and styled using CSS. </p> "},function(e,t){e.exports='<h1 id=styling>Styling</h1> <p> VoiceStorm JavaScript SDK widgets add HTML to your page. They are designed using simple, semantic tags and class names, where needed, to allow you to highly customize the way they look on the page. Each widget is wrapped in a div element with the class name of the form voicestorm-[widgetname]-widget. This allows you to target specific widgets using CSS. </p> <p>Without additional styling, the Titles widget generates simple HTML that looks like this:</p> <p><img src=/img/widgets/style-none.png alt="Titles widget with no styling applied"/></p> <p>Applying CSS styles to the Titles widget can make it look like this:</p> <p><img src=/img/widgets/style.png alt="Titles widget with styling applied"/></p> '},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){function a(e){return null==e?void 0===e?l:i:u&&u in Object(e)?s(e):o(e)}var r=n(80),s=n(207),o=n(208),i="[object Null]",l="[object Undefined]",u=r?r.toStringTag:void 0;e.exports=a},function(e,t){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(t,function(){return this}())},function(e,t,n){var a=n(209),r=a(Object.getPrototypeOf,Object);e.exports=r},function(e,t,n){function a(e){var t=o.call(e,l),n=e[l];try{e[l]=void 0;var a=!0}catch(e){}var r=i.call(e);return a&&(t?e[l]=n:delete e[l]),r}var r=n(80),s=Object.prototype,o=s.hasOwnProperty,i=s.toString,l=r?r.toStringTag:void 0;e.exports=a},function(e,t){function n(e){return r.call(e)}var a=Object.prototype,r=a.toString;e.exports=n},function(e,t){function n(e,t){return function(n){return e(t(n))}}e.exports=n},function(e,t,n){var a=n(205),r="object"==typeof self&&self&&self.Object===Object&&self,s=a||r||Function("return this")();e.exports=s},function(e,t){function n(e){return null!=e&&"object"==typeof e}e.exports=n},function(e,t,n){function a(e,t){for(var n,a=[],r=0,s=0,o="",i=t&&t.delimiter||"/";null!=(n=v.exec(e));){var m=n[0],d=n[1],c=n.index;if(o+=e.slice(s,c),s=c+m.length,d)o+=d[1];else{var p=e[s],h=n[2],f=n[3],y=n[4],g=n[5],b=n[6],T=n[7];o&&(a.push(o),o="");var w=null!=h&&null!=p&&p!==h,S="+"===b||"*"===b,E="?"===b||"*"===b,R=n[2]||i,P=y||g;a.push({name:f||r++,prefix:h||"",delimiter:R,optional:E,repeat:S,partial:w,asterisk:!!T,pattern:P?u(P):T?".*":"[^"+l(R)+"]+?"})}}return s<e.length&&(o+=e.substr(s)),o&&a.push(o),a}function r(e,t){return i(a(e,t))}function s(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function o(e){return encodeURI(e).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function i(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,a){for(var r="",i=n||{},l=a||{},u=l.pretty?s:encodeURIComponent,m=0;m<e.length;m++){var d=e[m];if("string"!=typeof d){var c,p=i[d.name];if(null==p){if(d.optional){d.partial&&(r+=d.prefix);continue}throw new TypeError('Expected "'+d.name+'" to be defined')}if(g(p)){if(!d.repeat)throw new TypeError('Expected "'+d.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(d.optional)continue;throw new TypeError('Expected "'+d.name+'" to not be empty')}for(var h=0;h<p.length;h++){if(c=u(p[h]),!t[m].test(c))throw new TypeError('Expected all "'+d.name+'" to match "'+d.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===h?d.prefix:d.delimiter)+c}}else{if(c=d.asterisk?o(p):u(p),!t[m].test(c))throw new TypeError('Expected "'+d.name+'" to match "'+d.pattern+'", but received "'+c+'"');r+=d.prefix+c}}else r+=d}return r}}function l(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function m(e,t){return e.keys=t,e}function d(e){return e.sensitive?"":"i"}function c(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return m(e,t)}function p(e,t,n){for(var a=[],r=0;r<e.length;r++)a.push(y(e[r],t,n).source);var s=new RegExp("(?:"+a.join("|")+")",d(n));return m(s,t)}function h(e,t,n){return f(a(e,n),t,n)}function f(e,t,n){g(t)||(n=t||n,t=[]),n=n||{};for(var a=n.strict,r=n.end!==!1,s="",o=0;o<e.length;o++){var i=e[o];if("string"==typeof i)s+=l(i);else{var u=l(i.prefix),c="(?:"+i.pattern+")";t.push(i),i.repeat&&(c+="(?:"+u+c+")*"),c=i.optional?i.partial?u+"("+c+")?":"(?:"+u+"("+c+"))?":u+"("+c+")",s+=c}}var p=l(n.delimiter||"/"),h=s.slice(-p.length)===p;return a||(s=(h?s.slice(0,-p.length):s)+"(?:"+p+"(?=$))?"),s+=r?"$":a&&h?"":"(?="+p+"|$)",m(new RegExp("^"+s,d(n)),t)}function y(e,t,n){return g(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?c(e,t):g(e)?p(e,t,n):h(e,t,n)}var g=n(203);e.exports=y,e.exports.parse=a,e.exports.compile=r,e.exports.tokensToFunction=i,e.exports.tokensToRegExp=f;var v=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},function(e,t,n){"use strict";function a(e){var t=new r(r._61);return t._81=1,t._65=e,t}var r=n(82);e.exports=r;var s=a(!0),o=a(!1),i=a(null),l=a(void 0),u=a(0),m=a("");r.resolve=function(e){if(e instanceof r)return e;if(null===e)return i;if(void 0===e)return l;if(e===!0)return s;if(e===!1)return o;if(0===e)return u;if(""===e)return m;if("object"==typeof e||"function"==typeof e)try{var t=e.then;if("function"==typeof t)return new r(t.bind(e))}catch(e){return new r(function(t,n){n(e)})}return a(e)},r.all=function(e){var t=Array.prototype.slice.call(e);return new r(function(e,n){function a(o,i){if(i&&("object"==typeof i||"function"==typeof i)){
if(i instanceof r&&i.then===r.prototype.then){for(;3===i._81;)i=i._65;return 1===i._81?a(o,i._65):(2===i._81&&n(i._65),void i.then(function(e){a(o,e)},n))}var l=i.then;if("function"==typeof l){var u=new r(l.bind(i));return void u.then(function(e){a(o,e)},n)}}t[o]=i,0===--s&&e(t)}if(0===t.length)return e([]);for(var s=t.length,o=0;o<t.length;o++)a(o,t[o])})},r.reject=function(e){return new r(function(t,n){n(e)})},r.race=function(e){return new r(function(t,n){e.forEach(function(e){r.resolve(e).then(t,n)})})},r.prototype.catch=function(e){return this.then(null,e)}},function(e,t,n){"use strict";function a(){u=!1,i._10=null,i._97=null}function r(e){function t(t){(e.allRejections||o(d[t].error,e.whitelist||l))&&(d[t].displayId=m++,e.onUnhandled?(d[t].logged=!0,e.onUnhandled(d[t].displayId,d[t].error)):(d[t].logged=!0,s(d[t].displayId,d[t].error)))}function n(t){d[t].logged&&(e.onHandled?e.onHandled(d[t].displayId,d[t].error):d[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+d[t].displayId+"):"),console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id '+d[t].displayId+".")))}e=e||{},u&&a(),u=!0;var r=0,m=0,d={};i._10=function(e){2===e._81&&d[e._72]&&(d[e._72].logged?n(e._72):clearTimeout(d[e._72].timeout),delete d[e._72])},i._97=function(e,n){0===e._45&&(e._72=r++,d[e._72]={displayId:null,error:n,timeout:setTimeout(t.bind(null,e._72),o(n,l)?100:2e3),logged:!1})}}function s(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):");var n=(t&&(t.stack||t))+"";n.split("\n").forEach(function(e){console.warn("  "+e)})}function o(e,t){return t.some(function(t){return e instanceof t})}var i=n(82),l=[ReferenceError,TypeError,RangeError],u=!1;t.disable=a,t.enable=r},function(e,t,n){"use strict";var a=n(11),r=n(2),s=n(216);e.exports=function(){function e(e,t,n,a,o,i){i!==s&&r(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t};return n.checkPropTypes=a,n.PropTypes=n,n}},function(e,t){"use strict";var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=n},function(e,t){"use strict";var n={Properties:{"aria-current":0,"aria-details":0,"aria-disabled":0,"aria-hidden":0,"aria-invalid":0,"aria-keyshortcuts":0,"aria-label":0,"aria-roledescription":0,"aria-autocomplete":0,"aria-checked":0,"aria-expanded":0,"aria-haspopup":0,"aria-level":0,"aria-modal":0,"aria-multiline":0,"aria-multiselectable":0,"aria-orientation":0,"aria-placeholder":0,"aria-pressed":0,"aria-readonly":0,"aria-required":0,"aria-selected":0,"aria-sort":0,"aria-valuemax":0,"aria-valuemin":0,"aria-valuenow":0,"aria-valuetext":0,"aria-atomic":0,"aria-busy":0,"aria-live":0,"aria-relevant":0,"aria-dropeffect":0,"aria-grabbed":0,"aria-activedescendant":0,"aria-colcount":0,"aria-colindex":0,"aria-colspan":0,"aria-controls":0,"aria-describedby":0,"aria-errormessage":0,"aria-flowto":0,"aria-labelledby":0,"aria-owns":0,"aria-posinset":0,"aria-rowcount":0,"aria-rowindex":0,"aria-rowspan":0,"aria-setsize":0},DOMAttributeNames:{},DOMPropertyNames:{}};e.exports=n},function(e,t,n){"use strict";var a=n(7),r=n(76),s={focusDOMComponent:function(){r(a.getNodeFromInstance(this))}};e.exports=s},function(e,t,n){"use strict";function a(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function r(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function s(e){switch(e){case"topCompositionStart":return C.compositionStart;case"topCompositionEnd":return C.compositionEnd;case"topCompositionUpdate":return C.compositionUpdate}}function o(e,t){return"topKeyDown"===e&&t.keyCode===b}function i(e,t){switch(e){case"topKeyUp":return v.indexOf(t.keyCode)!==-1;case"topKeyDown":return t.keyCode!==b;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function l(e){var t=e.detail;return"object"==typeof t&&"data"in t?t.data:null}function u(e,t,n,a){var r,u;if(T?r=s(e):I?i(e,n)&&(r=C.compositionEnd):o(e,n)&&(r=C.compositionStart),!r)return null;E&&(I||r!==C.compositionStart?r===C.compositionEnd&&I&&(u=I.getData()):I=f.getPooled(a));var m=y.getPooled(r,t,n,a);if(u)m.data=u;else{var d=l(n);null!==d&&(m.data=d)}return p.accumulateTwoPhaseDispatches(m),m}function m(e,t){switch(e){case"topCompositionEnd":return l(t);case"topKeyPress":var n=t.which;return n!==R?null:(k=!0,P);case"topTextInput":var a=t.data;return a===P&&k?null:a;default:return null}}function d(e,t){if(I){if("topCompositionEnd"===e||!T&&i(e,t)){var n=I.getData();return f.release(I),I=null,n}return null}switch(e){case"topPaste":return null;case"topKeyPress":return t.which&&!r(t)?String.fromCharCode(t.which):null;case"topCompositionEnd":return E?null:t.data;default:return null}}function c(e,t,n,a){var r;if(r=S?m(e,n):d(e,n),!r)return null;var s=g.getPooled(C.beforeInput,t,n,a);return s.data=r,p.accumulateTwoPhaseDispatches(s),s}var p=n(30),h=n(10),f=n(225),y=n(262),g=n(265),v=[9,13,27,32],b=229,T=h.canUseDOM&&"CompositionEvent"in window,w=null;h.canUseDOM&&"documentMode"in document&&(w=document.documentMode);var S=h.canUseDOM&&"TextEvent"in window&&!w&&!a(),E=h.canUseDOM&&(!T||w&&w>8&&w<=11),R=32,P=String.fromCharCode(R),C={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:["topBlur","topCompositionEnd","topKeyDown","topKeyPress","topKeyUp","topMouseDown"]},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:["topBlur","topCompositionStart","topKeyDown","topKeyPress","topKeyUp","topMouseDown"]},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:["topBlur","topCompositionUpdate","topKeyDown","topKeyPress","topKeyUp","topMouseDown"]}},k=!1,I=null,A={eventTypes:C,extractEvents:function(e,t,n,a){return[u(e,t,n,a),c(e,t,n,a)]}};e.exports=A},function(e,t,n){"use strict";var a=n(83),r=n(10),s=(n(12),n(171),n(271)),o=n(178),i=n(181),l=(n(3),i(function(e){return o(e)})),u=!1,m="cssFloat";if(r.canUseDOM){var d=document.createElement("div").style;try{d.font=""}catch(e){u=!0}void 0===document.documentElement.style.cssFloat&&(m="styleFloat")}var c={createMarkupForStyles:function(e,t){var n="";for(var a in e)if(e.hasOwnProperty(a)){var r=e[a];null!=r&&(n+=l(a)+":",n+=s(a,r,t)+";")}return n||null},setValueForStyles:function(e,t,n){var r=e.style;for(var o in t)if(t.hasOwnProperty(o)){var i=s(o,t[o],n);if("float"!==o&&"cssFloat"!==o||(o=m),i)r[o]=i;else{var l=u&&a.shorthandPropertyExpansions[o];if(l)for(var d in l)r[d]="";else r[o]=""}}}};e.exports=c},function(e,t,n){"use strict";function a(e){var t=e.nodeName&&e.nodeName.toLowerCase();return"select"===t||"input"===t&&"file"===e.type}function r(e){var t=E.getPooled(k.change,A,e,R(e));b.accumulateTwoPhaseDispatches(t),S.batchedUpdates(s,t)}function s(e){v.enqueueEvents(e),v.processEventQueue(!1)}function o(e,t){I=e,A=t,I.attachEvent("onchange",r)}function i(){I&&(I.detachEvent("onchange",r),I=null,A=null)}function l(e,t){if("topChange"===e)return t}function u(e,t,n){"topFocus"===e?(i(),o(t,n)):"topBlur"===e&&i()}function m(e,t){I=e,A=t,_=e.value,x=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(I,"value",D),I.attachEvent?I.attachEvent("onpropertychange",c):I.addEventListener("propertychange",c,!1)}function d(){I&&(delete I.value,I.detachEvent?I.detachEvent("onpropertychange",c):I.removeEventListener("propertychange",c,!1),I=null,A=null,_=null,x=null)}function c(e){if("value"===e.propertyName){var t=e.srcElement.value;t!==_&&(_=t,r(e))}}function p(e,t){if("topInput"===e)return t}function h(e,t,n){"topFocus"===e?(d(),m(t,n)):"topBlur"===e&&d()}function f(e,t){if(("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)&&I&&I.value!==_)return _=I.value,A}function y(e){return e.nodeName&&"input"===e.nodeName.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function g(e,t){if("topClick"===e)return t}var v=n(29),b=n(30),T=n(10),w=n(7),S=n(13),E=n(14),R=n(60),P=n(61),C=n(100),k={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:["topBlur","topChange","topClick","topFocus","topInput","topKeyDown","topKeyUp","topSelectionChange"]}},I=null,A=null,_=null,x=null,O=!1;T.canUseDOM&&(O=P("change")&&(!document.documentMode||document.documentMode>8));var q=!1;T.canUseDOM&&(q=P("input")&&(!document.documentMode||document.documentMode>11));var D={get:function(){return x.get.call(this)},set:function(e){_=""+e,x.set.call(this,e)}},M={eventTypes:k,extractEvents:function(e,t,n,r){var s,o,i=t?w.getNodeFromInstance(t):window;if(a(i)?O?s=l:o=u:C(i)?q?s=p:(s=f,o=h):y(i)&&(s=g),s){var m=s(e,t);if(m){var d=E.getPooled(k.change,m,n,r);return d.type="change",b.accumulateTwoPhaseDispatches(d),d}}o&&o(e,i,t)}};e.exports=M},function(e,t,n){"use strict";var a=n(5),r=n(20),s=n(10),o=n(174),i=n(11),l=(n(2),{dangerouslyReplaceNodeWithMarkup:function(e,t){if(s.canUseDOM?void 0:a("56"),t?void 0:a("57"),"HTML"===e.nodeName?a("58"):void 0,"string"==typeof t){var n=o(t,i)[0];e.parentNode.replaceChild(n,e)}else r.replaceChildWithTree(e,t)}});e.exports=l},function(e,t){"use strict";var n=["ResponderEventPlugin","SimpleEventPlugin","TapEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin"];e.exports=n},function(e,t,n){"use strict";var a=n(30),r=n(7),s=n(34),o={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},i={eventTypes:o,extractEvents:function(e,t,n,i){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement))return null;if("topMouseOut"!==e&&"topMouseOver"!==e)return null;var l;if(i.window===i)l=i;else{var u=i.ownerDocument;l=u?u.defaultView||u.parentWindow:window}var m,d;if("topMouseOut"===e){m=t;var c=n.relatedTarget||n.toElement;d=c?r.getClosestInstanceFromNode(c):null}else m=null,d=t;if(m===d)return null;var p=null==m?l:r.getNodeFromInstance(m),h=null==d?l:r.getNodeFromInstance(d),f=s.getPooled(o.mouseLeave,m,n,i);f.type="mouseleave",f.target=p,f.relatedTarget=h;var y=s.getPooled(o.mouseEnter,d,n,i);return y.type="mouseenter",y.target=h,y.relatedTarget=p,a.accumulateEnterLeaveDispatches(f,y,m,d),[f,y]}};e.exports=i},function(e,t,n){"use strict";function a(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var r=n(6),s=n(17),o=n(98);r(a.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[o()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,t,n=this._startText,a=n.length,r=this.getText(),s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);var i=t>1?1-t:void 0;return this._fallbackText=r.slice(e,i),this._fallbackText}}),s.addPoolingTo(a),e.exports=a},function(e,t,n){"use strict";var a=n(21),r=a.injection.MUST_USE_PROPERTY,s=a.injection.HAS_BOOLEAN_VALUE,o=a.injection.HAS_NUMERIC_VALUE,i=a.injection.HAS_POSITIVE_NUMERIC_VALUE,l=a.injection.HAS_OVERLOADED_BOOLEAN_VALUE,u={isCustomAttribute:RegExp.prototype.test.bind(new RegExp("^(data|aria)-["+a.ATTRIBUTE_NAME_CHAR+"]*$")),Properties:{accept:0,acceptCharset:0,accessKey:0,action:0,allowFullScreen:s,allowTransparency:0,alt:0,as:0,async:s,autoComplete:0,autoPlay:s,capture:s,cellPadding:0,cellSpacing:0,charSet:0,challenge:0,checked:r|s,cite:0,classID:0,className:0,cols:i,colSpan:0,content:0,contentEditable:0,contextMenu:0,controls:s,coords:0,crossOrigin:0,data:0,dateTime:0,default:s,defer:s,dir:0,disabled:s,download:l,draggable:0,encType:0,form:0,formAction:0,formEncType:0,formMethod:0,formNoValidate:s,formTarget:0,frameBorder:0,headers:0,height:0,hidden:s,high:0,href:0,hrefLang:0,htmlFor:0,httpEquiv:0,icon:0,id:0,inputMode:0,integrity:0,is:0,keyParams:0,keyType:0,kind:0,label:0,lang:0,list:0,loop:s,low:0,manifest:0,marginHeight:0,marginWidth:0,max:0,maxLength:0,media:0,mediaGroup:0,method:0,min:0,minLength:0,multiple:r|s,muted:r|s,name:0,nonce:0,noValidate:s,open:s,optimum:0,pattern:0,placeholder:0,playsInline:s,poster:0,preload:0,profile:0,radioGroup:0,readOnly:s,referrerPolicy:0,rel:0,required:s,reversed:s,role:0,rows:i,rowSpan:o,sandbox:0,scope:0,scoped:s,scrolling:0,seamless:s,selected:r|s,shape:0,size:i,sizes:0,span:i,spellCheck:0,src:0,srcDoc:0,srcLang:0,srcSet:0,start:o,step:0,style:0,summary:0,tabIndex:0,target:0,title:0,type:0,useMap:0,value:0,width:0,wmode:0,wrap:0,about:0,datatype:0,inlist:0,prefix:0,property:0,resource:0,typeof:0,vocab:0,autoCapitalize:0,autoCorrect:0,autoSave:0,color:0,itemProp:0,itemScope:s,itemType:0,itemID:0,itemRef:0,results:0,security:0,unselectable:0},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{}};e.exports=u},function(e,t,n){(function(t){"use strict";function a(e,t,n,a){var r=void 0===e[n];null!=t&&r&&(e[n]=s(t,!0))}var r=n(22),s=n(99),o=(n(52),n(62)),i=n(102),l=(n(3),{instantiateChildren:function(e,t,n,r){if(null==e)return null;var s={};return i(e,a,s),s},updateChildren:function(e,t,n,a,i,l,u,m,d){if(t||e){var c,p;for(c in t)if(t.hasOwnProperty(c)){p=e&&e[c];var h=p&&p._currentElement,f=t[c];if(null!=p&&o(h,f))r.receiveComponent(p,f,i,m),t[c]=p;else{p&&(a[c]=r.getHostNode(p),r.unmountComponent(p,!1));var y=s(f,!0);t[c]=y;var g=r.mountComponent(y,i,l,u,m,d);n.push(g)}}for(c in e)!e.hasOwnProperty(c)||t&&t.hasOwnProperty(c)||(p=e[c],a[c]=r.getHostNode(p),r.unmountComponent(p,!1))}},unmountChildren:function(e,t){for(var n in e)if(e.hasOwnProperty(n)){var a=e[n];r.unmountComponent(a,t)}}});e.exports=l}).call(t,n(81))},function(e,t,n){"use strict";var a=n(48),r=n(235),s={processChildrenUpdates:r.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkup:a.dangerouslyReplaceNodeWithMarkup};e.exports=s},function(e,t,n){"use strict";function a(e){}function r(e,t){}function s(e){return!(!e.prototype||!e.prototype.isReactComponent)}function o(e){return!(!e.prototype||!e.prototype.isPureReactComponent)}var i=n(5),l=n(6),u=n(23),m=n(54),d=n(15),c=n(55),p=n(31),h=(n(12),n(93)),f=n(22),y=n(26),g=(n(2),n(43)),v=n(62),b=(n(3),{ImpureClass:0,PureClass:1,StatelessFunctional:2});a.prototype.render=function(){var e=p.get(this)._currentElement.type,t=e(this.props,this.context,this.updater);return r(e,t),t};var T=1,w={construct:function(e){this._currentElement=e,this._rootNodeID=0,this._compositeType=null,this._instance=null,this._hostParent=null,this._hostContainerInfo=null,this._updateBatchNumber=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedNodeType=null,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null,this._calledComponentWillUnmount=!1},mountComponent:function(e,t,n,l){this._context=l,this._mountOrder=T++,this._hostParent=t,this._hostContainerInfo=n;var m,d=this._currentElement.props,c=this._processContext(l),h=this._currentElement.type,f=e.getUpdateQueue(),g=s(h),v=this._constructComponent(g,d,c,f);g||null!=v&&null!=v.render?o(h)?this._compositeType=b.PureClass:this._compositeType=b.ImpureClass:(m=v,r(h,m),null===v||v===!1||u.isValidElement(v)?void 0:i("105",h.displayName||h.name||"Component"),v=new a(h),this._compositeType=b.StatelessFunctional);v.props=d,v.context=c,v.refs=y,v.updater=f,this._instance=v,p.set(v,this);var w=v.state;void 0===w&&(v.state=w=null),"object"!=typeof w||Array.isArray(w)?i("106",this.getName()||"ReactCompositeComponent"):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1;var S;return S=v.unstable_handleError?this.performInitialMountWithErrorHandling(m,t,n,e,l):this.performInitialMount(m,t,n,e,l),v.componentDidMount&&e.getReactMountReady().enqueue(v.componentDidMount,v),S},_constructComponent:function(e,t,n,a){return this._constructComponentWithoutOwner(e,t,n,a)},_constructComponentWithoutOwner:function(e,t,n,a){var r=this._currentElement.type;return e?new r(t,n,a):r(t,n,a)},performInitialMountWithErrorHandling:function(e,t,n,a,r){var s,o=a.checkpoint();try{s=this.performInitialMount(e,t,n,a,r)}catch(i){a.rollback(o),this._instance.unstable_handleError(i),this._pendingStateQueue&&(this._instance.state=this._processPendingState(this._instance.props,this._instance.context)),o=a.checkpoint(),this._renderedComponent.unmountComponent(!0),a.rollback(o),s=this.performInitialMount(e,t,n,a,r)}return s},performInitialMount:function(e,t,n,a,r){var s=this._instance,o=0;s.componentWillMount&&(s.componentWillMount(),this._pendingStateQueue&&(s.state=this._processPendingState(s.props,s.context))),void 0===e&&(e=this._renderValidatedComponent());var i=h.getType(e);this._renderedNodeType=i;var l=this._instantiateReactComponent(e,i!==h.EMPTY);this._renderedComponent=l;var u=f.mountComponent(l,a,t,n,this._processChildContext(r),o);return u},getHostNode:function(){return f.getHostNode(this._renderedComponent)},unmountComponent:function(e){if(this._renderedComponent){var t=this._instance;if(t.componentWillUnmount&&!t._calledComponentWillUnmount)if(t._calledComponentWillUnmount=!0,e){var n=this.getName()+".componentWillUnmount()";c.invokeGuardedCallback(n,t.componentWillUnmount.bind(t))}else t.componentWillUnmount();this._renderedComponent&&(f.unmountComponent(this._renderedComponent,e),this._renderedNodeType=null,this._renderedComponent=null,this._instance=null),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=0,this._topLevelWrapper=null,p.remove(t)}},_maskContext:function(e){var t=this._currentElement.type,n=t.contextTypes;if(!n)return y;var a={};for(var r in n)a[r]=e[r];return a},_processContext:function(e){var t=this._maskContext(e);return t},_processChildContext:function(e){var t,n=this._currentElement.type,a=this._instance;if(a.getChildContext&&(t=a.getChildContext()),t){"object"!=typeof n.childContextTypes?i("107",this.getName()||"ReactCompositeComponent"):void 0;for(var r in t)r in n.childContextTypes?void 0:i("108",this.getName()||"ReactCompositeComponent",r);return l({},e,t)}return e},_checkContextTypes:function(e,t,n){},receiveComponent:function(e,t,n){var a=this._currentElement,r=this._context;this._pendingElement=null,this.updateComponent(t,a,e,r,n)},performUpdateIfNecessary:function(e){null!=this._pendingElement?f.receiveComponent(this,this._pendingElement,e,this._context):null!==this._pendingStateQueue||this._pendingForceUpdate?this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context):this._updateBatchNumber=null},updateComponent:function(e,t,n,a,r){var s=this._instance;null==s?i("136",this.getName()||"ReactCompositeComponent"):void 0;var o,l=!1;this._context===r?o=s.context:(o=this._processContext(r),l=!0);var u=t.props,m=n.props;t!==n&&(l=!0),l&&s.componentWillReceiveProps&&s.componentWillReceiveProps(m,o);var d=this._processPendingState(m,o),c=!0;this._pendingForceUpdate||(s.shouldComponentUpdate?c=s.shouldComponentUpdate(m,d,o):this._compositeType===b.PureClass&&(c=!g(u,m)||!g(s.state,d))),this._updateBatchNumber=null,c?(this._pendingForceUpdate=!1,this._performComponentUpdate(n,m,d,o,e,r)):(this._currentElement=n,this._context=r,s.props=m,s.state=d,s.context=o)},_processPendingState:function(e,t){var n=this._instance,a=this._pendingStateQueue,r=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!a)return n.state;if(r&&1===a.length)return a[0];for(var s=l({},r?a[0]:n.state),o=r?1:0;o<a.length;o++){var i=a[o];l(s,"function"==typeof i?i.call(n,s,e,t):i)}return s},_performComponentUpdate:function(e,t,n,a,r,s){var o,i,l,u=this._instance,m=Boolean(u.componentDidUpdate);m&&(o=u.props,i=u.state,l=u.context),u.componentWillUpdate&&u.componentWillUpdate(t,n,a),this._currentElement=e,this._context=s,u.props=t,u.state=n,u.context=a,this._updateRenderedComponent(r,s),m&&r.getReactMountReady().enqueue(u.componentDidUpdate.bind(u,o,i,l),u)},_updateRenderedComponent:function(e,t){var n=this._renderedComponent,a=n._currentElement,r=this._renderValidatedComponent(),s=0;if(v(a,r))f.receiveComponent(n,r,e,this._processChildContext(t));else{var o=f.getHostNode(n);f.unmountComponent(n,!1);var i=h.getType(r);this._renderedNodeType=i;var l=this._instantiateReactComponent(r,i!==h.EMPTY);this._renderedComponent=l;var u=f.mountComponent(l,e,this._hostParent,this._hostContainerInfo,this._processChildContext(t),s);this._replaceNodeWithMarkup(o,u,n)}},_replaceNodeWithMarkup:function(e,t,n){m.replaceNodeWithMarkup(e,t,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e,t=this._instance;return e=t.render()},_renderValidatedComponent:function(){var e;if(this._compositeType!==b.StatelessFunctional){d.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{d.current=null}}else e=this._renderValidatedComponentWithoutOwnerOrContext();return null===e||e===!1||u.isValidElement(e)?void 0:i("109",this.getName()||"ReactCompositeComponent"),e},attachRef:function(e,t){var n=this.getPublicInstance();null==n?i("110"):void 0;var a=t.getPublicInstance(),r=n.refs===y?n.refs={}:n.refs;r[e]=a},detachRef:function(e){var t=this.getPublicInstance().refs;delete t[e]},getName:function(){var e=this._currentElement.type,t=this._instance&&this._instance.constructor;return e.displayName||t&&t.displayName||e.name||t&&t.name||null},getPublicInstance:function(){var e=this._instance;return this._compositeType===b.StatelessFunctional?null:e},_instantiateReactComponent:null};e.exports=w},function(e,t,n){"use strict";var a=n(7),r=n(243),s=n(92),o=n(22),i=n(13),l=n(256),u=n(272),m=n(97),d=n(280);n(3);r.inject();var c={findDOMNode:u,render:s.render,unmountComponentAtNode:s.unmountComponentAtNode,version:l,unstable_batchedUpdates:i.batchedUpdates,unstable_renderSubtreeIntoContainer:d};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({ComponentTree:{getClosestInstanceFromNode:a.getClosestInstanceFromNode,getNodeFromInstance:function(e){return e._renderedComponent&&(e=m(e)),e?a.getNodeFromInstance(e):null}},Mount:s,Reconciler:o});e.exports=c},function(e,t,n){"use strict";function a(e){if(e){var t=e._currentElement._owner||null;if(t){var n=t.getName();if(n)return" This DOM node was rendered by `"+n+"`."}}return""}function r(e,t){t&&(Y[e._tag]&&(null!=t.children||null!=t.dangerouslySetInnerHTML?f("137",e._tag,e._currentElement._owner?" Check the render method of "+e._currentElement._owner.getName()+".":""):void 0),null!=t.dangerouslySetInnerHTML&&(null!=t.children?f("60"):void 0,"object"==typeof t.dangerouslySetInnerHTML&&B in t.dangerouslySetInnerHTML?void 0:f("61")),null!=t.style&&"object"!=typeof t.style?f("62",a(e)):void 0)}function s(e,t,n,a){if(!(a instanceof q)){var r=e._hostContainerInfo,s=r._node&&r._node.nodeType===W,i=s?r._node:r._ownerDocument;L(t,i),a.getReactMountReady().enqueue(o,{inst:e,registrationName:t,listener:n})}}function o(){var e=this;E.putListener(e.inst,e.registrationName,e.listener)}function i(){var e=this;I.postMountWrapper(e)}function l(){var e=this;x.postMountWrapper(e)}function u(){var e=this;A.postMountWrapper(e)}function m(){var e=this;e._rootNodeID?void 0:f("63");var t=N(e);switch(t?void 0:f("64"),e._tag){case"iframe":case"object":e._wrapperState.listeners=[P.trapBubbledEvent("topLoad","load",t)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var n in H)H.hasOwnProperty(n)&&e._wrapperState.listeners.push(P.trapBubbledEvent(n,H[n],t));break;case"source":e._wrapperState.listeners=[P.trapBubbledEvent("topError","error",t)];break;case"img":e._wrapperState.listeners=[P.trapBubbledEvent("topError","error",t),P.trapBubbledEvent("topLoad","load",t)];break;case"form":e._wrapperState.listeners=[P.trapBubbledEvent("topReset","reset",t),P.trapBubbledEvent("topSubmit","submit",t)];break;case"input":case"select":case"textarea":e._wrapperState.listeners=[P.trapBubbledEvent("topInvalid","invalid",t)]}}function d(){_.postUpdateWrapper(this)}function c(e){$.call(Q,e)||(J.test(e)?void 0:f("65",e),Q[e]=!0)}function p(e,t){return e.indexOf("-")>=0||null!=t.is}function h(e){var t=e.type;c(t),this._currentElement=e,this._tag=t.toLowerCase(),this._namespaceURI=null,this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._hostNode=null,this._hostParent=null,this._rootNodeID=0,this._domID=0,this._hostContainerInfo=null,this._wrapperState=null,this._topLevelWrapper=null,this._flags=0}var f=n(5),y=n(6),g=n(218),v=n(220),b=n(20),T=n(49),w=n(21),S=n(85),E=n(29),R=n(50),P=n(33),C=n(86),k=n(7),I=n(236),A=n(237),_=n(87),x=n(240),O=(n(12),n(249)),q=n(254),D=(n(11),n(36)),M=(n(2),n(61),n(43),n(63),n(3),C),U=E.deleteListener,N=k.getNodeFromInstance,L=P.listenTo,z=R.registrationNameModules,j={string:!0,number:!0},F="style",B="__html",V={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null},W=11,H={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},G={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},K={listing:!0,pre:!0,textarea:!0},Y=y({menuitem:!0},G),J=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,Q={},$={}.hasOwnProperty,Z=1;h.displayName="ReactDOMComponent",h.Mixin={mountComponent:function(e,t,n,a){this._rootNodeID=Z++,this._domID=n._idCounter++,this._hostParent=t,this._hostContainerInfo=n;var s=this._currentElement.props;switch(this._tag){case"audio":case"form":case"iframe":case"img":case"link":case"object":case"source":case"video":this._wrapperState={listeners:null},e.getReactMountReady().enqueue(m,this);break;case"input":I.mountWrapper(this,s,t),s=I.getHostProps(this,s),e.getReactMountReady().enqueue(m,this);break;case"option":A.mountWrapper(this,s,t),s=A.getHostProps(this,s);break;case"select":_.mountWrapper(this,s,t),s=_.getHostProps(this,s),e.getReactMountReady().enqueue(m,this);break;case"textarea":x.mountWrapper(this,s,t),s=x.getHostProps(this,s),e.getReactMountReady().enqueue(m,this)}r(this,s);var o,d;null!=t?(o=t._namespaceURI,d=t._tag):n._tag&&(o=n._namespaceURI,d=n._tag),(null==o||o===T.svg&&"foreignobject"===d)&&(o=T.html),o===T.html&&("svg"===this._tag?o=T.svg:"math"===this._tag&&(o=T.mathml)),this._namespaceURI=o;var c;if(e.useCreateElement){var p,h=n._ownerDocument;if(o===T.html)if("script"===this._tag){var f=h.createElement("div"),y=this._currentElement.type;f.innerHTML="<"+y+"></"+y+">",p=f.removeChild(f.firstChild)}else p=s.is?h.createElement(this._currentElement.type,s.is):h.createElement(this._currentElement.type);else p=h.createElementNS(o,this._currentElement.type);k.precacheNode(this,p),this._flags|=M.hasCachedChildNodes,this._hostParent||S.setAttributeForRoot(p),this._updateDOMProperties(null,s,e);var v=b(p);this._createInitialChildren(e,s,a,v),c=v}else{var w=this._createOpenTagMarkupAndPutListeners(e,s),E=this._createContentMarkup(e,s,a);c=!E&&G[this._tag]?w+"/>":w+">"+E+"</"+this._currentElement.type+">"}switch(this._tag){case"input":e.getReactMountReady().enqueue(i,this),s.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case"textarea":e.getReactMountReady().enqueue(l,this),s.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case"select":s.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case"button":s.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case"option":e.getReactMountReady().enqueue(u,this)}return c},_createOpenTagMarkupAndPutListeners:function(e,t){var n="<"+this._currentElement.type;for(var a in t)if(t.hasOwnProperty(a)){var r=t[a];if(null!=r)if(z.hasOwnProperty(a))r&&s(this,a,r,e);else{a===F&&(r&&(r=this._previousStyleCopy=y({},t.style)),r=v.createMarkupForStyles(r,this));var o=null;null!=this._tag&&p(this._tag,t)?V.hasOwnProperty(a)||(o=S.createMarkupForCustomAttribute(a,r)):o=S.createMarkupForProperty(a,r),o&&(n+=" "+o)}}return e.renderToStaticMarkup?n:(this._hostParent||(n+=" "+S.createMarkupForRoot()),n+=" "+S.createMarkupForID(this._domID))},_createContentMarkup:function(e,t,n){var a="",r=t.dangerouslySetInnerHTML;if(null!=r)null!=r.__html&&(a=r.__html);else{var s=j[typeof t.children]?t.children:null,o=null!=s?null:t.children;if(null!=s)a=D(s);else if(null!=o){var i=this.mountChildren(o,e,n);a=i.join("")}}return K[this._tag]&&"\n"===a.charAt(0)?"\n"+a:a},_createInitialChildren:function(e,t,n,a){var r=t.dangerouslySetInnerHTML;if(null!=r)null!=r.__html&&b.queueHTML(a,r.__html);else{var s=j[typeof t.children]?t.children:null,o=null!=s?null:t.children;if(null!=s)""!==s&&b.queueText(a,s);else if(null!=o)for(var i=this.mountChildren(o,e,n),l=0;l<i.length;l++)b.queueChild(a,i[l])}},receiveComponent:function(e,t,n){var a=this._currentElement;this._currentElement=e,this.updateComponent(t,a,e,n)},updateComponent:function(e,t,n,a){var s=t.props,o=this._currentElement.props;switch(this._tag){case"input":s=I.getHostProps(this,s),o=I.getHostProps(this,o);break;case"option":s=A.getHostProps(this,s),o=A.getHostProps(this,o);break;case"select":s=_.getHostProps(this,s),o=_.getHostProps(this,o);break;case"textarea":s=x.getHostProps(this,s),o=x.getHostProps(this,o)}switch(r(this,o),this._updateDOMProperties(s,o,e),this._updateDOMChildren(s,o,e,a),this._tag){case"input":I.updateWrapper(this);break;case"textarea":x.updateWrapper(this);break;case"select":e.getReactMountReady().enqueue(d,this)}},_updateDOMProperties:function(e,t,n){var a,r,o;for(a in e)if(!t.hasOwnProperty(a)&&e.hasOwnProperty(a)&&null!=e[a])if(a===F){var i=this._previousStyleCopy;for(r in i)i.hasOwnProperty(r)&&(o=o||{},o[r]="");this._previousStyleCopy=null}else z.hasOwnProperty(a)?e[a]&&U(this,a):p(this._tag,e)?V.hasOwnProperty(a)||S.deleteValueForAttribute(N(this),a):(w.properties[a]||w.isCustomAttribute(a))&&S.deleteValueForProperty(N(this),a);for(a in t){var l=t[a],u=a===F?this._previousStyleCopy:null!=e?e[a]:void 0;if(t.hasOwnProperty(a)&&l!==u&&(null!=l||null!=u))if(a===F)if(l?l=this._previousStyleCopy=y({},l):this._previousStyleCopy=null,u){for(r in u)!u.hasOwnProperty(r)||l&&l.hasOwnProperty(r)||(o=o||{},o[r]="");for(r in l)l.hasOwnProperty(r)&&u[r]!==l[r]&&(o=o||{},o[r]=l[r])}else o=l;else if(z.hasOwnProperty(a))l?s(this,a,l,n):u&&U(this,a);else if(p(this._tag,t))V.hasOwnProperty(a)||S.setValueForAttribute(N(this),a,l);else if(w.properties[a]||w.isCustomAttribute(a)){var m=N(this);null!=l?S.setValueForProperty(m,a,l):S.deleteValueForProperty(m,a)}}o&&v.setValueForStyles(N(this),o,this)},_updateDOMChildren:function(e,t,n,a){var r=j[typeof e.children]?e.children:null,s=j[typeof t.children]?t.children:null,o=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,i=t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html,l=null!=r?null:e.children,u=null!=s?null:t.children,m=null!=r||null!=o,d=null!=s||null!=i;
null!=l&&null==u?this.updateChildren(null,n,a):m&&!d&&this.updateTextContent(""),null!=s?r!==s&&this.updateTextContent(""+s):null!=i?o!==i&&this.updateMarkup(""+i):null!=u&&this.updateChildren(u,n,a)},getHostNode:function(){return N(this)},unmountComponent:function(e){switch(this._tag){case"audio":case"form":case"iframe":case"img":case"link":case"object":case"source":case"video":var t=this._wrapperState.listeners;if(t)for(var n=0;n<t.length;n++)t[n].remove();break;case"html":case"head":case"body":f("66",this._tag)}this.unmountChildren(e),k.uncacheNode(this),E.deleteAllListeners(this),this._rootNodeID=0,this._domID=0,this._wrapperState=null},getPublicInstance:function(){return N(this)}},y(h.prototype,h.Mixin,O.Mixin),e.exports=h},function(e,t,n){"use strict";function a(e,t){var n={_topLevelWrapper:e,_idCounter:1,_ownerDocument:t?t.nodeType===r?t:t.ownerDocument:null,_node:t,_tag:t?t.nodeName.toLowerCase():null,_namespaceURI:t?t.namespaceURI:null};return n}var r=(n(63),9);e.exports=a},function(e,t,n){"use strict";var a=n(6),r=n(20),s=n(7),o=function(e){this._currentElement=null,this._hostNode=null,this._hostParent=null,this._hostContainerInfo=null,this._domID=0};a(o.prototype,{mountComponent:function(e,t,n,a){var o=n._idCounter++;this._domID=o,this._hostParent=t,this._hostContainerInfo=n;var i=" react-empty: "+this._domID+" ";if(e.useCreateElement){var l=n._ownerDocument,u=l.createComment(i);return s.precacheNode(this,u),r(u)}return e.renderToStaticMarkup?"":"<!--"+i+"-->"},receiveComponent:function(){},getHostNode:function(){return s.getNodeFromInstance(this)},unmountComponent:function(){s.uncacheNode(this)}}),e.exports=o},function(e,t){"use strict";var n={useCreateElement:!0,useFiber:!1};e.exports=n},function(e,t,n){"use strict";var a=n(48),r=n(7),s={dangerouslyProcessChildrenUpdates:function(e,t){var n=r.getNodeFromInstance(e);a.processUpdates(n,t)}};e.exports=s},function(e,t,n){"use strict";function a(){this._rootNodeID&&d.updateWrapper(this)}function r(e){var t=this._currentElement.props,n=l.executeOnChange(t,e);m.asap(a,this);var r=t.name;if("radio"===t.type&&null!=r){for(var o=u.getNodeFromInstance(this),i=o;i.parentNode;)i=i.parentNode;for(var d=i.querySelectorAll("input[name="+JSON.stringify(""+r)+'][type="radio"]'),c=0;c<d.length;c++){var p=d[c];if(p!==o&&p.form===o.form){var h=u.getInstanceFromNode(p);h?void 0:s("90"),m.asap(a,h)}}}return n}var s=n(5),o=n(6),i=n(85),l=n(53),u=n(7),m=n(13),d=(n(2),n(3),{getHostProps:function(e,t){var n=l.getValue(t),a=l.getChecked(t),r=o({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=a?a:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return r},mountWrapper:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,listeners:null,onChange:r.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=t.checked;null!=n&&i.setValueForProperty(u.getNodeFromInstance(e),"checked",n||!1);var a=u.getNodeFromInstance(e),r=l.getValue(t);if(null!=r){var s=""+r;s!==a.value&&(a.value=s)}else null==t.value&&null!=t.defaultValue&&a.defaultValue!==""+t.defaultValue&&(a.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(a.defaultChecked=!!t.defaultChecked)},postMountWrapper:function(e){var t=e._currentElement.props,n=u.getNodeFromInstance(e);switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":n.value="",n.value=n.defaultValue;break;default:n.value=n.value}var a=n.name;""!==a&&(n.name=""),n.defaultChecked=!n.defaultChecked,n.defaultChecked=!n.defaultChecked,""!==a&&(n.name=a)}});e.exports=d},function(e,t,n){"use strict";function a(e){var t="";return s.Children.forEach(e,function(e){null!=e&&("string"==typeof e||"number"==typeof e?t+=e:l||(l=!0))}),t}var r=n(6),s=n(23),o=n(7),i=n(87),l=(n(3),!1),u={mountWrapper:function(e,t,n){var r=null;if(null!=n){var s=n;"optgroup"===s._tag&&(s=s._hostParent),null!=s&&"select"===s._tag&&(r=i.getSelectValueContext(s))}var o=null;if(null!=r){var l;if(l=null!=t.value?t.value+"":a(t.children),o=!1,Array.isArray(r)){for(var u=0;u<r.length;u++)if(""+r[u]===l){o=!0;break}}else o=""+r===l}e._wrapperState={selected:o}},postMountWrapper:function(e){var t=e._currentElement.props;if(null!=t.value){var n=o.getNodeFromInstance(e);n.setAttribute("value",t.value)}},getHostProps:function(e,t){var n=r({selected:void 0,children:void 0},t);null!=e._wrapperState.selected&&(n.selected=e._wrapperState.selected);var s=a(t.children);return s&&(n.children=s),n}};e.exports=u},function(e,t,n){"use strict";function a(e,t,n,a){return e===n&&t===a}function r(e){var t=document.selection,n=t.createRange(),a=n.text.length,r=n.duplicate();r.moveToElementText(e),r.setEndPoint("EndToStart",n);var s=r.text.length,o=s+a;return{start:s,end:o}}function s(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,r=t.anchorOffset,s=t.focusNode,o=t.focusOffset,i=t.getRangeAt(0);try{i.startContainer.nodeType,i.endContainer.nodeType}catch(e){return null}var l=a(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),u=l?0:i.toString().length,m=i.cloneRange();m.selectNodeContents(e),m.setEnd(i.startContainer,i.startOffset);var d=a(m.startContainer,m.startOffset,m.endContainer,m.endOffset),c=d?0:m.toString().length,p=c+u,h=document.createRange();h.setStart(n,r),h.setEnd(s,o);var f=h.collapsed;return{start:f?p:c,end:f?c:p}}function o(e,t){var n,a,r=document.selection.createRange().duplicate();void 0===t.end?(n=t.start,a=n):t.start>t.end?(n=t.end,a=t.start):(n=t.start,a=t.end),r.moveToElementText(e),r.moveStart("character",n),r.setEndPoint("EndToStart",r),r.moveEnd("character",a-n),r.select()}function i(e,t){if(window.getSelection){var n=window.getSelection(),a=e[m()].length,r=Math.min(t.start,a),s=void 0===t.end?r:Math.min(t.end,a);if(!n.extend&&r>s){var o=s;s=r,r=o}var i=u(e,r),l=u(e,s);if(i&&l){var d=document.createRange();d.setStart(i.node,i.offset),n.removeAllRanges(),r>s?(n.addRange(d),n.extend(l.node,l.offset)):(d.setEnd(l.node,l.offset),n.addRange(d))}}}var l=n(10),u=n(277),m=n(98),d=l.canUseDOM&&"selection"in document&&!("getSelection"in window),c={getOffsets:d?r:s,setOffsets:d?o:i};e.exports=c},function(e,t,n){"use strict";var a=n(5),r=n(6),s=n(48),o=n(20),i=n(7),l=n(36),u=(n(2),n(63),function(e){this._currentElement=e,this._stringText=""+e,this._hostNode=null,this._hostParent=null,this._domID=0,this._mountIndex=0,this._closingComment=null,this._commentNodes=null});r(u.prototype,{mountComponent:function(e,t,n,a){var r=n._idCounter++,s=" react-text: "+r+" ",u=" /react-text ";if(this._domID=r,this._hostParent=t,e.useCreateElement){var m=n._ownerDocument,d=m.createComment(s),c=m.createComment(u),p=o(m.createDocumentFragment());return o.queueChild(p,o(d)),this._stringText&&o.queueChild(p,o(m.createTextNode(this._stringText))),o.queueChild(p,o(c)),i.precacheNode(this,d),this._closingComment=c,p}var h=l(this._stringText);return e.renderToStaticMarkup?h:"<!--"+s+"-->"+h+"<!--"+u+"-->"},receiveComponent:function(e,t){if(e!==this._currentElement){this._currentElement=e;var n=""+e;if(n!==this._stringText){this._stringText=n;var a=this.getHostNode();s.replaceDelimitedText(a[0],a[1],n)}}},getHostNode:function(){var e=this._commentNodes;if(e)return e;if(!this._closingComment)for(var t=i.getNodeFromInstance(this),n=t.nextSibling;;){if(null==n?a("67",this._domID):void 0,8===n.nodeType&&" /react-text "===n.nodeValue){this._closingComment=n;break}n=n.nextSibling}return e=[this._hostNode,this._closingComment],this._commentNodes=e,e},unmountComponent:function(){this._closingComment=null,this._commentNodes=null,i.uncacheNode(this)}}),e.exports=u},function(e,t,n){"use strict";function a(){this._rootNodeID&&m.updateWrapper(this)}function r(e){var t=this._currentElement.props,n=i.executeOnChange(t,e);return u.asap(a,this),n}var s=n(5),o=n(6),i=n(53),l=n(7),u=n(13),m=(n(2),n(3),{getHostProps:function(e,t){null!=t.dangerouslySetInnerHTML?s("91"):void 0;var n=o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return n},mountWrapper:function(e,t){var n=i.getValue(t),a=n;if(null==n){var o=t.defaultValue,l=t.children;null!=l&&(null!=o?s("92"):void 0,Array.isArray(l)&&(l.length<=1?void 0:s("93"),l=l[0]),o=""+l),null==o&&(o=""),a=o}e._wrapperState={initialValue:""+a,listeners:null,onChange:r.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=l.getNodeFromInstance(e),a=i.getValue(t);if(null!=a){var r=""+a;r!==n.value&&(n.value=r),null==t.defaultValue&&(n.defaultValue=r)}null!=t.defaultValue&&(n.defaultValue=t.defaultValue)},postMountWrapper:function(e){var t=l.getNodeFromInstance(e),n=t.textContent;n===e._wrapperState.initialValue&&(t.value=n)}});e.exports=m},function(e,t,n){"use strict";function a(e,t){"_hostNode"in e?void 0:l("33"),"_hostNode"in t?void 0:l("33");for(var n=0,a=e;a;a=a._hostParent)n++;for(var r=0,s=t;s;s=s._hostParent)r++;for(;n-r>0;)e=e._hostParent,n--;for(;r-n>0;)t=t._hostParent,r--;for(var o=n;o--;){if(e===t)return e;e=e._hostParent,t=t._hostParent}return null}function r(e,t){"_hostNode"in e?void 0:l("35"),"_hostNode"in t?void 0:l("35");for(;t;){if(t===e)return!0;t=t._hostParent}return!1}function s(e){return"_hostNode"in e?void 0:l("36"),e._hostParent}function o(e,t,n){for(var a=[];e;)a.push(e),e=e._hostParent;var r;for(r=a.length;r-- >0;)t(a[r],"captured",n);for(r=0;r<a.length;r++)t(a[r],"bubbled",n)}function i(e,t,n,r,s){for(var o=e&&t?a(e,t):null,i=[];e&&e!==o;)i.push(e),e=e._hostParent;for(var l=[];t&&t!==o;)l.push(t),t=t._hostParent;var u;for(u=0;u<i.length;u++)n(i[u],"bubbled",r);for(u=l.length;u-- >0;)n(l[u],"captured",s)}var l=n(5);n(2);e.exports={isAncestor:r,getLowestCommonAncestor:a,getParentInstance:s,traverseTwoPhase:o,traverseEnterLeave:i}},function(e,t,n){"use strict";function a(){this.reinitializeTransaction()}var r=n(6),s=n(13),o=n(35),i=n(11),l={initialize:i,close:function(){c.isBatchingUpdates=!1}},u={initialize:i,close:s.flushBatchedUpdates.bind(s)},m=[u,l];r(a.prototype,o,{getTransactionWrappers:function(){return m}});var d=new a,c={isBatchingUpdates:!1,batchedUpdates:function(e,t,n,a,r,s){var o=c.isBatchingUpdates;return c.isBatchingUpdates=!0,o?e(t,n,a,r,s):d.perform(e,null,t,n,a,r,s)}};e.exports=c},function(e,t,n){"use strict";function a(){E||(E=!0,v.EventEmitter.injectReactEventListener(g),v.EventPluginHub.injectEventPluginOrder(i),v.EventPluginUtils.injectComponentTree(c),v.EventPluginUtils.injectTreeTraversal(h),v.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:S,EnterLeaveEventPlugin:l,ChangeEventPlugin:o,SelectEventPlugin:w,BeforeInputEventPlugin:s}),v.HostComponent.injectGenericComponentClass(d),v.HostComponent.injectTextComponentClass(f),v.DOMProperty.injectDOMPropertyConfig(r),v.DOMProperty.injectDOMPropertyConfig(u),v.DOMProperty.injectDOMPropertyConfig(T),v.EmptyComponent.injectEmptyComponentFactory(function(e){return new p(e)}),v.Updates.injectReconcileTransaction(b),v.Updates.injectBatchingStrategy(y),v.Component.injectEnvironment(m))}var r=n(217),s=n(219),o=n(221),i=n(223),l=n(224),u=n(226),m=n(228),d=n(231),c=n(7),p=n(233),h=n(241),f=n(239),y=n(242),g=n(246),v=n(247),b=n(252),T=n(257),w=n(258),S=n(259),E=!1;e.exports={inject:a}},112,function(e,t,n){"use strict";function a(e){r.enqueueEvents(e),r.processEventQueue(!1)}var r=n(29),s={handleTopLevel:function(e,t,n,s){var o=r.extractEvents(e,t,n,s);a(o)}};e.exports=s},function(e,t,n){"use strict";function a(e){for(;e._hostParent;)e=e._hostParent;var t=d.getNodeFromInstance(e),n=t.parentNode;return d.getClosestInstanceFromNode(n)}function r(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function s(e){var t=p(e.nativeEvent),n=d.getClosestInstanceFromNode(t),r=n;do e.ancestors.push(r),r=r&&a(r);while(r);for(var s=0;s<e.ancestors.length;s++)n=e.ancestors[s],f._handleTopLevel(e.topLevelType,n,e.nativeEvent,p(e.nativeEvent))}function o(e){var t=h(window);e(t)}var i=n(6),l=n(75),u=n(10),m=n(17),d=n(7),c=n(13),p=n(60),h=n(176);i(r.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),m.addPoolingTo(r,m.twoArgumentPooler);var f={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:u.canUseDOM?window:null,setHandleTopLevel:function(e){f._handleTopLevel=e},setEnabled:function(e){f._enabled=!!e},isEnabled:function(){return f._enabled},trapBubbledEvent:function(e,t,n){return n?l.listen(n,t,f.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){return n?l.capture(n,t,f.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var t=o.bind(null,e);l.listen(window,"scroll",t)},dispatchEvent:function(e,t){if(f._enabled){var n=r.getPooled(e,t);try{c.batchedUpdates(s,n)}finally{r.release(n)}}}};e.exports=f},function(e,t,n){"use strict";var a=n(21),r=n(29),s=n(51),o=n(54),i=n(88),l=n(33),u=n(90),m=n(13),d={Component:o.injection,DOMProperty:a.injection,EmptyComponent:i.injection,EventPluginHub:r.injection,EventPluginUtils:s.injection,EventEmitter:l.injection,HostComponent:u.injection,Updates:m.injection};e.exports=d},function(e,t,n){"use strict";var a=n(270),r=/\/?>/,s=/^<\!\-\-/,o={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=a(e);return s.test(e)?e:e.replace(r," "+o.CHECKSUM_ATTR_NAME+'="'+t+'"$&')},canReuseMarkup:function(e,t){var n=t.getAttribute(o.CHECKSUM_ATTR_NAME);n=n&&parseInt(n,10);var r=a(e);return r===n}};e.exports=o},function(e,t,n){"use strict";function a(e,t,n){return{type:"INSERT_MARKUP",content:e,fromIndex:null,fromNode:null,toIndex:n,afterNode:t}}function r(e,t,n){return{type:"MOVE_EXISTING",content:null,fromIndex:e._mountIndex,fromNode:c.getHostNode(e),toIndex:n,afterNode:t}}function s(e,t){return{type:"REMOVE_NODE",content:null,fromIndex:e._mountIndex,fromNode:t,toIndex:null,afterNode:null}}function o(e){return{type:"SET_MARKUP",content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function i(e){return{type:"TEXT_CONTENT",content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function l(e,t){return t&&(e=e||[],e.push(t)),e}function u(e,t){d.processChildrenUpdates(e,t)}var m=n(5),d=n(54),c=(n(31),n(12),n(15),n(22)),p=n(227),h=(n(11),n(273)),f=(n(2),{Mixin:{_reconcilerInstantiateChildren:function(e,t,n){return p.instantiateChildren(e,t,n)},_reconcilerUpdateChildren:function(e,t,n,a,r,s){var o,i=0;return o=h(t,i),p.updateChildren(e,o,n,a,r,this,this._hostContainerInfo,s,i),o},mountChildren:function(e,t,n){var a=this._reconcilerInstantiateChildren(e,t,n);this._renderedChildren=a;var r=[],s=0;for(var o in a)if(a.hasOwnProperty(o)){var i=a[o],l=0,u=c.mountComponent(i,t,this,this._hostContainerInfo,n,l);i._mountIndex=s++,r.push(u)}return r},updateTextContent:function(e){var t=this._renderedChildren;p.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&m("118");var a=[i(e)];u(this,a)},updateMarkup:function(e){var t=this._renderedChildren;p.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&m("118");var a=[o(e)];u(this,a)},updateChildren:function(e,t,n){this._updateChildren(e,t,n)},_updateChildren:function(e,t,n){var a=this._renderedChildren,r={},s=[],o=this._reconcilerUpdateChildren(a,e,s,r,t,n);if(o||a){var i,m=null,d=0,p=0,h=0,f=null;for(i in o)if(o.hasOwnProperty(i)){var y=a&&a[i],g=o[i];y===g?(m=l(m,this.moveChild(y,f,d,p)),p=Math.max(y._mountIndex,p),y._mountIndex=d):(y&&(p=Math.max(y._mountIndex,p)),m=l(m,this._mountChildAtIndex(g,s[h],f,d,t,n)),h++),d++,f=c.getHostNode(g)}for(i in r)r.hasOwnProperty(i)&&(m=l(m,this._unmountChild(a[i],r[i])));m&&u(this,m),this._renderedChildren=o}},unmountChildren:function(e){var t=this._renderedChildren;p.unmountChildren(t,e),this._renderedChildren=null},moveChild:function(e,t,n,a){if(e._mountIndex<a)return r(e,t,n)},createChild:function(e,t,n){return a(n,t,e._mountIndex)},removeChild:function(e,t){return s(e,t)},_mountChildAtIndex:function(e,t,n,a,r,s){return e._mountIndex=a,this.createChild(e,n,t)},_unmountChild:function(e,t){var n=this.removeChild(e,t);return e._mountIndex=null,n}}});e.exports=f},function(e,t,n){"use strict";function a(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)}var r=n(5),s=(n(2),{addComponentAsRefTo:function(e,t,n){a(n)?void 0:r("119"),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){a(n)?void 0:r("120");var s=n.getPublicInstance();s&&s.refs[t]===e.getPublicInstance()&&n.detachRef(t)}});e.exports=s},function(e,t){"use strict";var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=n},function(e,t,n){"use strict";function a(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=s.getPooled(null),this.useCreateElement=e}var r=n(6),s=n(84),o=n(17),i=n(33),l=n(91),u=(n(12),n(35)),m=n(56),d={initialize:l.getSelectionInformation,close:l.restoreSelection},c={initialize:function(){var e=i.isEnabled();return i.setEnabled(!1),e},close:function(e){i.setEnabled(e)}},p={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},h=[d,c,p],f={getTransactionWrappers:function(){return h},getReactMountReady:function(){return this.reactMountReady},getUpdateQueue:function(){return m},checkpoint:function(){return this.reactMountReady.checkpoint()},rollback:function(e){this.reactMountReady.rollback(e)},destructor:function(){s.release(this.reactMountReady),this.reactMountReady=null}};r(a.prototype,u,f),o.addPoolingTo(a),e.exports=a},function(e,t,n){"use strict";function a(e,t,n){"function"==typeof e?e(t.getPublicInstance()):s.addComponentAsRefTo(t,e,n)}function r(e,t,n){"function"==typeof e?e(null):s.removeComponentAsRefFrom(t,e,n)}var s=n(250),o={};o.attachRefs=function(e,t){if(null!==t&&"object"==typeof t){var n=t.ref;null!=n&&a(n,e,t._owner)}},o.shouldUpdateRefs=function(e,t){var n=null,a=null;null!==e&&"object"==typeof e&&(n=e.ref,a=e._owner);var r=null,s=null;return null!==t&&"object"==typeof t&&(r=t.ref,s=t._owner),n!==r||"string"==typeof r&&s!==a},o.detachRefs=function(e,t){if(null!==t&&"object"==typeof t){var n=t.ref;null!=n&&r(n,e,t._owner)}},e.exports=o},function(e,t,n){"use strict";function a(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.useCreateElement=!1,this.updateQueue=new i(this)}var r=n(6),s=n(17),o=n(35),i=(n(12),n(255)),l=[],u={enqueue:function(){}},m={getTransactionWrappers:function(){return l},getReactMountReady:function(){return u},getUpdateQueue:function(){return this.updateQueue},destructor:function(){},checkpoint:function(){},rollback:function(){}};r(a.prototype,o,m),s.addPoolingTo(a),e.exports=a},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){}var s=n(56),o=(n(3),function(){function e(t){a(this,e),this.transaction=t}return e.prototype.isMounted=function(e){return!1},e.prototype.enqueueCallback=function(e,t,n){this.transaction.isInTransaction()&&s.enqueueCallback(e,t,n)},e.prototype.enqueueForceUpdate=function(e){this.transaction.isInTransaction()?s.enqueueForceUpdate(e):r(e,"forceUpdate")},e.prototype.enqueueReplaceState=function(e,t){this.transaction.isInTransaction()?s.enqueueReplaceState(e,t):r(e,"replaceState")},e.prototype.enqueueSetState=function(e,t){this.transaction.isInTransaction()?s.enqueueSetState(e,t):r(e,"setState")},e}());e.exports=o},function(e,t){"use strict";e.exports="15.4.2"},function(e,t){"use strict";var n={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},a={accentHeight:"accent-height",accumulate:0,additive:0,alignmentBaseline:"alignment-baseline",allowReorder:"allowReorder",alphabetic:0,amplitude:0,arabicForm:"arabic-form",ascent:0,attributeName:"attributeName",attributeType:"attributeType",autoReverse:"autoReverse",azimuth:0,baseFrequency:"baseFrequency",baseProfile:"baseProfile",baselineShift:"baseline-shift",bbox:0,begin:0,bias:0,by:0,calcMode:"calcMode",capHeight:"cap-height",clip:0,clipPath:"clip-path",clipRule:"clip-rule",clipPathUnits:"clipPathUnits",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",contentScriptType:"contentScriptType",contentStyleType:"contentStyleType",cursor:0,cx:0,cy:0,d:0,decelerate:0,descent:0,diffuseConstant:"diffuseConstant",direction:0,display:0,divisor:0,dominantBaseline:"dominant-baseline",dur:0,dx:0,dy:0,edgeMode:"edgeMode",elevation:0,enableBackground:"enable-background",end:0,exponent:0,externalResourcesRequired:"externalResourcesRequired",fill:0,fillOpacity:"fill-opacity",fillRule:"fill-rule",filter:0,filterRes:"filterRes",filterUnits:"filterUnits",floodColor:"flood-color",floodOpacity:"flood-opacity",focusable:0,fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",glyphRef:"glyphRef",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",hanging:0,horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",ideographic:0,imageRendering:"image-rendering",in:0,in2:0,intercept:0,k:0,k1:0,k2:0,k3:0,k4:0,kernelMatrix:"kernelMatrix",kernelUnitLength:"kernelUnitLength",kerning:0,keyPoints:"keyPoints",keySplines:"keySplines",keyTimes:"keyTimes",lengthAdjust:"lengthAdjust",letterSpacing:"letter-spacing",lightingColor:"lighting-color",limitingConeAngle:"limitingConeAngle",local:0,markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",markerHeight:"markerHeight",markerUnits:"markerUnits",markerWidth:"markerWidth",mask:0,maskContentUnits:"maskContentUnits",maskUnits:"maskUnits",mathematical:0,mode:0,numOctaves:"numOctaves",offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pathLength:"pathLength",patternContentUnits:"patternContentUnits",patternTransform:"patternTransform",patternUnits:"patternUnits",pointerEvents:"pointer-events",points:0,pointsAtX:"pointsAtX",pointsAtY:"pointsAtY",pointsAtZ:"pointsAtZ",preserveAlpha:"preserveAlpha",preserveAspectRatio:"preserveAspectRatio",primitiveUnits:"primitiveUnits",r:0,radius:0,refX:"refX",refY:"refY",renderingIntent:"rendering-intent",repeatCount:"repeatCount",repeatDur:"repeatDur",requiredExtensions:"requiredExtensions",requiredFeatures:"requiredFeatures",restart:0,result:0,rotate:0,rx:0,ry:0,scale:0,seed:0,shapeRendering:"shape-rendering",slope:0,spacing:0,specularConstant:"specularConstant",specularExponent:"specularExponent",speed:0,spreadMethod:"spreadMethod",startOffset:"startOffset",stdDeviation:"stdDeviation",stemh:0,stemv:0,stitchTiles:"stitchTiles",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",string:0,stroke:0,strokeDasharray:"stroke-dasharray",strokeDashoffset:"stroke-dashoffset",strokeLinecap:"stroke-linecap",strokeLinejoin:"stroke-linejoin",strokeMiterlimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",surfaceScale:"surfaceScale",systemLanguage:"systemLanguage",tableValues:"tableValues",targetX:"targetX",targetY:"targetY",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",textLength:"textLength",to:0,transform:0,u1:0,u2:0,underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicode:0,unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",values:0,vectorEffect:"vector-effect",version:0,vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",viewBox:"viewBox",viewTarget:"viewTarget",visibility:0,widths:0,wordSpacing:"word-spacing",writingMode:"writing-mode",x:0,xHeight:"x-height",x1:0,x2:0,xChannelSelector:"xChannelSelector",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlns:0,xmlnsXlink:"xmlns:xlink",xmlLang:"xml:lang",xmlSpace:"xml:space",y:0,y1:0,y2:0,yChannelSelector:"yChannelSelector",z:0,zoomAndPan:"zoomAndPan"},r={Properties:{},DOMAttributeNamespaces:{xlinkActuate:n.xlink,xlinkArcrole:n.xlink,xlinkHref:n.xlink,xlinkRole:n.xlink,xlinkShow:n.xlink,xlinkTitle:n.xlink,xlinkType:n.xlink,xmlBase:n.xml,xmlLang:n.xml,xmlSpace:n.xml},DOMAttributeNames:{}};Object.keys(a).forEach(function(e){r.Properties[e]=0,a[e]&&(r.DOMAttributeNames[e]=a[e])}),e.exports=r},function(e,t,n){"use strict";function a(e){if("selectionStart"in e&&l.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function r(e,t){if(v||null==f||f!==m())return null;var n=a(f);if(!g||!c(g,n)){g=n;var r=u.getPooled(h.select,y,e,t);return r.type="select",r.target=f,s.accumulateTwoPhaseDispatches(r),r}return null}var s=n(30),o=n(10),i=n(7),l=n(91),u=n(14),m=n(77),d=n(100),c=n(43),p=o.canUseDOM&&"documentMode"in document&&document.documentMode<=11,h={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:["topBlur","topContextMenu","topFocus","topKeyDown","topKeyUp","topMouseDown","topMouseUp","topSelectionChange"]}},f=null,y=null,g=null,v=!1,b=!1,T={eventTypes:h,extractEvents:function(e,t,n,a){if(!b)return null;var s=t?i.getNodeFromInstance(t):window;switch(e){case"topFocus":(d(s)||"true"===s.contentEditable)&&(f=s,y=t,g=null);break;case"topBlur":f=null,y=null,g=null;break;case"topMouseDown":v=!0;break;case"topContextMenu":case"topMouseUp":return v=!1,r(n,a);case"topSelectionChange":if(p)break;case"topKeyDown":case"topKeyUp":return r(n,a)}return null},didPutListener:function(e,t,n){"onSelect"===t&&(b=!0)}};e.exports=T},function(e,t,n){"use strict";function a(e){return"."+e._rootNodeID}function r(e){return"button"===e||"input"===e||"select"===e||"textarea"===e}var s=n(5),o=n(75),i=n(30),l=n(7),u=n(260),m=n(261),d=n(14),c=n(264),p=n(266),h=n(34),f=n(263),y=n(267),g=n(268),v=n(32),b=n(269),T=n(11),w=n(58),S=(n(2),{}),E={};["abort","animationEnd","animationIteration","animationStart","blur","canPlay","canPlayThrough","click","contextMenu","copy","cut","doubleClick","drag","dragEnd","dragEnter","dragExit","dragLeave","dragOver","dragStart","drop","durationChange","emptied","encrypted","ended","error","focus","input","invalid","keyDown","keyPress","keyUp","load","loadedData","loadedMetadata","loadStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","paste","pause","play","playing","progress","rateChange","reset","scroll","seeked","seeking","stalled","submit","suspend","timeUpdate","touchCancel","touchEnd","touchMove","touchStart","transitionEnd","volumeChange","waiting","wheel"].forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t,a="top"+t,r={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[a]};S[e]=r,E[a]=r});var R={},P={eventTypes:S,extractEvents:function(e,t,n,a){var r=E[e];if(!r)return null;var o;switch(e){case"topAbort":case"topCanPlay":case"topCanPlayThrough":case"topDurationChange":case"topEmptied":case"topEncrypted":case"topEnded":case"topError":case"topInput":case"topInvalid":case"topLoad":case"topLoadedData":case"topLoadedMetadata":case"topLoadStart":case"topPause":case"topPlay":case"topPlaying":case"topProgress":case"topRateChange":case"topReset":case"topSeeked":case"topSeeking":case"topStalled":case"topSubmit":case"topSuspend":case"topTimeUpdate":case"topVolumeChange":case"topWaiting":o=d;break;case"topKeyPress":if(0===w(n))return null;case"topKeyDown":case"topKeyUp":o=p;break;case"topBlur":case"topFocus":o=c;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":o=h;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":o=f;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":o=y;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":o=u;break;case"topTransitionEnd":o=g;break;case"topScroll":o=v;break;case"topWheel":o=b;break;case"topCopy":case"topCut":case"topPaste":o=m}o?void 0:s("86",e);var l=o.getPooled(r,t,n,a);return i.accumulateTwoPhaseDispatches(l),l},didPutListener:function(e,t,n){if("onClick"===t&&!r(e._tag)){var s=a(e),i=l.getNodeFromInstance(e);R[s]||(R[s]=o.listen(i,"click",T))}},willDeleteListener:function(e,t){if("onClick"===t&&!r(e._tag)){var n=a(e);R[n].remove(),delete R[n]}}};e.exports=P},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(14),s={animationName:null,elapsedTime:null,pseudoElement:null};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(14),s={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(14),s={data:null};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(34),s={dataTransfer:null};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(32),s={relatedTarget:null};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(14),s={data:null};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(32),s=n(58),o=n(274),i=n(59),l={key:o,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:i,charCode:function(e){return"keypress"===e.type?s(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?s(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};r.augmentClass(a,l),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(32),s=n(59),o={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:s};r.augmentClass(a,o),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(14),s={propertyName:null,elapsedTime:null,pseudoElement:null};r.augmentClass(a,s),e.exports=a},function(e,t,n){"use strict";function a(e,t,n,a){return r.call(this,e,t,n,a)}var r=n(34),s={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};r.augmentClass(a,s),e.exports=a},function(e,t){"use strict";function n(e){for(var t=1,n=0,r=0,s=e.length,o=s&-4;r<o;){for(var i=Math.min(r+4096,o);r<i;r+=4)n+=(t+=e.charCodeAt(r))+(t+=e.charCodeAt(r+1))+(t+=e.charCodeAt(r+2))+(t+=e.charCodeAt(r+3));t%=a,n%=a}for(;r<s;r++)n+=t+=e.charCodeAt(r);return t%=a,n%=a,t|n<<16}var a=65521;e.exports=n},function(e,t,n){"use strict";
function a(e,t,n){var a=null==t||"boolean"==typeof t||""===t;if(a)return"";var r=isNaN(t);if(r||0===t||s.hasOwnProperty(e)&&s[e])return""+t;if("string"==typeof t){t=t.trim()}return t+"px"}var r=n(83),s=(n(3),r.isUnitlessNumber);e.exports=a},function(e,t,n){"use strict";function a(e){if(null==e)return null;if(1===e.nodeType)return e;var t=o.get(e);return t?(t=i(t),t?s.getNodeFromInstance(t):null):void("function"==typeof e.render?r("44"):r("45",Object.keys(e)))}var r=n(5),s=(n(15),n(7)),o=n(31),i=n(97);n(2),n(3);e.exports=a},function(e,t,n){(function(t){"use strict";function a(e,t,n,a){if(e&&"object"==typeof e){var r=e,s=void 0===r[n];s&&null!=t&&(r[n]=t)}}function r(e,t){if(null==e)return e;var n={};return s(e,a,n),n}var s=(n(52),n(102));n(3);e.exports=r}).call(t,n(81))},function(e,t,n){"use strict";function a(e){if(e.key){var t=s[e.key]||e.key;if("Unidentified"!==t)return t}if("keypress"===e.type){var n=r(e);return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===e.type||"keyup"===e.type?o[e.keyCode]||"Unidentified":""}var r=n(58),s={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},o={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};e.exports=a},115,function(e,t){"use strict";function n(){return a++}var a=1;e.exports=n},function(e,t){"use strict";function n(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function a(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function r(e,t){for(var r=n(e),s=0,o=0;r;){if(3===r.nodeType){if(o=s+r.textContent.length,s<=t&&o>=t)return{node:r,offset:t-s};s=o}r=n(a(r))}}e.exports=r},function(e,t,n){"use strict";function a(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function r(e){if(i[e])return i[e];if(!o[e])return e;var t=o[e];for(var n in t)if(t.hasOwnProperty(n)&&n in l)return i[e]=t[n];return""}var s=n(10),o={animationend:a("Animation","AnimationEnd"),animationiteration:a("Animation","AnimationIteration"),animationstart:a("Animation","AnimationStart"),transitionend:a("Transition","TransitionEnd")},i={},l={};s.canUseDOM&&(l=document.createElement("div").style,"AnimationEvent"in window||(delete o.animationend.animation,delete o.animationiteration.animation,delete o.animationstart.animation),"TransitionEvent"in window||delete o.transitionend.transition),e.exports=r},function(e,t,n){"use strict";function a(e){return'"'+r(e)+'"'}var r=n(36);e.exports=a},function(e,t,n){"use strict";var a=n(92);e.exports=a.renderSubtreeIntoContainer},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0,t.default=void 0;var i=n(1),l=n(105),u=n(64),m=(a(u),function(e){function t(n,a){r(this,t);var o=s(this,e.call(this,n,a));return o.store=n.store,o}return o(t,e),t.prototype.getChildContext=function(){return{store:this.store,storeSubscription:null}},t.prototype.render=function(){return i.Children.only(this.props.children)},t}(i.Component));t.default=m,m.propTypes={store:l.storeShape.isRequired,children:i.PropTypes.element.isRequired},m.childContextTypes={store:l.storeShape.isRequired,storeSubscription:l.subscriptionShape},m.displayName="Provider"},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}function s(e,t,n){for(var a=t.length-1;a>=0;a--){var r=t[a](e);if(r)return r}return function(t,a){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+a.wrappedComponentName+".")}}function o(e,t){return e===t}function i(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.connectHOC,n=void 0===t?m.default:t,a=e.mapStateToPropsFactories,i=void 0===a?y.default:a,u=e.mapDispatchToPropsFactories,d=void 0===u?h.default:u,p=e.mergePropsFactories,f=void 0===p?v.default:p,g=e.selectorFactory,b=void 0===g?T.default:g;return function(e,t,a){var u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},m=u.pure,p=void 0===m||m,h=u.areStatesEqual,y=void 0===h?o:h,g=u.areOwnPropsEqual,v=void 0===g?c.default:g,T=u.areStatePropsEqual,w=void 0===T?c.default:T,S=u.areMergedPropsEqual,E=void 0===S?c.default:S,R=r(u,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),P=s(e,i,"mapStateToProps"),C=s(t,d,"mapDispatchToProps"),k=s(a,f,"mergeProps");return n(b,l({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:P,initMapDispatchToProps:C,initMergeProps:k,pure:p,areStatesEqual:y,areOwnPropsEqual:v,areStatePropsEqual:w,areMergedPropsEqual:E},R))}}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};t.createConnect=i;var u=n(103),m=a(u),d=n(289),c=a(d),p=n(283),h=a(p),f=n(284),y=a(f),g=n(285),v=a(g),b=n(286),T=a(b);t.default=i()},function(e,t,n){"use strict";function a(e){return"function"==typeof e?(0,i.wrapMapToPropsFunc)(e,"mapDispatchToProps"):void 0}function r(e){return e?void 0:(0,i.wrapMapToPropsConstant)(function(e){return{dispatch:e}})}function s(e){return e&&"object"==typeof e?(0,i.wrapMapToPropsConstant)(function(t){return(0,o.bindActionCreators)(e,t)}):void 0}t.__esModule=!0,t.whenMapDispatchToPropsIsFunction=a,t.whenMapDispatchToPropsIsMissing=r,t.whenMapDispatchToPropsIsObject=s;var o=n(70),i=n(104);t.default=[a,r,s]},function(e,t,n){"use strict";function a(e){return"function"==typeof e?(0,s.wrapMapToPropsFunc)(e,"mapStateToProps"):void 0}function r(e){return e?void 0:(0,s.wrapMapToPropsConstant)(function(){return{}})}t.__esModule=!0,t.whenMapStateToPropsIsFunction=a,t.whenMapStateToPropsIsMissing=r;var s=n(104);t.default=[a,r]},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){return l({},n,e,t)}function s(e){return function(t,n){var a=(n.displayName,n.pure),r=n.areMergedPropsEqual,s=!1,o=void 0;return function(t,n,i){var l=e(t,n,i);return s?a&&r(l,o)||(o=l):(s=!0,o=l),o}}}function o(e){return"function"==typeof e?s(e):void 0}function i(e){return e?void 0:function(){return r}}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};t.defaultMergeProps=r,t.wrapMergePropsFunc=s,t.whenMergePropsIsFunction=o,t.whenMergePropsIsOmitted=i;var u=n(106);a(u);t.default=[o,i]},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}function s(e,t,n,a){return function(r,s){return n(e(r,s),t(a,s),s)}}function o(e,t,n,a,r){function s(r,s){return h=r,f=s,y=e(h,f),g=t(a,f),v=n(y,g,f),p=!0,v}function o(){return y=e(h,f),t.dependsOnOwnProps&&(g=t(a,f)),v=n(y,g,f)}function i(){return e.dependsOnOwnProps&&(y=e(h,f)),t.dependsOnOwnProps&&(g=t(a,f)),v=n(y,g,f)}function l(){var t=e(h,f),a=!c(t,y);return y=t,a&&(v=n(y,g,f)),v}function u(e,t){var n=!d(t,f),a=!m(e,h);return h=e,f=t,n&&a?o():n?i():a?l():v}var m=r.areStatesEqual,d=r.areOwnPropsEqual,c=r.areStatePropsEqual,p=!1,h=void 0,f=void 0,y=void 0,g=void 0,v=void 0;return function(e,t){return p?u(e,t):s(e,t)}}function i(e,t){var n=t.initMapStateToProps,a=t.initMapDispatchToProps,i=t.initMergeProps,l=r(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),u=n(e,l),m=a(e,l),d=i(e,l),c=l.pure?o:s;return c(u,m,d,e,l)}t.__esModule=!0,t.impureFinalPropsSelectorFactory=s,t.pureFinalPropsSelectorFactory=o,t.default=i;var l=n(287);a(l)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){if(!e)throw new Error("Unexpected value for "+t+" in "+n+".");"mapStateToProps"!==t&&"mapDispatchToProps"!==t||e.hasOwnProperty("dependsOnOwnProps")||(0,i.default)("The selector for "+t+" of "+n+" did not specify a value for dependsOnOwnProps.")}function s(e,t,n,a){r(e,"mapStateToProps",a),r(t,"mapDispatchToProps",a),r(n,"mergeProps",a)}t.__esModule=!0,t.default=s;var o=n(64),i=a(o)},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(){var e=[],t=[];return{clear:function(){t=r,e=r},notify:function(){for(var n=e=t,a=0;a<n.length;a++)n[a]()},subscribe:function(n){var a=!0;return t===e&&(t=e.slice()),t.push(n),function(){a&&e!==r&&(a=!1,t===e&&(t=e.slice()),t.splice(t.indexOf(n),1))}}}}t.__esModule=!0;var r=null,s={notify:function(){}},o=function(){function e(t,a,r){n(this,e),this.store=t,this.parentSub=a,this.onStateChange=r,this.unsubscribe=null,this.listeners=s}return e.prototype.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},e.prototype.notifyNestedSubs=function(){this.listeners.notify()},e.prototype.isSubscribed=function(){return Boolean(this.unsubscribe)},e.prototype.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=a())},e.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=s)},e}();t.default=o},function(e,t){"use strict";function n(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function a(e,t){if(n(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var a=Object.keys(e),s=Object.keys(t);if(a.length!==s.length)return!1;for(var o=0;o<a.length;o++)if(!r.call(t,a[o])||!n(e[a[o]],t[a[o]]))return!1;return!0}t.__esModule=!0,t.default=a;var r=Object.prototype.hasOwnProperty},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=n(79),m=a(u),d=n(8),c=function(e){function t(){var n,a,o;r(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=s(this,e.call.apply(e,[this].concat(l))),a.history=(0,m.default)(a.props),o=n,s(a,o)}return o(t,e),t.prototype.render=function(){return l.default.createElement(d.Router,{history:this.history,children:this.props.children})},t}(l.default.Component);c.propTypes={basename:i.PropTypes.string,forceRefresh:i.PropTypes.bool,getUserConfirmation:i.PropTypes.func,keyLength:i.PropTypes.number,children:i.PropTypes.node},t.default=c},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=n(182),m=a(u),d=n(8),c=function(e){function t(){var n,a,o;r(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=s(this,e.call.apply(e,[this].concat(l))),a.history=(0,m.default)(a.props),o=n,s(a,o)}return o(t,e),t.prototype.render=function(){return l.default.createElement(d.Router,{history:this.history,children:this.props.children})},t}(l.default.Component);c.propTypes={basename:i.PropTypes.string,getUserConfirmation:i.PropTypes.func,hashType:i.PropTypes.oneOf(["hashbang","noslash","slash"]),children:i.PropTypes.node},t.default=c},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.MemoryRouter}})},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}t.__esModule=!0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=n(1),l=a(i),u=n(8),m=n(107),d=a(m),c=function(e){var t=e.to,n=e.exact,a=e.strict,i=e.activeClassName,m=e.className,c=e.activeStyle,p=e.style,h=e.isActive,f=r(e,["to","exact","strict","activeClassName","className","activeStyle","style","isActive"]);return l.default.createElement(u.Route,{path:"object"===("undefined"==typeof t?"undefined":o(t))?t.pathname:t,exact:n,strict:a,children:function(e){var n=e.location,a=e.match,r=!!(h?h(a,n):a);return l.default.createElement(d.default,s({to:t,className:r?[i,m].join(" "):m,style:r?s({},p,c):p},f))}})};c.propTypes={to:d.default.propTypes.to,exact:i.PropTypes.bool,strict:i.PropTypes.bool,activeClassName:i.PropTypes.string,className:i.PropTypes.string,activeStyle:i.PropTypes.object,style:i.PropTypes.object,isActive:i.PropTypes.func},c.defaultProps={activeClassName:"active"},t.default=c},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.Prompt}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.Redirect}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.Route}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.Router}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.StaticRouter}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.Switch}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.matchPath}})},function(e,t,n){"use strict";t.__esModule=!0;var a=n(8);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a.withRouter}})},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=n(8),m=n(109),d=function(e){function t(){var n,a,o;r(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=s(this,e.call.apply(e,[this].concat(l))),a.handleLocationChange=function(e){a.store.dispatch({type:m.LOCATION_CHANGE,payload:e})},o=n,s(a,o)}return o(t,e),t.prototype.componentWillMount=function(){var e=this.props,t=e.store,n=e.history;this.store=t||this.context.store,this.unsubscribeFromHistory=n.listen(this.handleLocationChange),this.handleLocationChange(n.location)},t.prototype.componentWillUnmount=function(){this.unsubscribeFromHistory&&this.unsubscribeFromHistory()},t.prototype.render=function(){return l.default.createElement(u.Router,this.props)},t}(i.Component);d.propTypes={store:i.PropTypes.object,history:i.PropTypes.object,children:i.PropTypes.node},d.contextTypes={store:i.PropTypes.object},t.default=d},function(e,t,n){"use strict";function a(e){return function(){return function(t){return function(n){if(n.type!==r.CALL_HISTORY_METHOD)return t(n);var a=n.payload,s=a.method,o=a.args;e[s].apply(e,o)}}}}t.__esModule=!0,t.default=a;var r=n(108)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=n(183),m=a(u),d=n(66),c=a(d),p=function(e){function t(){var n,a,o;r(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=s(this,e.call.apply(e,[this].concat(l))),a.history=(0,m.default)(a.props),o=n,s(a,o)}return o(t,e),t.prototype.render=function(){return l.default.createElement(c.default,{history:this.history,children:this.props.children})},t}(l.default.Component);p.propTypes={initialEntries:i.PropTypes.array,initialIndex:i.PropTypes.number,getUserConfirmation:i.PropTypes.func,keyLength:i.PropTypes.number,children:i.PropTypes.node},t.default=p},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=function(e){function t(){return r(this,t),s(this,e.apply(this,arguments))}return o(t,e),t.prototype.enable=function(e){this.unblock&&this.unblock(),this.unblock=this.context.router.history.block(e)},t.prototype.disable=function(){this.unblock&&(this.unblock(),this.unblock=null)},t.prototype.componentWillMount=function(){this.props.when&&this.enable(this.props.message)},t.prototype.componentWillReceiveProps=function(e){e.when?this.props.when&&this.props.message===e.message||this.enable(e.message):this.disable()},t.prototype.componentWillUnmount=function(){this.disable()},t.prototype.render=function(){return null},t}(l.default.Component);u.propTypes={when:i.PropTypes.bool,message:i.PropTypes.oneOfType([i.PropTypes.func,i.PropTypes.string]).isRequired},u.defaultProps={when:!0},u.contextTypes={router:i.PropTypes.shape({history:i.PropTypes.shape({block:i.PropTypes.func.isRequired}).isRequired}).isRequired},t.default=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=function(e){function t(){return r(this,t),s(this,e.apply(this,arguments))}return o(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.perform=function(){var e=this.context.router.history,t=this.props,n=t.push,a=t.to;n?e.push(a):e.replace(a)},t.prototype.render=function(){return null},t}(l.default.Component);u.propTypes={push:i.PropTypes.bool,from:i.PropTypes.string,to:i.PropTypes.oneOfType([i.PropTypes.string,i.PropTypes.object])},u.defaultProps={push:!1},u.contextTypes={router:i.PropTypes.shape({history:i.PropTypes.shape({push:i.PropTypes.func.isRequired,replace:i.PropTypes.func.isRequired}).isRequired,staticContext:i.PropTypes.object}).isRequired},t.default=u},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},u=n(28),m=a(u),d=n(1),c=a(d),p=n(27),h=n(66),f=a(h),y=function(e){var t=e.pathname,n=void 0===t?"/":t,a=e.search,r=void 0===a?"":a,s=e.hash,o=void 0===s?"":s;return{pathname:n,search:"?"===r?"":r,hash:"#"===o?"":o}},g=function(e,t){return e?l({},t,{pathname:(0,p.addLeadingSlash)(e)+t.pathname}):t},v=function(e,t){if(!e)return t;var n=(0,p.addLeadingSlash)(e);return 0!==t.pathname.indexOf(n)?t:l({},t,{pathname:t.pathname.substr(n.length)})},b=function(e){return"string"==typeof e?(0,p.parsePath)(e):y(e)},T=function(e){return"string"==typeof e?e:(0,p.createPath)(e)},w=function(e){return function(){(0,m.default)(!1,"You cannot %s with <StaticRouter>",e)}},S=function(){},E=function(e){function t(){var n,a,r;s(this,t);for(var i=arguments.length,l=Array(i),u=0;u<i;u++)l[u]=arguments[u];return n=a=o(this,e.call.apply(e,[this].concat(l))),a.createHref=function(e){return(0,p.addLeadingSlash)(a.props.basename+T(e))},a.handlePush=function(e){var t=a.props,n=t.basename,r=t.context;r.action="PUSH",r.location=g(n,b(e)),r.url=T(r.location)},a.handleReplace=function(e){var t=a.props,n=t.basename,r=t.context;r.action="REPLACE",r.location=g(n,b(e)),r.url=T(r.location)},a.handleListen=function(){return S},a.handleBlock=function(){return S},r=n,o(a,r)}return i(t,e),t.prototype.getChildContext=function(){return{router:{staticContext:this.props.context}}},t.prototype.render=function(){var e=this.props,t=e.basename,n=(e.context,e.location),a=r(e,["basename","context","location"]),s={createHref:this.createHref,action:"POP",location:v(t,b(n)),push:this.handlePush,replace:this.handleReplace,go:w("go"),goBack:w("goBack"),goForward:w("goForward"),listen:this.handleListen,block:this.handleBlock};return c.default.createElement(f.default,l({},a,{history:s}))},t}(c.default.Component);E.propTypes={basename:d.PropTypes.string,context:d.PropTypes.object.isRequired,location:d.PropTypes.oneOfType([d.PropTypes.string,d.PropTypes.object])},E.defaultProps={basename:"",location:"/"},E.childContextTypes={router:d.PropTypes.object.isRequired},t.default=E},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(1),l=a(i),u=n(18),m=a(u),d=n(67),c=a(d),p=function(e){function t(){return r(this,t),s(this,e.apply(this,arguments))}return o(t,e),t.prototype.componentWillReceiveProps=function(e){(0,m.default)(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),(0,m.default)(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,a=void 0,r=void 0;return l.default.Children.forEach(t,function(t){var s=t.props,o=s.path,i=s.exact,l=s.strict,u=s.from,m=o||u;null==a&&(r=t,a=m?(0,c.default)(n.pathname,{path:m,exact:i,strict:l}):e.match)}),a?l.default.cloneElement(r,{location:n,computedMatch:a}):null},t}(l.default.Component);p.contextTypes={router:i.PropTypes.shape({route:i.PropTypes.object.isRequired}).isRequired},p.propTypes={children:i.PropTypes.node,location:i.PropTypes.object},t.default=p},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(1),o=a(s),i=n(110),l=a(i),u=function(e){var t=function(t){return o.default.createElement(l.default,{render:function(n){return o.default.createElement(e,r({},t,n))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t};t.default=u},52,[331,25],function(e,t,n){"use strict";function a(e){return(""+e).replace(T,"$&/")}function r(e,t){this.func=e,this.context=t,this.count=0}function s(e,t,n){var a=e.func,r=e.context;a.call(r,t,e.count++)}function o(e,t,n){if(null==e)return e;var a=r.getPooled(t,n);g(e,s,a),r.release(a)}function i(e,t,n,a){this.result=e,this.keyPrefix=t,this.func=n,this.context=a,this.count=0}function l(e,t,n){var r=e.result,s=e.keyPrefix,o=e.func,i=e.context,l=o.call(i,t,e.count++);Array.isArray(l)?u(l,r,n,y.thatReturnsArgument):null!=l&&(f.isValidElement(l)&&(l=f.cloneAndReplaceKey(l,s+(!l.key||t&&t.key===l.key?"":a(l.key)+"/")+n)),r.push(l))}function u(e,t,n,r,s){var o="";null!=n&&(o=a(n)+"/");var u=i.getPooled(t,o,r,s);g(e,l,u),i.release(u)}function m(e,t,n){if(null==e)return e;var a=[];return u(e,a,null,t,n),a}function d(e,t,n){return null}function c(e,t){return g(e,d,null)}function p(e){var t=[];return u(e,t,null,y.thatReturnsArgument),t}var h=n(311),f=n(24),y=n(11),g=n(320),v=h.twoArgumentPooler,b=h.fourArgumentPooler,T=/\/+/g;r.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},h.addPoolingTo(r,v),i.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},h.addPoolingTo(i,b);var w={forEach:o,map:m,mapIntoWithKeyPrefixInternal:u,count:c,toArray:p};e.exports=w},function(e,t,n){"use strict";function a(e){return e}function r(e,t){var n=T.hasOwnProperty(t)?T[t]:null;S.hasOwnProperty(t)&&("OVERRIDE_BASE"!==n?c("73",t):void 0),e&&("DEFINE_MANY"!==n&&"DEFINE_MANY_MERGED"!==n?c("74",t):void 0)}function s(e,t){if(t){"function"==typeof t?c("75"):void 0,f.isValidElement(t)?c("76"):void 0;var n=e.prototype,a=n.__reactAutoBindPairs;t.hasOwnProperty(v)&&w.mixins(e,t.mixins);for(var s in t)if(t.hasOwnProperty(s)&&s!==v){var o=t[s],i=n.hasOwnProperty(s);if(r(i,s),w.hasOwnProperty(s))w[s](e,o);else{var m=T.hasOwnProperty(s),d="function"==typeof o,p=d&&!m&&!i&&t.autobind!==!1;if(p)a.push(s,o),n[s]=o;else if(i){var h=T[s];!m||"DEFINE_MANY_MERGED"!==h&&"DEFINE_MANY"!==h?c("77",h,s):void 0,"DEFINE_MANY_MERGED"===h?n[s]=l(n[s],o):"DEFINE_MANY"===h&&(n[s]=u(n[s],o))}else n[s]=o}}}else;}function o(e,t){if(t)for(var n in t){var a=t[n];if(t.hasOwnProperty(n)){var r=n in w;r?c("78",n):void 0;var s=n in e;s?c("79",n):void 0,e[n]=a}}}function i(e,t){e&&t&&"object"==typeof e&&"object"==typeof t?void 0:c("80");for(var n in t)t.hasOwnProperty(n)&&(void 0!==e[n]?c("81",n):void 0,e[n]=t[n]);return e}function l(e,t){return function(){var n=e.apply(this,arguments),a=t.apply(this,arguments);if(null==n)return a;if(null==a)return n;var r={};return i(r,n),i(r,a),r}}function u(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function m(e,t){var n=t.bind(e);return n}function d(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var a=t[n],r=t[n+1];e[a]=m(e,r)}}var c=n(25),p=n(6),h=n(68),f=n(24),y=(n(113),n(69)),g=n(26),v=(n(2),n(3),"mixins"),b=[],T={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",updateComponent:"OVERRIDE_BASE"},w={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)s(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=p({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=p({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=l(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=p({},e.propTypes,t)},statics:function(e,t){o(e,t)},autobind:function(){}},S={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e),t&&this.updater.enqueueCallback(this,t,"replaceState")},isMounted:function(){return this.updater.isMounted(this)}},E=function(){};p(E.prototype,h.prototype,S);var R={createClass:function(e){
var t=a(function(e,n,a){this.__reactAutoBindPairs.length&&d(this),this.props=e,this.context=n,this.refs=g,this.updater=a||y,this.state=null;var r=this.getInitialState?this.getInitialState():null;"object"!=typeof r||Array.isArray(r)?c("82",t.displayName||"ReactCompositeComponent"):void 0,this.state=r});t.prototype=new E,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],b.forEach(s.bind(null,t)),s(t,e),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),t.prototype.render?void 0:c("83");for(var n in T)t.prototype[n]||(t.prototype[n]=null);return t},injection:{injectMixin:function(e){b.push(e)}}};e.exports=R},function(e,t,n){"use strict";var a=n(24),r=a.createFactory,s={a:r("a"),abbr:r("abbr"),address:r("address"),area:r("area"),article:r("article"),aside:r("aside"),audio:r("audio"),b:r("b"),base:r("base"),bdi:r("bdi"),bdo:r("bdo"),big:r("big"),blockquote:r("blockquote"),body:r("body"),br:r("br"),button:r("button"),canvas:r("canvas"),caption:r("caption"),cite:r("cite"),code:r("code"),col:r("col"),colgroup:r("colgroup"),data:r("data"),datalist:r("datalist"),dd:r("dd"),del:r("del"),details:r("details"),dfn:r("dfn"),dialog:r("dialog"),div:r("div"),dl:r("dl"),dt:r("dt"),em:r("em"),embed:r("embed"),fieldset:r("fieldset"),figcaption:r("figcaption"),figure:r("figure"),footer:r("footer"),form:r("form"),h1:r("h1"),h2:r("h2"),h3:r("h3"),h4:r("h4"),h5:r("h5"),h6:r("h6"),head:r("head"),header:r("header"),hgroup:r("hgroup"),hr:r("hr"),html:r("html"),i:r("i"),iframe:r("iframe"),img:r("img"),input:r("input"),ins:r("ins"),kbd:r("kbd"),keygen:r("keygen"),label:r("label"),legend:r("legend"),li:r("li"),link:r("link"),main:r("main"),map:r("map"),mark:r("mark"),menu:r("menu"),menuitem:r("menuitem"),meta:r("meta"),meter:r("meter"),nav:r("nav"),noscript:r("noscript"),object:r("object"),ol:r("ol"),optgroup:r("optgroup"),option:r("option"),output:r("output"),p:r("p"),param:r("param"),picture:r("picture"),pre:r("pre"),progress:r("progress"),q:r("q"),rp:r("rp"),rt:r("rt"),ruby:r("ruby"),s:r("s"),samp:r("samp"),script:r("script"),section:r("section"),select:r("select"),small:r("small"),source:r("source"),span:r("span"),strong:r("strong"),style:r("style"),sub:r("sub"),summary:r("summary"),sup:r("sup"),table:r("table"),tbody:r("tbody"),td:r("td"),textarea:r("textarea"),tfoot:r("tfoot"),th:r("th"),thead:r("thead"),time:r("time"),title:r("title"),tr:r("tr"),track:r("track"),u:r("u"),ul:r("ul"),var:r("var"),video:r("video"),wbr:r("wbr"),circle:r("circle"),clipPath:r("clipPath"),defs:r("defs"),ellipse:r("ellipse"),g:r("g"),image:r("image"),line:r("line"),linearGradient:r("linearGradient"),mask:r("mask"),path:r("path"),pattern:r("pattern"),polygon:r("polygon"),polyline:r("polyline"),radialGradient:r("radialGradient"),rect:r("rect"),stop:r("stop"),svg:r("svg"),text:r("text"),tspan:r("tspan")};e.exports=s},function(e,t,n){"use strict";function a(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function r(e){this.message=e,this.stack=""}function s(e){function t(t,n,a,s,o,i,l){s=s||C,i=i||a;if(null==n[a]){var u=S[o];return t?new r(null===n[a]?"The "+u+" `"+i+"` is marked as required "+("in `"+s+"`, but its value is `null`."):"The "+u+" `"+i+"` is marked as required in "+("`"+s+"`, but its value is `undefined`.")):null}return e(n,a,s,o,i)}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}function o(e){function t(t,n,a,s,o,i){var l=t[n],u=v(l);if(u!==e){var m=S[s],d=b(l);return new r("Invalid "+m+" `"+o+"` of type "+("`"+d+"` supplied to `"+a+"`, expected ")+("`"+e+"`."))}return null}return s(t)}function i(){return s(R.thatReturns(null))}function l(e){function t(t,n,a,s,o){if("function"!=typeof e)return new r("Property `"+o+"` of component `"+a+"` has invalid PropType notation inside arrayOf.");var i=t[n];if(!Array.isArray(i)){var l=S[s],u=v(i);return new r("Invalid "+l+" `"+o+"` of type "+("`"+u+"` supplied to `"+a+"`, expected an array."))}for(var m=0;m<i.length;m++){var d=e(i,m,a,s,o+"["+m+"]",E);if(d instanceof Error)return d}return null}return s(t)}function u(){function e(e,t,n,a,s){var o=e[t];if(!w.isValidElement(o)){var i=S[a],l=v(o);return new r("Invalid "+i+" `"+s+"` of type "+("`"+l+"` supplied to `"+n+"`, expected a single ReactElement."))}return null}return s(e)}function m(e){function t(t,n,a,s,o){if(!(t[n]instanceof e)){var i=S[s],l=e.name||C,u=T(t[n]);return new r("Invalid "+i+" `"+o+"` of type "+("`"+u+"` supplied to `"+a+"`, expected ")+("instance of `"+l+"`."))}return null}return s(t)}function d(e){function t(t,n,s,o,i){for(var l=t[n],u=0;u<e.length;u++)if(a(l,e[u]))return null;var m=S[o],d=JSON.stringify(e);return new r("Invalid "+m+" `"+i+"` of value `"+l+"` "+("supplied to `"+s+"`, expected one of "+d+"."))}return Array.isArray(e)?s(t):R.thatReturnsNull}function c(e){function t(t,n,a,s,o){if("function"!=typeof e)return new r("Property `"+o+"` of component `"+a+"` has invalid PropType notation inside objectOf.");var i=t[n],l=v(i);if("object"!==l){var u=S[s];return new r("Invalid "+u+" `"+o+"` of type "+("`"+l+"` supplied to `"+a+"`, expected an object."))}for(var m in i)if(i.hasOwnProperty(m)){var d=e(i,m,a,s,o+"."+m,E);if(d instanceof Error)return d}return null}return s(t)}function p(e){function t(t,n,a,s,o){for(var i=0;i<e.length;i++){var l=e[i];if(null==l(t,n,a,s,o,E))return null}var u=S[s];return new r("Invalid "+u+" `"+o+"` supplied to "+("`"+a+"`."))}return Array.isArray(e)?s(t):R.thatReturnsNull}function h(){function e(e,t,n,a,s){if(!y(e[t])){var o=S[a];return new r("Invalid "+o+" `"+s+"` supplied to "+("`"+n+"`, expected a ReactNode."))}return null}return s(e)}function f(e){function t(t,n,a,s,o){var i=t[n],l=v(i);if("object"!==l){var u=S[s];return new r("Invalid "+u+" `"+o+"` of type `"+l+"` "+("supplied to `"+a+"`, expected `object`."))}for(var m in e){var d=e[m];if(d){var c=d(i,m,a,s,o+"."+m,E);if(c)return c}}return null}return s(t)}function y(e){switch(typeof e){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(y);if(null===e||w.isValidElement(e))return!0;var t=P(e);if(!t)return!1;var n,a=t.call(e);if(t!==e.entries){for(;!(n=a.next()).done;)if(!y(n.value))return!1}else for(;!(n=a.next()).done;){var r=n.value;if(r&&!y(r[1]))return!1}return!0;default:return!1}}function g(e,t){return"symbol"===e||("Symbol"===t["@@toStringTag"]||"function"==typeof Symbol&&t instanceof Symbol)}function v(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":g(t,e)?"symbol":t}function b(e){var t=v(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}function T(e){return e.constructor&&e.constructor.name?e.constructor.name:C}var w=n(24),S=n(113),E=n(316),R=n(11),P=n(115),C=(n(3),"<<anonymous>>"),k={array:o("array"),bool:o("boolean"),func:o("function"),number:o("number"),object:o("object"),string:o("string"),symbol:o("symbol"),any:i(),arrayOf:l,element:u(),instanceOf:m,node:h(),objectOf:c,oneOf:d,oneOfType:p,shape:f};r.prototype=Error.prototype,e.exports=k},251,function(e,t,n){"use strict";function a(e,t,n){this.props=e,this.context=t,this.refs=l,this.updater=n||i}function r(){}var s=n(6),o=n(68),i=n(69),l=n(26);r.prototype=o.prototype,a.prototype=new r,a.prototype.constructor=a,s(a.prototype,o.prototype),a.prototype.isPureReactComponent=!0,e.exports=a},256,function(e,t,n){"use strict";function a(e){return s.isValidElement(e)?void 0:r("143"),e}var r=n(25),s=n(24);n(2);e.exports=a},function(e,t,n){"use strict";function a(e,t){return e&&"object"==typeof e&&null!=e.key?u.escape(e.key):t.toString(36)}function r(e,t,n,s){var c=typeof e;if("undefined"!==c&&"boolean"!==c||(e=null),null===e||"string"===c||"number"===c||"object"===c&&e.$$typeof===i)return n(s,e,""===t?m+a(e,0):t),1;var p,h,f=0,y=""===t?m:t+d;if(Array.isArray(e))for(var g=0;g<e.length;g++)p=e[g],h=y+a(p,g),f+=r(p,h,n,s);else{var v=l(e);if(v){var b,T=v.call(e);if(v!==e.entries)for(var w=0;!(b=T.next()).done;)p=b.value,h=y+a(p,w++),f+=r(p,h,n,s);else for(;!(b=T.next()).done;){var S=b.value;S&&(p=S[1],h=y+u.escape(S[0])+d+a(p,0),f+=r(p,h,n,s))}}else if("object"===c){var E="",R=String(e);o("31","[object Object]"===R?"object with keys {"+Object.keys(e).join(", ")+"}":R,E)}}return f}function s(e,t,n){return null==e?0:r(e,"",t,n)}var o=n(25),i=(n(15),n(112)),l=n(115),u=(n(2),n(310)),m=(n(3),"."),d=":";e.exports=s},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(n,a,r){var o=e(n,a,r),l=o.dispatch,u=[],m={getState:o.getState,dispatch:function(e){return l(e)}};return u=t.map(function(e){return e(m)}),l=i.default.apply(void 0,u)(o.dispatch),s({},o,{dispatch:l})}}}t.__esModule=!0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};t.default=r;var o=n(116),i=a(o)},function(e,t){"use strict";function n(e,t){return function(){return t(e.apply(void 0,arguments))}}function a(e,t){if("function"==typeof e)return n(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var a=Object.keys(e),r={},s=0;s<a.length;s++){var o=a[s],i=e[o];"function"==typeof i&&(r[o]=n(i,t))}return r}t.__esModule=!0,t.default=a},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t){var n=t&&t.type,a=n&&'"'+n.toString()+'"'||"an action";return"Given action "+a+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state.'}function s(e){Object.keys(e).forEach(function(t){var n=e[t],a=n(void 0,{type:i.ActionTypes.INIT});if("undefined"==typeof a)throw new Error('Reducer "'+t+'" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined.');var r="@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".");if("undefined"==typeof n(void 0,{type:r}))throw new Error('Reducer "'+t+'" returned undefined when probed with a random type. '+("Don't try to handle "+i.ActionTypes.INIT+' or other actions in "redux/*" ')+"namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined.")})}function o(e){for(var t=Object.keys(e),n={},a=0;a<t.length;a++){var o=t[a];"function"==typeof e[o]&&(n[o]=e[o])}var i,l=Object.keys(n);try{s(n)}catch(e){i=e}return function(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=arguments[1];if(i)throw i;for(var a=!1,s={},o=0;o<l.length;o++){var u=l[o],m=n[u],d=e[u],c=m(d,t);if("undefined"==typeof c){var p=r(u,t);throw new Error(p)}s[u]=c,a=a||c!==d}return a?s:e}}t.__esModule=!0,t.default=o;var i=n(117),l=n(46),u=(a(l),n(118));a(u)},function(e,t){"use strict";var n=function(e){return"/"===e.charAt(0)},a=function(e,t){for(var n=t,a=n+1,r=e.length;a<r;n+=1,a+=1)e[n]=e[a];e.pop()},r=function(e){var t=arguments.length<=1||void 0===arguments[1]?"":arguments[1],r=e&&e.split("/")||[],s=t&&t.split("/")||[],o=e&&n(e),i=t&&n(t),l=o||i;if(e&&n(e)?s=r:r.length&&(s.pop(),s=s.concat(r)),!s.length)return"/";var u=void 0;if(s.length){var m=s[s.length-1];u="."===m||".."===m||""===m}else u=!1;for(var d=0,c=s.length;c>=0;c--){var p=s[c];"."===p?a(s,c):".."===p?(a(s,c),d++):d&&(a(s,c),d--)}if(!l)for(;d--;d)s.unshift("..");!l||""===s[0]||s[0]&&n(s[0])||s.unshift("");var h=s.join("/");return u&&"/"!==h.substr(-1)&&(h+="/"),h};e.exports=r},function(e,t,n){e.exports=n(326)},function(e,t,n){(function(e,a){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var s,o=n(327),i=r(o);s="undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof e?e:a;var l=(0,i.default)(s);t.default=l}).call(t,function(){return this}(),n(329)(e))},function(e,t){"use strict";function n(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=n},function(e,t){"use strict";t.__esModule=!0;var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function e(t,a){if(t===a)return!0;if(null==t||null==a)return!1;if(Array.isArray(t))return!(!Array.isArray(a)||t.length!==a.length)&&t.every(function(t,n){return e(t,a[n])});var r="undefined"==typeof t?"undefined":n(t),s="undefined"==typeof a?"undefined":n(a);if(r!==s)return!1;if("object"===r){var o=t.valueOf(),i=a.valueOf();if(o!==t||i!==a)return e(o,i);var l=Object.keys(t),u=Object.keys(a);return l.length===u.length&&l.every(function(n){return e(t[n],a[n])})}return!1};t.default=a},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t){!function(e){"use strict";function t(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function n(e){return"string"!=typeof e&&(e=String(e)),e}function a(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return g.iterable&&(t[Symbol.iterator]=function(){return t}),t}function r(e){this.map={},e instanceof r?e.forEach(function(e,t){this.append(t,e)},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function s(e){return e.bodyUsed?Promise.reject(new TypeError("Already read")):void(e.bodyUsed=!0)}function o(e){return new Promise(function(t,n){e.onload=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function i(e){var t=new FileReader,n=o(t);return t.readAsArrayBuffer(e),n}function l(e){var t=new FileReader,n=o(t);return t.readAsText(e),n}function u(e){for(var t=new Uint8Array(e),n=new Array(t.length),a=0;a<t.length;a++)n[a]=String.fromCharCode(t[a]);return n.join("")}function m(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function d(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,e)if("string"==typeof e)this._bodyText=e;else if(g.blob&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(g.formData&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(g.searchParams&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(g.arrayBuffer&&g.blob&&b(e))this._bodyArrayBuffer=m(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!g.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(e)&&!T(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=m(e)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):g.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},g.blob&&(this.blob=function(){var e=s(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?s(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(i)}),this.text=function(){var e=s(this);if(e)return e;if(this._bodyBlob)return l(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(u(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},g.formData&&(this.formData=function(){return this.text().then(h)}),this.json=function(){return this.text().then(JSON.parse)},this}function c(e){var t=e.toUpperCase();return w.indexOf(t)>-1?t:e}function p(e,t){t=t||{};var n=t.body;if(e instanceof p){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new r(e.headers)),this.method=e.method,this.mode=e.mode,n||null==e._bodyInit||(n=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new r(t.headers)),this.method=c(t.method||this.method||"GET"),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function h(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var n=e.split("="),a=n.shift().replace(/\+/g," "),r=n.join("=").replace(/\+/g," ");t.append(decodeURIComponent(a),decodeURIComponent(r))}}),t}function f(e){var t=new r;return e.split(/\r?\n/).forEach(function(e){var n=e.split(":"),a=n.shift().trim();if(a){var r=n.join(":").trim();t.append(a,r)}}),t}function y(e,t){t||(t={}),this.type="default",this.status="status"in t?t.status:200,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new r(t.headers),this.url=t.url||"",this._initBody(e)}if(!e.fetch){var g={searchParams:"URLSearchParams"in e,iterable:"Symbol"in e&&"iterator"in Symbol,blob:"FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in e,arrayBuffer:"ArrayBuffer"in e};if(g.arrayBuffer)var v=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],b=function(e){return e&&DataView.prototype.isPrototypeOf(e)},T=ArrayBuffer.isView||function(e){return e&&v.indexOf(Object.prototype.toString.call(e))>-1};r.prototype.append=function(e,a){e=t(e),a=n(a);var r=this.map[e];this.map[e]=r?r+","+a:a},r.prototype.delete=function(e){delete this.map[t(e)]},r.prototype.get=function(e){return e=t(e),this.has(e)?this.map[e]:null},r.prototype.has=function(e){return this.map.hasOwnProperty(t(e))},r.prototype.set=function(e,a){this.map[t(e)]=n(a)},r.prototype.forEach=function(e,t){for(var n in this.map)this.map.hasOwnProperty(n)&&e.call(t,this.map[n],n,this)},r.prototype.keys=function(){var e=[];return this.forEach(function(t,n){e.push(n)}),a(e)},r.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),a(e)},r.prototype.entries=function(){var e=[];return this.forEach(function(t,n){e.push([n,t])}),a(e)},g.iterable&&(r.prototype[Symbol.iterator]=r.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];p.prototype.clone=function(){return new p(this,{body:this._bodyInit})},d.call(p.prototype),d.call(y.prototype),y.prototype.clone=function(){return new y(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new r(this.headers),url:this.url})},y.error=function(){var e=new y(null,{status:0,statusText:""});return e.type="error",e};var S=[301,302,303,307,308];y.redirect=function(e,t){if(S.indexOf(t)===-1)throw new RangeError("Invalid status code");return new y(null,{status:t,headers:{location:e}})},e.Headers=r,e.Request=p,e.Response=y,e.fetch=function(e,t){return new Promise(function(n,a){var r=new p(e,t),s=new XMLHttpRequest;s.onload=function(){var e={status:s.status,statusText:s.statusText,headers:f(s.getAllResponseHeaders()||"")};e.url="responseURL"in s?s.responseURL:e.headers.get("X-Request-URL");var t="response"in s?s.response:s.responseText;n(new y(t,e))},s.onerror=function(){a(new TypeError("Network request failed"))},s.ontimeout=function(){a(new TypeError("Network request failed"))},s.open(r.method,r.url,!0),"include"===r.credentials&&(s.withCredentials=!0),"responseType"in s&&g.blob&&(s.responseType="blob"),r.headers.forEach(function(e,t){s.setRequestHeader(t,e)}),s.send("undefined"==typeof r._bodyInit?null:r._bodyInit)})},e.fetch.polyfill=!0}}("undefined"!=typeof self?self:this)},function(e,t,n,a){"use strict";var r=n(a),s=(n(2),function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)}),o=function(e,t){var n=this;if(n.instancePool.length){var a=n.instancePool.pop();return n.call(a,e,t),a}return new n(e,t)},i=function(e,t,n){var a=this;if(a.instancePool.length){var r=a.instancePool.pop();return a.call(r,e,t,n),r}return new a(e,t,n)},l=function(e,t,n,a){var r=this;if(r.instancePool.length){var s=r.instancePool.pop();return r.call(s,e,t,n,a),s}return new r(e,t,n,a)},u=function(e){var t=this;e instanceof t?void 0:r("25"),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},m=10,d=s,c=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||d,n.poolSize||(n.poolSize=m),n.release=u,n},p={addPoolingTo:c,oneArgumentPooler:s,twoArgumentPooler:o,threeArgumentPooler:i,fourArgumentPooler:l};e.exports=p}]));
//# sourceMappingURL=main.fce1762e.js.map